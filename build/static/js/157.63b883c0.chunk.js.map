{"version":3,"file":"static/js/157.63b883c0.chunk.js","mappings":"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","sources":["components/ClientDashboardAdmin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { sortClientsByName } from '../utils/helpers';\n\nconst ClientDashboardAdmin = ({ clients, onSelectClient }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortedClients, setSortedClients] = useState([]);\n  const [expandedClient, setExpandedClient] = useState(null); // Nuevo estado para el cliente expandido\n\n  useEffect(() => {\n    const filtered = clients.filter(client =>\n      client.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      client.email.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setSortedClients(sortClientsByName(filtered));\n  }, [clients, searchTerm]);\n\n  const handleToggleExpand = (clientId) => {\n    setExpandedClient(expandedClient === clientId ? null : clientId);\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Administración de Clientes</h2>\n\n      <div className=\"mb-6\">\n        <input\n          type=\"text\"\n          placeholder=\"Buscar por nombre o email...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n        />\n      </div>\n\n      {sortedClients.length === 0 ? (\n        <p className=\"text-gray-600 text-center py-4\">No hay clientes registrados que coincidan con la búsqueda.</p>\n      ) : (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full bg-white rounded-lg shadow-sm\">\n            <thead>\n              <tr className=\"bg-gray-100 border-b border-gray-200\">\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Última Rutina</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Progreso</th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {sortedClients.map((client) => (\n                <React.Fragment key={client.id}>\n                  <tr>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      <button\n                        onClick={() => handleToggleExpand(client.id)}\n                        className=\"flex items-center text-blue-600 hover:text-blue-800 transition-colors\"\n                      >\n                        {expandedClient === client.id ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4 mr-1\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" />\n                          </svg>\n                        ) : (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4 mr-1\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\n                          </svg>\n                        )}\n                        {client.name}\n                      </button>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{client.email}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{client.lastRoutine}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{client.progress}%</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2\">\n                      <button\n                        onClick={() => onSelectClient(client)}\n                        className=\"px-3 py-1 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-all duration-300 ease-in-out text-xs font-semibold shadow-sm\"\n                      >\n                        Ver Rutinas\n                      </button>\n                    </td>\n                  </tr>\n                  {expandedClient === client.id && (\n                    <tr>\n                      <td colSpan=\"5\" className=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700\">\n                          <div>\n                            <p><span className=\"font-semibold\">Edad:</span> {client.age || 'N/A'}</p>\n                            <p><span className=\"font-semibold\">Peso:</span> {client.weight || 'N/A'} kg</p>\n                            <p><span className=\"font-semibold\">Altura:</span> {client.height || 'N/A'} cm</p>\n                          </div>\n                          <div>\n                            <p><span className=\"font-semibold\">Teléfono:</span> {client.phone || 'N/A'}</p>\n                            <p><span className=\"font-semibold\">Objetivos:</span> {client.goals && client.goals.length > 0 ? client.goals.join(', ') : 'N/A'}</p>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClientDashboardAdmin;"],"names":["_ref","clients","onSelectClient","searchTerm","setSearchTerm","useState","sortedClients","setSortedClients","expandedClient","setExpandedClient","useEffect","filtered","filter","client","name","toLowerCase","includes","email","sortClientsByName","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","length","map","React","onClick","handleToggleExpand","clientId","id","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","lastRoutine","progress","colSpan","age","weight","height","phone","goals","join"],"sourceRoot":""}