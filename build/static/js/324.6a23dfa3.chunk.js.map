{"version":3,"file":"static/js/324.6a23dfa3.chunk.js","mappings":"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","sources":["components/RoutineDetail.js"],"sourcesContent":["import React from \"react\";\n\nconst RoutineDetail = ({\n  routine,\n  onUpdateRoutine = () => {},\n  isEditable,\n  onAddExerciseClick = () => {},\n  canAddDailyTracking = false,\n}) => {\n  // Debug: Verificar que routine tiene ID\n  console.log('RoutineDetail - routine recibida:', routine);\n  console.log('RoutineDetail - routine.id:', routine?.id);\n\n  // ✅ CORRECTO - Todos los hooks DENTRO de la función del componente\n  const [showExerciseModal, setShowExerciseModal] = React.useState(false);\n  const [editExercise, setEditExercise] = React.useState(null);\n  const [exerciseName, setExerciseName] = React.useState(\"\");\n  const [exerciseSets, setExerciseSets] = React.useState(\"\");\n  const [exerciseReps, setExerciseReps] = React.useState(\"\");\n  const [exerciseWeight, setExerciseWeight] = React.useState(\"\");\n  const [exerciseTime, setExerciseTime] = React.useState(\"\");\n  const [exerciseRest, setExerciseRest] = React.useState(\"\");\n  const [exerciseDay, setExerciseDay] = React.useState(\"\");\n  const [exerciseSection, setExerciseSection] = React.useState(\"\");\n  const [exerciseMedia, setExerciseMedia] = React.useState(\"\"); // Nuevo campo para media\n\n  // Handler para editar ejercicio\n  const handleEditExerciseClick = (ex) => {\n    setEditExercise(ex);\n    setExerciseName(ex.name || \"\");\n    setExerciseSets(ex.sets || \"\");\n    setExerciseReps(ex.reps || \"\");\n    setExerciseWeight(ex.weight || \"\");\n    setExerciseTime(ex.time || \"\");\n    setExerciseRest(ex.rest || \"\");\n    setExerciseDay(ex.day || \"\");\n    setExerciseSection(ex.section || \"\");\n    setExerciseMedia(ex.media || \"\"); // Incluir el campo media\n    setShowExerciseModal(true);\n  };\n\n  // Calcular semanas de la rutina\n  const getWeekOptions = () => {\n    if (!routine.startDate || !routine.endDate) return [];\n    const start = new Date(routine.startDate);\n    const end = new Date(routine.endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const numWeeks = Math.max(1, Math.ceil(diffDays / 7));\n    return Array.from({ length: numWeeks }, (_, i) => ({ value: (i + 1).toString(), label: `Semana ${i + 1}` }));\n  };\n  // Definir exercises al inicio para evitar ReferenceError\n  const exercises = Array.isArray(routine.exercises) ? routine.exercises : [];\n\n  // Estados para colapso/expansión - Inicializar con todos los días y secciones colapsadas\n  const [collapsedDays, setCollapsedDays] = React.useState(() => {\n    // Crear un Set con todos los días que tienen ejercicios\n    const allDays = new Set();\n    exercises.forEach(ex => {\n      const day = ex.day || 'Sin día';\n      allDays.add(day);\n    });\n    return allDays;\n  });\n\n  // Función para renderizar detalles del ejercicio\n  const renderExerciseDetails = (ex) => (\n    <div className=\"grid grid-cols-2 gap-2 mb-2 text-sm text-gray-700\">\n      {ex.sets && <div><span className=\"font-semibold\">Series:</span> {ex.sets}</div>}\n      {ex.reps && <div><span className=\"font-semibold\">Reps:</span> {ex.reps}</div>}\n      {ex.time && <div><span className=\"font-semibold\">Tiempo (seg):</span> {ex.time}</div>}\n      {ex.rest && <div><span className=\"font-semibold\">Descanso (seg):</span> {ex.rest}</div>}\n      {ex.weight && <div><span className=\"font-semibold\">Peso (Kg):</span> {ex.weight}</div>}\n    </div>\n  );\n\n  const [collapsedSections, setCollapsedSections] = React.useState(() => {\n    // Crear un Set con todas las combinaciones día-sección que tienen ejercicios\n    const allSections = new Set();\n    exercises.forEach(ex => {\n      const day = ex.day || 'Sin día';\n      const section = ex.section || 'Sin sección';\n      allSections.add(`${day}-${section}`);\n    });\n    return allSections;\n  });\n\n  // Opciones para el desplegable de día\n  const dayOptions = [\n    { value: '', label: 'Selecciona un día' },\n    { value: '1', label: 'Día 1' },\n    { value: '2', label: 'Día 2' },\n    { value: '3', label: 'Día 3' },\n    { value: '4', label: 'Día 4' },\n    { value: '5', label: 'Día 5' },\n    { value: '6', label: 'Día 6' },\n    { value: '7', label: 'Día 7' },\n  ];\n\n  // Opciones para el desplegable de sección (igual que en AddExerciseScreen)\n  const sectionOptions = [\n    { value: '', label: 'Selecciona una sección' },\n    { value: 'Warm Up', label: 'Warm Up' },\n    { value: 'Trabajo DS', label: 'Trabajo DS' },\n    { value: 'Out', label: 'Out' },\n  ];\n\n  // Estado para modales y formularios\n  // Estado para seguimiento semanal\n  const [showWeeklyModal, setShowWeeklyModal] = React.useState(false);\n  const [weeklyExercise, setWeeklyExercise] = React.useState(null);\n  const [weekNumber, setWeekNumber] = React.useState(\"\");\n  const [weekWeight, setWeekWeight] = React.useState(\"\");\n  const [weekNotes, setWeekNotes] = React.useState(\"\");\n  \n  // Estado para colapsar seguimiento semanal por ejercicio\n  const [collapsedWeeklyTracking, setCollapsedWeeklyTracking] = React.useState(new Set());\n\n  // Estado para seguimiento diario general de rutina\n  const [showDailyModal, setShowDailyModal] = React.useState(false);\n  const [dailyDate, setDailyDate] = React.useState(\"\");\n  const [dailyPF, setDailyPF] = React.useState(\"\");\n  const [dailyPE, setDailyPE] = React.useState(\"\");\n\n  // Estado para editar información de rutina\n  const [showRoutineModal, setShowRoutineModal] = React.useState(false);\n  const [routineName, setRoutineName] = React.useState(\"\");\n  const [routineStartDate, setRoutineStartDate] = React.useState(\"\");\n  const [routineEndDate, setRoutineEndDate] = React.useState(\"\");\n  const [routineDescription, setRoutineDescription] = React.useState(\"\");\n\n  // Funciones para manejar colapso/expansión\n  const toggleDay = (day) => {\n    const newCollapsedDays = new Set(collapsedDays);\n    if (newCollapsedDays.has(day)) {\n      newCollapsedDays.delete(day);\n    } else {\n      newCollapsedDays.add(day);\n    }\n    setCollapsedDays(newCollapsedDays);\n  };\n\n  const toggleSection = (daySection) => {\n    const newCollapsedSections = new Set(collapsedSections);\n    if (newCollapsedSections.has(daySection)) {\n      newCollapsedSections.delete(daySection);\n    } else {\n      newCollapsedSections.add(daySection);\n    }\n    setCollapsedSections(newCollapsedSections);\n  };\n\n  const toggleWeeklyTracking = (exerciseId) => {\n    const newCollapsedWeeklyTracking = new Set(collapsedWeeklyTracking);\n    if (newCollapsedWeeklyTracking.has(exerciseId)) {\n      newCollapsedWeeklyTracking.delete(exerciseId);\n    } else {\n      newCollapsedWeeklyTracking.add(exerciseId);\n    }\n    setCollapsedWeeklyTracking(newCollapsedWeeklyTracking);\n  };\n\n  // Función para calcular el mayor peso levantado por ejercicio\n  const getMaxWeightForExercise = (exercise) => {\n    if (!exercise.weeklyData) return 0;\n    const weights = Object.values(exercise.weeklyData)\n      .map(data => parseFloat(data.weight) || 0)\n      .filter(weight => weight > 0);\n    return weights.length > 0 ? Math.max(...weights) : 0;\n  };\n\n  // Función para renderizar todas las semanas del seguimiento\n  const renderWeeklyTracking = (exercise) => {\n    if (!routine.startDate || !routine.endDate) return null;\n    \n    const weekOptions = getWeekOptions();\n    const isCollapsed = collapsedWeeklyTracking.has(exercise.id);\n    const maxWeight = getMaxWeightForExercise(exercise);\n    \n    return (\n      <div className=\"mb-4\">\n        <div \n          className=\"flex items-center justify-between cursor-pointer p-2 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors\"\n          onClick={() => toggleWeeklyTracking(exercise.id)}\n        >\n          <h6 className=\"text-sm font-semibold text-purple-700\">\n            Seguimiento Semanal {maxWeight > 0 && `(Máximo: ${maxWeight} kg)`}\n          </h6>\n          <svg \n            className={`w-4 h-4 text-purple-700 transform transition-transform ${isCollapsed ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </div>\n        \n        {!isCollapsed && (\n          <div className=\"mt-2\">\n            <table className=\"w-full text-sm border border-purple-300 rounded-lg overflow-hidden\">\n              <thead className=\"bg-purple-100\">\n                <tr>\n                  <th className=\"px-2 py-1\">Semana</th>\n                  <th className=\"px-2 py-1\">Peso (kg)</th>\n                  <th className=\"px-2 py-1\">Notas</th>\n                  <th className=\"px-2 py-1\">Fecha</th>\n                </tr>\n              </thead>\n              <tbody>\n                {weekOptions.map(week => {\n                  const weekData = exercise.weeklyData?.[week.value];\n                  return (\n                    <tr key={week.value} className=\"border-t\">\n                      <td className=\"px-2 py-1 font-medium\">{week.label}</td>\n                      <td className=\"px-2 py-1\">\n                        {weekData?.weight ? `${weekData.weight} kg` : '-'}\n                      </td>\n                      <td className=\"px-2 py-1\">\n                        {weekData?.generalNotes || '-'}\n                      </td>\n                      <td className=\"px-2 py-1 text-xs text-gray-500\">\n                        {weekData?.date || '-'}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            {maxWeight > 0 && (\n              <div className=\"mt-2 p-2 bg-green-50 rounded text-sm\">\n                <span className=\"font-semibold text-green-700\">\n                  Mayor peso levantado: {maxWeight} kg\n                </span>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleOpenWeeklyModal = (exercise) => {\n    setWeeklyExercise(exercise);\n    setWeekNumber(\"\");\n    setWeekWeight(\"\");\n    setWeekNotes(\"\");\n    setShowWeeklyModal(true);\n  };\n\n  const handleCloseWeeklyModal = () => {\n    setShowWeeklyModal(false);\n    setWeeklyExercise(null);\n    setWeekNumber(\"\");\n    setWeekWeight(\"\");\n    setWeekNotes(\"\");\n  };\n\n  // Handlers para seguimiento diario general\n  const handleOpenDailyModal = () => {\n    setDailyDate(new Date().toISOString().split('T')[0]); // Fecha actual por defecto\n    setDailyPF(\"\");\n    setDailyPE(\"\");\n    setShowDailyModal(true);\n  };\n\n  const handleCloseDailyModal = () => {\n    setShowDailyModal(false);\n    setDailyDate(\"\");\n    setDailyPF(\"\");\n    setDailyPE(\"\");\n  };\n\n  const handleSaveDaily = () => {\n    if (!dailyDate || !dailyPF || !dailyPE) return;\n    \n    // Intentar obtener el ID de diferentes formas\n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    \n    if (!routineId) {\n      console.error('Error: ID de rutina no encontrado para seguimiento diario', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n    \n    // Crear el objeto de datos diarios para la rutina\n    const dailyData = {\n      date: dailyDate,\n      pf: parseInt(dailyPF),\n      pe: parseInt(dailyPE),\n      timestamp: new Date().toISOString()\n    };\n\n    // Llamar a la función para actualizar la rutina\n    onUpdateRoutine({\n      id: routineId,\n      action: 'addDailyRoutineTracking',\n      data: dailyData\n    });\n\n    handleCloseDailyModal();\n  };\n\n  // Handlers para editar información de rutina\n  const handleOpenRoutineModal = () => {\n    setRoutineName(routine.name || \"\");\n    setRoutineStartDate(routine.startDate || \"\");\n    setRoutineEndDate(routine.endDate || \"\");\n    setRoutineDescription(routine.description || \"\");\n    setShowRoutineModal(true);\n  };\n\n  const handleCloseRoutineModal = () => {\n    setShowRoutineModal(false);\n    setRoutineName(\"\");\n    setRoutineStartDate(\"\");\n    setRoutineEndDate(\"\");\n    setRoutineDescription(\"\");\n  };\n\n  const handleSaveRoutine = () => {\n    // Debug adicional al momento de guardar\n    console.log('handleSaveRoutine - routine completa:', routine);\n    console.log('handleSaveRoutine - routine.id:', routine?.id);\n    console.log('handleSaveRoutine - typeof routine.id:', typeof routine?.id);\n    \n    // Intentar obtener el ID de diferentes formas\n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    console.log('handleSaveRoutine - routineId encontrado:', routineId);\n    \n    // Validar que exista el ID de la rutina\n    if (!routine || !routineId) {\n      console.error('Error: ID de rutina no encontrado', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n\n    // Crear el objeto de datos de la rutina\n    const routineData = {\n      name: routineName,\n      startDate: routineStartDate,\n      endDate: routineEndDate,\n      description: routineDescription\n    };\n\n    console.log('Guardando rutina:', {\n      id: routineId,\n      action: 'updateRoutineInfo',\n      data: routineData\n    });\n\n    // Llamar a la función para actualizar la rutina\n    onUpdateRoutine({\n      id: routineId,\n      action: 'updateRoutineInfo',\n      data: routineData\n    });\n\n    handleCloseRoutineModal();\n  };\n\n  const handleSaveWeekly = () => {\n    if (!weekNumber || !weeklyExercise) return;\n    \n    // Intentar obtener el ID de diferentes formas\n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    \n    if (!routineId) {\n      console.error('Error: ID de rutina no encontrado para seguimiento semanal', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n    \n    // Crear el objeto de datos semanales\n    const weeklyData = {\n      week: weekNumber,\n      weight: weekWeight,\n      generalNotes: weekNotes,\n      date: new Date().toISOString().split('T')[0] // Fecha actual\n    };\n\n    // Llamar a la función para actualizar la rutina\n    onUpdateRoutine({\n      id: routineId,\n      action: 'addWeeklyTracking',\n      data: {\n        exerciseId: weeklyExercise.id,\n        weeklyData: weeklyData\n      }\n    });\n\n    handleCloseWeeklyModal();\n  };\n\n  // Agrupar y renderizar ejercicios por día y sección\n  let ejerciciosPorDia = null;\n  if (exercises.length === 0) {\n    ejerciciosPorDia = <p className=\"text-gray-600 text-center py-4\">No hay ejercicios para seguimiento.</p>;\n  } else {\n    // Agrupar por día y luego por sección\n    const groupedByDay = exercises.reduce((acc, ex) => {\n      const day = ex.day || 'Sin día';\n      if (!acc[day]) acc[day] = {};\n      \n      const section = ex.section || 'Sin sección';\n      if (!acc[day][section]) acc[day][section] = [];\n      acc[day][section].push(ex);\n      \n      return acc;\n    }, {});\n\n    // Orden específico de las secciones\n    const sectionOrder = ['Warm Up', 'Trabajo DS', 'Out'];\n    \n    // Ordenar días\n    const orderedDays = [\n      '1','2','3','4','5','6','7'\n    ].filter(d => groupedByDay[d]).concat(Object.keys(groupedByDay).filter(d => !['1','2','3','4','5','6','7'].includes(d)));\n\n    ejerciciosPorDia = orderedDays.map(day => (\n      <div key={day} className=\"mb-6\">\n        <div \n          className=\"flex items-center justify-between cursor-pointer p-3 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors\"\n          onClick={() => toggleDay(day)}\n        >\n          <h4 className=\"text-lg font-bold text-blue-700\">\n            {['1','2','3','4','5','6','7'].includes(day) ? `Día ${day}` : 'Sin día asignado'}\n          </h4>\n          <svg \n            className={`w-5 h-5 text-blue-700 transform transition-transform ${collapsedDays.has(day) ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </div>\n        \n        {!collapsedDays.has(day) && (\n          <div className=\"mt-4\">\n            {/* Renderizar secciones en orden específico */}\n            {sectionOrder.map(sectionName => {\n              if (!groupedByDay[day][sectionName]) return null;\n              \n              const sectionKey = `${day}-${sectionName}`;\n              \n              return (\n                <div key={sectionName} className=\"mb-4\">\n                  <div \n                    className=\"flex items-center justify-between cursor-pointer p-2 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors\"\n                    onClick={() => toggleSection(sectionKey)}\n                  >\n                    <h5 className=\"text-md font-semibold text-purple-700\">{sectionName}</h5>\n                    <svg \n                      className={`w-4 h-4 text-purple-700 transform transition-transform ${collapsedSections.has(sectionKey) ? 'rotate-180' : ''}`}\n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                  \n                  {!collapsedSections.has(sectionKey) && (\n                    <div className=\"grid gap-4 mt-3\">\n                      {groupedByDay[day][sectionName].map((ex) => (\n                        <div key={ex.id} className=\"p-4 bg-gray-50 rounded-xl shadow\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center gap-2\">\n                              <h6 className=\"text-md font-semibold text-gray-800\">{ex.name}</h6>\n                              {ex.media && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n                                  title=\"Ver video del ejercicio\"\n                                  onClick={() => window.open(ex.media, '_blank')}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.91 11.672a.375.375 0 0 1 0 .656l-5.603 3.113a.375.375 0 0 1-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112Z\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                            <div className=\"flex gap-2\">\n                              {/* Botón para seguimiento semanal */}\n                              {canAddDailyTracking && (\n                                <button\n                                  className=\"p-1 rounded-full bg-purple-100 hover:bg-purple-200 text-purple-700\"\n                                  title=\"Agregar seguimiento semanal\"\n                                  onClick={() => handleOpenWeeklyModal(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para editar ejercicio si esEditable */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700\"\n                                  title=\"Editar ejercicio\"\n                                  onClick={() => handleEditExerciseClick(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                          \n                          {/* Mostrar detalles del ejercicio */}\n                          {renderExerciseDetails(ex)}\n\n                          {/* Mostrar seguimiento semanal */}\n                          {renderWeeklyTracking(ex)}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n            \n            {/* Mostrar ejercicios de secciones no estándar */}\n            {Object.keys(groupedByDay[day]).filter(section => !sectionOrder.includes(section)).map(sectionName => {\n              const sectionKey = `${day}-${sectionName}`;\n              \n              return (\n                <div key={sectionName} className=\"mb-4\">\n                  <div \n                    className=\"flex items-center justify-between cursor-pointer p-2 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                    onClick={() => toggleSection(sectionKey)}\n                  >\n                    <h5 className=\"text-md font-semibold text-gray-700\">{sectionName}</h5>\n                    <svg \n                      className={`w-4 h-4 text-gray-700 transform transition-transform ${collapsedSections.has(sectionKey) ? 'rotate-180' : ''}`}\n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                  \n                  {!collapsedSections.has(sectionKey) && (\n                    <div className=\"grid gap-4 mt-3\">\n                      {groupedByDay[day][sectionName].map((ex) => (\n                        <div key={ex.id} className=\"p-4 bg-gray-50 rounded-xl shadow\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center gap-2\">\n                              <h6 className=\"text-md font-semibold text-gray-800\">{ex.name}</h6>\n                              {ex.media && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n                                  title=\"Ver video del ejercicio\"\n                                  onClick={() => window.open(ex.media, '_blank')}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.91 11.672a.375.375 0 0 1 0 .656l-5.603 3.113a.375.375 0 0 1-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112Z\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                            <div className=\"flex gap-2\">\n                              {/* Botón para seguimiento semanal */}\n                              {canAddDailyTracking && (\n                                <button\n                                  className=\"p-1 rounded-full bg-purple-100 hover:bg-purple-200 text-purple-700\"\n                                  title=\"Agregar seguimiento semanal\"\n                                  onClick={() => handleOpenWeeklyModal(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para editar ejercicio si esEditable */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700\"\n                                  title=\"Editar ejercicio\"\n                                  onClick={() => handleEditExerciseClick(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                          \n                          {/* Mostrar detalles del ejercicio */}\n                          {renderExerciseDetails(ex)}\n\n                          {/* Mostrar seguimiento semanal */}\n                          {renderWeeklyTracking(ex)}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    ));\n  }\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      {/* Sección de información de la rutina */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-lg font-bold text-gray-700\">Información de la rutina</h2>\n          {/* Botón para editar información de rutina, solo para admin y si existe ID */}\n          {isEditable && (routine?.id || routine?.routine_id || routine?.client_id) && (\n            <button\n              onClick={handleOpenRoutineModal}\n              className=\"p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-colors shadow-md\"\n              title=\"Editar información de rutina\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n              </svg>\n            </button>\n          )}\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n          <div>\n            <span className=\"font-semibold text-gray-700\">Fecha de inicio:</span>\n            <p className=\"text-gray-600\">{routine.startDate ? new Date(routine.startDate).toLocaleDateString() : \"No definida\"}</p>\n          </div>\n          <div>\n            <span className=\"font-semibold text-gray-700\">Fecha de fin:</span>\n            <p className=\"text-gray-600\">{routine.endDate ? new Date(routine.endDate).toLocaleDateString() : \"No definida\"}</p>\n          </div>\n        </div>\n        \n        {routine.description && routine.description.trim() !== \"\" && (\n          <div className=\"mt-4\">\n            <span className=\"font-semibold text-gray-700\">Descripción:</span>\n            <p className=\"text-gray-600 mt-1\">{routine.description}</p>\n          </div>\n        )}\n      </div>\n\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-bold text-gray-700\">Ejercicios</h3>\n          <div className=\"flex items-center gap-3\">\n            {/* Botón para seguimiento diario general de rutina */}\n            {canAddDailyTracking && (\n              <button\n                onClick={handleOpenDailyModal}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-semibold shadow-md flex items-center\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5 mr-2\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5a2.25 2.25 0 0 0 2.25-2.25m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5a2.25 2.25 0 0 1 21 9v7.5m-9-13.5h.008v.008H12V8.25Z\" />\n                </svg>\n                PF y PE\n              </button>\n            )}\n            {/* Botón ícono para agregar ejercicio, solo para admin */}\n            {isEditable && (\n              <button\n                onClick={() => onAddExerciseClick()}\n                className=\"p-2 bg-green-600 text-white rounded-full hover:bg-green-700 transition-colors shadow-md\"\n                title=\"Agregar Ejercicio\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n              </button>\n            )}\n          </div>\n        </div>\n        {ejerciciosPorDia}\n        \n        {/* Mostrar seguimiento diario general de la rutina */}\n        {routine.dailyTracking && Object.keys(routine.dailyTracking).length > 0 && (\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n            <h4 className=\"text-lg font-bold text-blue-700 mb-4\">Percepciones</h4>\n            <div className=\"max-h-40 overflow-y-auto\">\n              <table className=\"w-full text-sm border border-blue-300 rounded-lg overflow-hidden\">\n                <thead className=\"bg-blue-100\">\n                  <tr>\n                    <th className=\"px-3 py-2\">Fecha</th>\n                    <th className=\"px-3 py-2\">PF (0-5)</th>\n                    <th className=\"px-3 py-2\">PE (0-5)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(routine.dailyTracking)\n                    .sort(([a], [b]) => new Date(b) - new Date(a))\n                    .map(([date, data]) => (\n                      <tr key={date} className=\"border-t\">\n                        <td className=\"px-3 py-2\">{date}</td>\n                        <td className=\"px-3 py-2\">{data.pf}</td>\n                        <td className=\"px-3 py-2\">{data.pe}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Modal para seguimiento diario general */}\n      {showDailyModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Seguimiento Diario de la Rutina</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">Registra tu percepción de fatiga y esfuerzo</p>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha del entrenamiento\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full border rounded px-3 py-2\"\n                value={dailyDate}\n                onChange={e => setDailyDate(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Percepción de Fatiga (PF): {dailyPF}/5\n              </label>\n              <select\n                className=\"w-full border rounded px-3 py-2\"\n                value={dailyPF}\n                onChange={e => setDailyPF(e.target.value)}\n              >\n                <option value=\"\">Selecciona PF (0-5)</option>\n                <option value=\"0\">0 - Sin fatiga</option>\n                <option value=\"1\">1 - Muy poca fatiga</option>\n                <option value=\"2\">2 - Poca fatiga</option>\n                <option value=\"3\">3 - Fatiga moderada</option>\n                <option value=\"4\">4 - Mucha fatiga</option>\n                <option value=\"5\">5 - Fatiga extrema</option>\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Percepción de Esfuerzo (PE): {dailyPE}/5\n              </label>\n              <select\n                className=\"w-full border rounded px-3 py-2\"\n                value={dailyPE}\n                onChange={e => setDailyPE(e.target.value)}\n              >\n                <option value=\"\">Selecciona PE (0-5)</option>\n                <option value=\"0\">0 - Sin esfuerzo</option>\n                <option value=\"1\">1 - Muy poco esfuerzo</option>\n                <option value=\"2\">2 - Poco esfuerzo</option>\n                <option value=\"3\">3 - Esfuerzo moderado</option>\n                <option value=\"4\">4 - Mucho esfuerzo</option>\n                <option value=\"5\">5 - Esfuerzo extremo</option>\n              </select>\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\n                onClick={handleCloseDailyModal}\n              >\n                Cancelar\n              </button>\n              <button\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                onClick={handleSaveDaily}\n                disabled={!dailyDate || !dailyPF || !dailyPE}\n              >\n                Guardar\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Modal para agregar seguimiento semanal */}\n      {showWeeklyModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Agregar seguimiento semanal</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">\n              Ejercicio: <span className=\"font-semibold\">{weeklyExercise?.name}</span>\n            </p>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Semana del entrenamiento\n              </label>\n              <select\n                className=\"w-full border rounded px-3 py-2\"\n                value={weekNumber}\n                onChange={e => setWeekNumber(e.target.value)}\n              >\n                <option value=\"\">Selecciona la semana</option>\n                {getWeekOptions().map(opt => (\n                  <option key={opt.value} value={opt.value}>{opt.label}</option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Peso levantado (kg)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.1\"\n                className=\"w-full border rounded px-3 py-2\"\n                placeholder=\"Ej: 50.5\"\n                value={weekWeight}\n                onChange={e => setWeekWeight(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Notas adicionales ({weekNotes.length}/100)\n              </label>\n              <textarea\n                className=\"w-full border rounded px-3 py-2\"\n                placeholder=\"Observaciones sobre el entrenamiento...\"\n                maxLength={100}\n                rows={3}\n                value={weekNotes}\n                onChange={e => setWeekNotes(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\n                onClick={handleCloseWeeklyModal}\n              >\n                Cancelar\n              </button>\n              <button\n                className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600\"\n                onClick={handleSaveWeekly}\n                disabled={!weekNumber || !weekWeight}\n              >\n                Guardar\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Modal para editar información de rutina */}\n      {showRoutineModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Editar información de rutina</h3>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Nombre de la rutina\n              </label>\n              <input\n                type=\"text\"\n                className=\"w-full border rounded px-3 py-2\"\n                placeholder=\"Nombre de la rutina\"\n                value={routineName}\n                onChange={e => setRoutineName(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha de inicio\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full border rounded px-3 py-2\"\n                value={routineStartDate}\n                onChange={e => setRoutineStartDate(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha de fin\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full border rounded px-3 py-2\"\n                value={routineEndDate}\n                onChange={e => setRoutineEndDate(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Descripción ({routineDescription.length}/250)\n              </label>\n              <textarea\n                className=\"w-full border rounded px-3 py-2\"\n                placeholder=\"Descripción de la rutina (máx 250 caracteres)\"\n                maxLength={250}\n                rows={4}\n                value={routineDescription}\n                onChange={e => setRoutineDescription(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\n                onClick={handleCloseRoutineModal}\n              >\n                Cancelar\n              </button>\n              <button\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                onClick={handleSaveRoutine}\n              >\n                Guardar\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Modal para editar ejercicio */}\n      {showExerciseModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Editar ejercicio</h3>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Nombre:</label>\n                <input\n                  type=\"text\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Nombre del ejercicio\"\n                  value={exerciseName}\n                  onChange={e => setExerciseName(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Sección:</label>\n                <select\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  value={exerciseSection}\n                  onChange={e => setExerciseSection(e.target.value)}\n                >\n                  {sectionOptions.map(opt => (\n                    <option key={opt.value} value={opt.value}>{opt.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Día:</label>\n                <select\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  value={exerciseDay}\n                  onChange={e => setExerciseDay(e.target.value)}\n                >\n                  {dayOptions.map(opt => (\n                    <option key={opt.value} value={opt.value}>{opt.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Series:</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Series\"\n                  value={exerciseSets}\n                  onChange={e => setExerciseSets(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Repeticiones:</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Repeticiones\"\n                  value={exerciseReps}\n                  onChange={e => setExerciseReps(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Peso (Kg):</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Peso (Kg)\"\n                  value={exerciseWeight}\n                  onChange={e => setExerciseWeight(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Tiempo (seg):</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Tiempo (segundos)\"\n                  value={exerciseTime}\n                  onChange={e => setExerciseTime(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Descanso (seg):</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Descanso (segundos)\"\n                  value={exerciseRest}\n                  onChange={e => setExerciseRest(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Media:</label>\n                <input\n                  type=\"url\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"URL del video o imagen\"\n                  value={exerciseMedia}\n                  onChange={e => setExerciseMedia(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowExerciseModal(false);\n                  setEditExercise(null);\n                }}\n              >Cancelar</button>\n              <button\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                onClick={() => {\n                  // DEBUG: Información completa sobre el ejercicio a editar\n                  console.log('=== DEBUG EDITAR EJERCICIO ===');\n                  console.log('editExercise:', editExercise);\n                  console.log('routine completa:', routine);\n                  console.log('routine.id:', routine?.id);\n                  console.log('routine.routine_id:', routine?.routine_id);\n                  console.log('routine.client_id:', routine?.client_id);\n                  console.log('Todas las propiedades de routine:', Object.keys(routine || {}));\n                  \n                  // Intentar obtener el ID de diferentes formas\n                  const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n                  console.log('routineId detectado:', routineId);\n                  \n                  // Validar que exista el ID de la rutina\n                  if (!routine || !routineId) {\n                    console.error('Error: ID de rutina no encontrado', {\n                      routine,\n                      routineId,\n                      availableKeys: Object.keys(routine || {}),\n                      routineType: typeof routine,\n                      routineConstructor: routine?.constructor?.name\n                    });\n                    alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n                    return;\n                  }\n\n                  // Datos del ejercicio a guardar\n                  const exerciseData = {\n                    ...editExercise,\n                    name: exerciseName,\n                    sets: exerciseSets,\n                    reps: exerciseReps,\n                    weight: exerciseWeight,\n                    time: exerciseTime,\n                    rest: exerciseRest,\n                    day: exerciseDay,\n                    section: exerciseSection,\n                    media: exerciseMedia, // Incluir el campo media\n                  };\n                  \n                  console.log('Datos a guardar:', exerciseData);\n                  console.log('Llamando onUpdateRoutine con:', {\n                    id: routineId,\n                    action: 'editExercise',\n                    data: exerciseData\n                  });\n\n                  // Guardar cambios - CORRIGIENDO EL FORMATO\n                  onUpdateRoutine({\n                    id: routineId,\n                    action: 'editExercise',\n                    data: exerciseData\n                  });\n                  setShowExerciseModal(false);\n                  setEditExercise(null);\n                  setExerciseName(\"\");\n                  setExerciseSets(\"\");\n                  setExerciseReps(\"\");\n                  setExerciseWeight(\"\");\n                  setExerciseTime(\"\");\n                  setExerciseRest(\"\");\n                  setExerciseDay(\"\");\n                  setExerciseSection(\"\");\n                  setExerciseMedia(\"\"); // Limpiar el campo media\n                }}\n                disabled={!exerciseName.trim()}\n              >Guardar</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoutineDetail;\n"],"names":["_ref","routine","onUpdateRoutine","isEditable","onAddExerciseClick","canAddDailyTracking","console","log","id","showExerciseModal","setShowExerciseModal","React","editExercise","setEditExercise","exerciseName","setExerciseName","exerciseSets","setExerciseSets","exerciseReps","setExerciseReps","exerciseWeight","setExerciseWeight","exerciseTime","setExerciseTime","exerciseRest","setExerciseRest","exerciseDay","setExerciseDay","exerciseSection","setExerciseSection","exerciseMedia","setExerciseMedia","handleEditExerciseClick","ex","name","sets","reps","weight","time","rest","day","section","media","getWeekOptions","startDate","endDate","start","Date","end","diffTime","Math","abs","diffDays","ceil","numWeeks","max","Array","from","length","_","i","value","toString","label","exercises","isArray","collapsedDays","setCollapsedDays","allDays","Set","forEach","add","renderExerciseDetails","_jsxs","className","children","_jsx","collapsedSections","setCollapsedSections","allSections","showWeeklyModal","setShowWeeklyModal","weeklyExercise","setWeeklyExercise","weekNumber","setWeekNumber","weekWeight","setWeekWeight","weekNotes","setWeekNotes","collapsedWeeklyTracking","setCollapsedWeeklyTracking","showDailyModal","setShowDailyModal","dailyDate","setDailyDate","dailyPF","setDailyPF","dailyPE","setDailyPE","showRoutineModal","setShowRoutineModal","routineName","setRoutineName","routineStartDate","setRoutineStartDate","routineEndDate","setRoutineEndDate","routineDescription","setRoutineDescription","toggleSection","daySection","newCollapsedSections","has","delete","renderWeeklyTracking","exercise","weekOptions","isCollapsed","maxWeight","weeklyData","weights","Object","values","map","data","parseFloat","filter","getMaxWeightForExercise","onClick","exerciseId","newCollapsedWeeklyTracking","toggleWeeklyTracking","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","week","_exercise$weeklyData","weekData","generalNotes","date","handleOpenWeeklyModal","handleCloseWeeklyModal","handleCloseDailyModal","handleCloseRoutineModal","ejerciciosPorDia","groupedByDay","reduce","acc","push","sectionOrder","concat","keys","includes","newCollapsedDays","toggleDay","sectionName","sectionKey","title","window","open","xmlns","routine_id","client_id","handleOpenRoutineModal","description","toLocaleDateString","trim","handleOpenDailyModal","toISOString","split","dailyTracking","entries","sort","_ref2","_ref3","a","b","_ref4","pf","pe","type","onChange","e","target","handleSaveDaily","routineId","error","alert","dailyData","parseInt","timestamp","action","disabled","opt","step","placeholder","maxLength","rows","handleSaveWeekly","handleSaveRoutine","routineData","_routine$constructor","availableKeys","routineType","routineConstructor","constructor","exerciseData"],"sourceRoot":""}