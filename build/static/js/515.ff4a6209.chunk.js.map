{"version":3,"file":"static/js/515.ff4a6209.chunk.js","mappings":"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","sources":["components/DatePicker.js","components/RoutineDetail.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst DatePicker = ({ selectedDate, onDateChange, placeholder }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const datePickerRef = useRef(null);\n\n  const daysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();\n  const firstDayOfMonth = (year, month) => new Date(year, month, 1).getDay(); // 0 for Sunday, 1 for Monday\n\n  const date = selectedDate ? new Date(selectedDate) : new Date();\n  const [currentMonth, setCurrentMonth] = useState(date.getMonth());\n  const [currentYear, setCurrentYear] = useState(date.getFullYear());\n\n  const handlePrevMonth = () => {\n    setCurrentMonth((prevMonth) => {\n      if (prevMonth === 0) {\n        setCurrentYear(currentYear - 1);\n        return 11;\n      }\n      return prevMonth - 1;\n    });\n  };\n\n  const handleNextMonth = () => {\n    setCurrentMonth((prevMonth) => {\n      if (prevMonth === 11) {\n        setCurrentYear(currentYear + 1);\n        return 0;\n      }\n      return prevMonth + 1;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    const newDate = new Date(currentYear, currentMonth, day);\n    onDateChange(newDate.toISOString().split('T')[0]); // Format YYYY-MM-DD\n    setIsOpen(false);\n  };\n\n  const renderDays = () => {\n    const totalDays = daysInMonth(currentYear, currentMonth);\n    const firstDay = firstDayOfMonth(currentYear, currentMonth);\n    const days = [];\n\n    // Fill leading empty cells\n    for (let i = 0; i < firstDay; i++) {\n      days.push(<div key={`empty-${i}`} className=\"w-8 h-8 flex items-center justify-center text-gray-400\"></div>);\n    }\n\n    // Fill days of the month\n    for (let day = 1; day <= totalDays; day++) {\n      const isSelected = selectedDate && new Date(selectedDate).toDateString() === new Date(currentYear, currentMonth, day).toDateString();\n      const isToday = new Date().toDateString() === new Date(currentYear, currentMonth, day).toDateString();\n      days.push(\n        <div\n          key={day}\n          onClick={() => handleDayClick(day)}\n          className={`w-8 h-8 flex items-center justify-center rounded-full cursor-pointer text-sm\n            ${isSelected ? 'bg-black text-white' : 'text-gray-700 hover:bg-gray-200'}\n            ${isToday && !isSelected ? 'border border-blue-500' : ''}\n          `}\n        >\n          {day}\n        </div>\n      );\n    }\n    return days;\n  };\n\n  const monthNames = [\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n  ];\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (datePickerRef.current && !datePickerRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"relative\" ref={datePickerRef}>\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        value={selectedDate || ''}\n        readOnly\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition cursor-pointer\"\n      />\n\n      {isOpen && (\n        <div className=\"absolute z-10 mt-2 bg-white border border-gray-300 rounded-lg shadow-lg p-4 w-64\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <button onClick={handlePrevMonth} className=\"p-2 rounded-full hover:bg-gray-200\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n              </svg>\n            </button>\n            <span className=\"font-semibold text-gray-800\">{monthNames[currentMonth]} {currentYear}</span>\n            <button onClick={handleNextMonth} className=\"p-2 rounded-full hover:bg-gray-200\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\n              </svg>\n            </button>\n          </div>\n          <div className=\"grid grid-cols-7 gap-1 text-center\">\n            {['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'].map((day) => (\n              <div key={day} className=\"text-xs font-medium text-gray-500\">{day}</div>\n            ))}\n            {renderDays()}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DatePicker;","import React, { useState } from 'react';\nimport DatePicker from './DatePicker';\nimport { supabase } from '../supabaseClient'; // Asegúrate de importar supabase\n\nconst RoutineDetail = ({\n  routine,\n  onUpdateRoutine = () => {},\n  isEditable,\n  onAddExerciseClick = () => {},\n}) => {\n  const [editingExerciseId, setEditingExerciseId] = useState(null);\n  const [editedSets, setEditedSets] = useState('');\n  const [editedReps, setEditedReps] = useState('');\n  const [editedWeight, setEditedWeight] = useState('');\n  const [editedMedia, setEditedMedia] = useState('');\n  const [editedNotes, setEditedNotes] = useState('');\n  const [editedTime, setEditedTime] = useState('');\n  const [editedRest, setEditedRest] = useState('');\n\n  // Estados para la edición de la rutina\n  const [editingRoutineDetails, setEditingRoutineDetails] = useState(false);\n  const [editedRoutineName, setEditedRoutineName] = useState(routine.name);\n  const [editedStartDate, setEditedStartDate] = useState(routine.startDate);\n  const [editedEndDate, setEditedEndDate] = useState(routine.endDate);\n  const [editedDescription, setEditedDescription] = useState(routine.description || '');\n\n  // Estado para colapsar/expandir el seguimiento de cada ejercicio\n  const [expandedExerciseTracking, setExpandedExerciseTracking] = useState({});\n\n  // Estado para el seguimiento diario de PF y PE\n  const [selectedDateForDailyTracking, setSelectedDateForDailyTracking] = useState(null);\n  const [currentPF, setCurrentPF] = useState('');\n  const [currentPE, setCurrentPE] = useState('');\n  const [expandedDailyTracking, setExpandedDailyTracking] = useState(false); // Nuevo estado para expandir/colapsar seguimiento diario\n\n  const handleEditClick = (exercise) => {\n    setEditingExerciseId(exercise.id);\n    setEditedSets(exercise.sets);\n    setEditedReps(exercise.reps);\n    setEditedWeight(exercise.weight);\n    setEditedMedia(exercise.media || '');\n    setEditedNotes(exercise.notes || '');\n    setEditedTime(exercise.time || '');\n    setEditedRest(exercise.rest || '');\n  };\n\n  const handleSaveClick = (exerciseId) => {\n    const updatedExercises = routine.exercises.map((ex) =>\n      ex.id === exerciseId\n        ? {\n            ...ex,\n            sets: editedSets,\n            reps: editedReps,\n            weight: editedWeight,\n            media: editedMedia,\n            notes: editedNotes,\n            time: editedTime,\n            rest: editedRest,\n          }\n        : ex\n    );\n    onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    setEditingExerciseId(null);\n  };\n\n  const handleCancelEditExercise = () => {\n    setEditingExerciseId(null);\n  };\n\n  const handleDeleteExercise = (exerciseId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\n      const updatedExercises = routine.exercises.filter((ex) => ex.id !== exerciseId);\n      onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    }\n  };\n\n  const handleSaveRoutineDetails = () => {\n    onUpdateRoutine({\n      ...routine,\n      name: editedRoutineName,\n      startDate: editedStartDate,\n      endDate: editedEndDate,\n      description: editedDescription,\n    });\n    setEditingRoutineDetails(false);\n  };\n\n  const handleCancelEditRoutineDetails = () => {\n    setEditedRoutineName(routine.name);\n    setEditedStartDate(routine.startDate);\n    setEditedEndDate(routine.endDate);\n    setEditedDescription(routine.description || '');\n    setEditingRoutineDetails(false);\n  };\n\n  // Agrupar ejercicios por día y luego por sección\n  const exercises = routine.exercises || [];\n  const groupedExercises = exercises.reduce((acc, exercise) => {\n    const day = exercise.day || 'Sin Día';\n    const section = exercise.section || 'Sin Sección';\n    if (!acc[day]) acc[day] = {};\n    if (!acc[day][section]) acc[day][section] = [];\n    acc[day][section].push(exercise);\n    return acc;\n  }, {});\n\n  const sortedDays = Object.keys(groupedExercises).sort((a, b) => {\n    if (a.startsWith('Día') && b.startsWith('Día')) {\n      return parseInt(a.replace('Día ', '')) - parseInt(b.replace('Día ', ''));\n    }\n    return a.localeCompare(b);\n  });\n\n  const sectionOrder = ['Warm Up', 'Trabajo DS', 'Out', 'Fuerza', 'Cardio', 'Estiramiento', 'Cool Down', 'Otros'];\n\n  const calculateWeeks = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return Math.ceil(diffDays / 7);\n  };\n\n  const handleTrackingDataChange = (exerciseId, weekIndex, field, value) => {\n    const updatedExercises = routine.exercises.map(ex => {\n      if (ex.id === exerciseId) {\n        const updatedWeeklyData = { ...ex.weeklyData || {} }; // Asegura que weeklyData exista\n        if (!updatedWeeklyData[weekIndex]) {\n          updatedWeeklyData[weekIndex] = { weight: '', generalNotes: '' };\n        }\n        updatedWeeklyData[weekIndex][field] = value;\n        return { ...ex, weeklyData: updatedWeeklyData };\n      }\n      return ex;\n    });\n    onUpdateRoutine({ ...routine, exercises: updatedExercises });\n  };\n\n  const handleAddDailyTracking = () => {\n    if (selectedDateForDailyTracking && currentPF && currentPE) {\n      const updatedRoutine = { ...routine };\n      if (!updatedRoutine.dailyTracking) {\n        updatedRoutine.dailyTracking = {};\n      }\n      const dateObject = new Date(selectedDateForDailyTracking);\n      const formattedDate = dateObject.toISOString().split('T')[0]; // Formato YYYY-MM-DD\n      \n      if (!updatedRoutine.dailyTracking[formattedDate]) {\n        updatedRoutine.dailyTracking[formattedDate] = [];\n      }\n      updatedRoutine.dailyTracking[formattedDate].push({\n        PF: currentPF,\n        PE: currentPE,\n      });\n      onUpdateRoutine(updatedRoutine);\n      setCurrentPF('');\n      setCurrentPE('');\n      setSelectedDateForDailyTracking(null); // Limpiar la fecha seleccionada\n    } else {\n      alert('Por favor, selecciona una fecha e ingresa los valores de PF y PE.');\n    }\n  };\n\n  const toggleExerciseTracking = (exerciseId) => {\n    setExpandedExerciseTracking(prevState => ({\n      ...prevState,\n      [exerciseId]: !prevState[exerciseId]\n    }));\n  };\n\n  const numWeeks = routine.startDate && routine.endDate ? calculateWeeks(routine.startDate, routine.endDate) : 0;\n  const weeksArray = Array.from({ length: numWeeks }, (_, i) => i + 1);\n\n  const handleUpdateRoutine = async (updatedRoutine) => {\n    // Actualiza la rutina en Supabase, incluyendo la columna description\n    const { id, ...fields } = updatedRoutine;\n    const { error } = await supabase\n      .from('rutinas')\n      .update(fields)\n      .eq('id', id);\n    if (error) {\n      alert('Error al actualizar la rutina');\n      return;\n    }\n    // Recarga las rutinas o actualiza el estado según tu lógica\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      {editingRoutineDetails ? (\n        <div className=\"mb-6 p-4 border border-gray-200 rounded-xl bg-gray-50\">\n          <h3 className=\"text-xl font-bold text-gray-700 mb-4\">Editar Detalles de Rutina</h3>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Título de la Rutina:</label>\n            <input\n              type=\"text\"\n              value={editedRoutineName}\n              onChange={(e) => setEditedRoutineName(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            />\n          </div>\n          <div className=\"mb-4 flex flex-col sm:flex-row sm:space-x-4 space-y-4 sm:space-y-0\">\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Fecha de Inicio:</label>\n              <DatePicker\n                selectedDate={editedStartDate}\n                onDateChange={setEditedStartDate}\n                placeholder=\"Fecha de Inicio\"\n              />\n            </div>\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Fecha de Fin:</label>\n              <DatePicker\n                selectedDate={editedEndDate}\n                onDateChange={setEditedEndDate}\n                placeholder=\"Fecha de Fin\"\n              />\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Descripción (máx. 250 caracteres):</label>\n            <textarea\n              value={editedDescription}\n              onChange={(e) => setEditedDescription(e.target.value.slice(0, 250))}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition resize-y\"\n              rows=\"3\"\n              placeholder=\"Agrega una descripción para la rutina\"\n            ></textarea>\n            <p className=\"text-right text-xs text-gray-500\">{editedDescription.length}/250</p>\n          </div>\n          <div className=\"flex justify-end space-x-4 mt-6\">\n            <button\n              onClick={handleCancelEditRoutineDetails}\n              className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold flex items-center justify-center\"\n              title=\"Cancelar\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n            <button\n              onClick={handleSaveRoutineDetails}\n              className=\"px-6 py-2 rounded-xl bg-black text-white hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Guardar Cambios\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">{routine.name}</h2>\n            {routine.startDate && routine.endDate && (\n              <p className=\"text-md text-gray-600\">\n                Periodo: {routine.startDate} - {routine.endDate}\n              </p>\n            )}\n            {routine.description && (\n              <p className=\"text-sm text-gray-700 mt-2\">{routine.description}</p>\n            )}\n          </div>\n          {isEditable && (\n            <button\n              onClick={() => setEditingRoutineDetails(true)}\n              className=\"px-4 py-2 rounded-xl bg-yellow-600 text-white hover:bg-yellow-700 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Editar Rutina\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      )}\n\n      {exercises.length === 0 ? (\n        <p className=\"text-gray-600 text-center py-4\">No hay ejercicios en esta rutina aún.</p>\n      ) : (\n        sortedDays.map((day) => (\n          <div key={day} className=\"mb-8 p-4 bg-gray-100 rounded-xl shadow-sm\">\n            <h3 className=\"text-xl font-bold text-gray-700 mb-4 border-b pb-2\">{day}</h3>\n            {Object.keys(groupedExercises[day]).sort((a, b) => {\n              const indexA = sectionOrder.indexOf(a);\n              const indexB = sectionOrder.indexOf(b);\n              if (indexA === -1 && indexB === -1) return a.localeCompare(b);\n              if (indexA === -1) return 1;\n              if (indexB === -1) return -1;\n              return indexA - indexB;\n            }).map((section) => (\n              <div \n                key={section} \n                className={`mb-6 p-4 bg-white rounded-xl shadow-sm`}\n              >\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h4 className=\"text-lg font-semibold text-gray-700\">{section}</h4>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full bg-white rounded-lg shadow-sm\">\n                    <thead>\n                      <tr className=\"bg-gray-100 border-b border-gray-200\">\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ejercicio</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Series</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Repeticiones</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Peso (kg)</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tiempo</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Descanso</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Media</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Notas</th>\n                        {isEditable && (\n                          <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n                        )}\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {groupedExercises[day][section].map((exercise) => (\n                        <React.Fragment key={exercise.id}>\n                          <tr onClick={() => toggleExerciseTracking(exercise.id)} className=\"cursor-pointer hover:bg-gray-50 transition-colors\">\n                            <td data-label=\"Ejercicio\" className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{exercise.name}</td>\n                            <td data-label=\"Series\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedSets}\n                                  onChange={(e) => setEditedSets(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.sets\n                              )}\n                            </td>\n                            <td data-label=\"Repeticiones\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedReps}\n                                  onChange={(e) => setEditedReps(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.reps\n                              )}\n                            </td>\n                            <td data-label=\"Peso (kg)\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedWeight}\n                                  onChange={(e) => setEditedWeight(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.weight\n                              )}\n                            </td>\n                            <td data-label=\"Tiempo\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedTime}\n                                  onChange={(e) => setEditedTime(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.time || 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Descanso\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedRest}\n                                  onChange={(e) => setEditedRest(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.rest || 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Media\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedMedia}\n                                  onChange={(e) => setEditedMedia(e.target.value)}\n                                  className=\"w-32 px-2 py-1 border rounded-md\"\n                                  placeholder=\"URL de media\"\n                                />\n                              ) : (\n                                exercise.media ? (\n                                  <a href={exercise.media} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5 inline-block\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\" />\n                                    </svg>\n                                  </a>\n                                ) : 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Notas\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <textarea\n                                  value={editedNotes}\n                                  onChange={(e) => setEditedNotes(e.target.value)}\n                                  className=\"w-40 px-2 py-1 border rounded-md resize-y\"\n                                  rows=\"2\"\n                                  placeholder=\"Notas del ejercicio\"\n                                ></textarea>\n                              ) : (\n                                exercise.notes || 'N/A'\n                              )}\n                            </td>\n                            {isEditable && (\n                              <td data-label=\"Acciones\" className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2 flex flex-wrap justify-end\">\n                                {editingExerciseId === exercise.id ? (\n                                  <>\n                                    <button\n                                      onClick={() => handleSaveClick(exercise.id)}\n                                      className=\"px-3 py-1 rounded-lg bg-green-600 text-white hover:bg-green-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                      title=\"Guardar\"\n                                    >\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n                                      </svg>\n                                    </button>\n                                    <button\n                                      onClick={handleCancelEditExercise}\n                                      className=\"px-3 py-1 rounded-lg bg-gray-400 text-white hover:bg-gray-500 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                      title=\"Cancelar\"\n                                    >\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                                      </svg>\n                                    </button>\n                                  </>\n                                ) : (\n                                  <button\n                                    onClick={() => handleEditClick(exercise)}\n                                    className=\"px-3 py-1 rounded-lg bg-yellow-600 text-white hover:bg-yellow-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                    title=\"Editar\"\n                                  >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n                                    </svg>\n                                  </button>\n                                )}\n                                <button\n                                  onClick={() => handleDeleteExercise(exercise.id)}\n                                  className=\"px-3 py-1 rounded-lg bg-red-600 text-white hover:bg-red-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                  title=\"Eliminar\"\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.924a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165M12 2.25h.007v.008H12V2.25z\" />\n                                  </svg>\n                                </button>\n                              </td>\n                            )}\n                          </tr>\n                          {/* Sección de Seguimiento para cada ejercicio, se muestra/oculta al hacer clic en la fila */}\n                          {expandedExerciseTracking[exercise.id] && (\n                            <tr>\n                              <td colSpan={isEditable ? 10 : 9} className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                                <h5 className=\"text-lg font-semibold text-gray-700 mb-3 flex items-center\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-2 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                                  </svg>\n                                  Seguimiento de {exercise.name}\n                                </h5>\n                                <div className=\"space-y-4\">\n                                  {weeksArray.map(week => (\n                                    <div key={week} className=\"flex flex-col p-3 border border-gray-200 rounded-md bg-white\">\n                                      <span className=\"text-sm font-medium text-gray-700 mb-2\">Semana {week}:</span>\n                                      <div className=\"flex flex-col sm:flex-row sm:items-center sm:space-x-2 space-y-2 sm:space-y-0\">\n                                        <input\n                                          type=\"number\"\n                                          className=\"w-full sm:w-24 px-2 py-1 border border-gray-300 rounded-md text-center text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors\"\n                                          placeholder=\"Peso (kg)\"\n                                          value={exercise.weeklyData?.[week]?.weight || ''}\n                                          onChange={(e) => handleTrackingDataChange(exercise.id, week, 'weight', e.target.value)}\n                                          disabled={!isEditable} // Editable por admin y cliente\n                                        />\n                                        <input\n                                          type=\"text\"\n                                          className=\"w-full flex-grow px-2 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors\"\n                                          placeholder=\"Notas (ej. cómo me sentí)\"\n                                          value={exercise.weeklyData?.[week]?.generalNotes || ''}\n                                          onChange={(e) => handleTrackingDataChange(exercise.id, week, 'generalNotes', e.target.value)}\n                                          disabled={!isEditable} // Editable por admin y cliente\n                                        />\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </td>\n                            </tr>\n                          )}\n                        </React.Fragment>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            ))}\n            {/* Sección de Seguimiento Diario de PF y PE */}\n            <div className=\"mt-6 p-4 bg-white rounded-xl shadow-sm border border-gray-200\">\n              <div className=\"flex justify-between items-center mb-3 cursor-pointer\" onClick={() => setExpandedDailyTracking(!expandedDailyTracking)}>\n                <h4 className=\"text-lg font-semibold text-gray-700\">Seguimiento Diario</h4>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className={`h-5 w-5 transform ${expandedDailyTracking ? 'rotate-180' : 'rotate-0'} transition-transform`}\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path fillRule=\"evenodd\" d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              {expandedDailyTracking && (\n                <>\n                  <div className=\"flex flex-col sm:flex-row sm:items-center sm:space-x-4 space-y-4 sm:space-y-0 mb-4\">\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Seleccionar Fecha:</label>\n                      <DatePicker\n                        selectedDate={selectedDateForDailyTracking}\n                        onDateChange={setSelectedDateForDailyTracking}\n                        placeholder=\"Selecciona una fecha\"\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">PF (Percepción de Fatiga):</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition-all duration-300 ease-in-out\"\n                        placeholder=\"Ej. 1-10\"\n                        value={currentPF}\n                        onChange={(e) => setCurrentPF(e.target.value)}\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">PE (Percepción de Esfuerzo):</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition-all duration-300 ease-in-out\"\n                        placeholder=\"Ej. 1-10\"\n                        value={currentPE}\n                        onChange={(e) => setCurrentPE(e.target.value)}\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <button\n                      onClick={handleAddDailyTracking}\n                      className=\"mt-auto px-6 py-2 rounded-xl bg-blue-600 text-white hover:bg-blue-700 transition-colors font-semibold shadow-md flex items-center justify-center\"\n                      title=\"Agregar\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                      </svg>\n                    </button>\n                  </div>\n                  {/* Historial de PF y PE por día */}\n                  {Object.keys(routine.dailyTracking || {}).length > 0 && (\n                    <div className=\"mt-4\">\n                      <h5 className=\"text-md font-semibold text-gray-700 mb-2\">Historial de PF y PE:</h5>\n                      <div className=\"space-y-2\">\n                        {Object.keys(routine.dailyTracking).sort().map(date => (\n                          routine.dailyTracking[date].map((entry, index) => (\n                            <div key={`${date}-${index}`} className=\"flex justify-between items-center p-2 bg-gray-50 rounded-md border border-gray-200\">\n                              <span className=\"text-sm text-gray-700\">Fecha: {date}</span>\n                              <span className=\"text-sm text-gray-700\">PF: {entry.PF}</span>\n                              <span className=\"text-sm text-gray-700\">PE: {entry.PE}</span>\n                            </div>\n                          ))\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        ))\n      )}\n\n      {isEditable && (\n        <button\n          onClick={onAddExerciseClick}\n          className=\"w-full mt-6 bg-black text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n          title=\"Agregar Ejercicio\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n          </svg>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default RoutineDetail;"],"names":["_ref","selectedDate","onDateChange","placeholder","isOpen","setIsOpen","useState","datePickerRef","useRef","date","Date","currentMonth","setCurrentMonth","getMonth","currentYear","setCurrentYear","getFullYear","handleDayClick","day","newDate","toISOString","split","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","ref","children","_jsx","type","value","readOnly","onClick","handlePrevMonth","prevMonth","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","handleNextMonth","map","renderDays","totalDays","getDate","firstDay","firstDayOfMonth","year","month","getDay","days","i","push","isSelected","toDateString","isToday","routine","onUpdateRoutine","isEditable","onAddExerciseClick","editingExerciseId","setEditingExerciseId","editedSets","setEditedSets","editedReps","setEditedReps","editedWeight","setEditedWeight","editedMedia","setEditedMedia","editedNotes","setEditedNotes","editedTime","setEditedTime","editedRest","setEditedRest","editingRoutineDetails","setEditingRoutineDetails","editedRoutineName","setEditedRoutineName","name","editedStartDate","setEditedStartDate","startDate","editedEndDate","setEditedEndDate","endDate","editedDescription","setEditedDescription","description","expandedExerciseTracking","setExpandedExerciseTracking","selectedDateForDailyTracking","setSelectedDateForDailyTracking","currentPF","setCurrentPF","currentPE","setCurrentPE","expandedDailyTracking","setExpandedDailyTracking","handleCancelEditExercise","exercises","groupedExercises","reduce","acc","exercise","section","sortedDays","Object","keys","sort","a","b","startsWith","parseInt","replace","localeCompare","sectionOrder","handleTrackingDataChange","exerciseId","weekIndex","field","updatedExercises","ex","id","updatedWeeklyData","weeklyData","weight","generalNotes","handleAddDailyTracking","updatedRoutine","dailyTracking","formattedDate","PF","PE","alert","numWeeks","calculateWeeks","start","end","diffTime","Math","abs","diffDays","ceil","weeksArray","Array","from","length","_","onChange","e","DatePicker","slice","rows","handleCancelEditRoutineDetails","title","handleSaveRoutineDetails","indexA","indexOf","indexB","React","toggleExerciseTracking","prevState","sets","reps","time","rest","media","href","rel","notes","_Fragment","handleSaveClick","handleEditClick","window","confirm","filter","handleDeleteExercise","colSpan","week","_exercise$weeklyData","_exercise$weeklyData$","_exercise$weeklyData2","_exercise$weeklyData3","disabled","fillRule","clipRule","entry","index"],"sourceRoot":""}