{"version":3,"file":"static/js/324.96ed11b2.chunk.js","mappings":"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","sources":["components/RoutineDetail.js"],"sourcesContent":["import React from \"react\";\n\nconst RoutineDetail = ({\n  routine,\n  onUpdateRoutine = () => {},\n  isEditable,\n  onAddExerciseClick = () => {},\n  canAddDailyTracking = false,\n}) => {\n  // ✅ CORRECTO - Todos los hooks DENTRO de la función del componente\n  const [showExerciseModal, setShowExerciseModal] = React.useState(false);\n  const [editExercise, setEditExercise] = React.useState(null);\n  const [exerciseName, setExerciseName] = React.useState(\"\");\n  const [exerciseSets, setExerciseSets] = React.useState(\"\");\n  const [exerciseReps, setExerciseReps] = React.useState(\"\");\n  const [exerciseWeight, setExerciseWeight] = React.useState(\"\");\n  const [exerciseTime, setExerciseTime] = React.useState(\"\");\n  const [exerciseRest, setExerciseRest] = React.useState(\"\");\n  const [exerciseDay, setExerciseDay] = React.useState(\"\");\n  const [exerciseSection, setExerciseSection] = React.useState(\"\");\n\n  // Handler para editar ejercicio\n  const handleEditExerciseClick = (ex) => {\n    setEditExercise(ex);\n    setExerciseName(ex.name || \"\");\n    setExerciseSets(ex.sets || \"\");\n    setExerciseReps(ex.reps || \"\");\n    setExerciseWeight(ex.weight || \"\");\n    setExerciseTime(ex.time || \"\");\n    setExerciseRest(ex.rest || \"\");\n    setExerciseDay(ex.day || \"\");\n    setExerciseSection(ex.section || \"\");\n    setShowExerciseModal(true);\n  };\n\n  // Calcular semanas de la rutina\n  const getWeekOptions = () => {\n    if (!routine.startDate || !routine.endDate) return [];\n    const start = new Date(routine.startDate);\n    const end = new Date(routine.endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const numWeeks = Math.max(1, Math.ceil(diffDays / 7));\n    return Array.from({ length: numWeeks }, (_, i) => ({ value: (i + 1).toString(), label: `Semana ${i + 1}` }));\n  };\n  // Definir exercises al inicio para evitar ReferenceError\n  const exercises = Array.isArray(routine.exercises) ? routine.exercises : [];\n\n  // Opciones para el desplegable de día\n  const dayOptions = [\n    { value: '', label: 'Selecciona un día' },\n    { value: '1', label: 'Día 1' },\n    { value: '2', label: 'Día 2' },\n    { value: '3', label: 'Día 3' },\n    { value: '4', label: 'Día 4' },\n    { value: '5', label: 'Día 5' },\n    { value: '6', label: 'Día 6' },\n    { value: '7', label: 'Día 7' },\n  ];\n\n  // Opciones para el desplegable de sección (igual que en AddExerciseScreen)\n  const sectionOptions = [\n    { value: '', label: 'Selecciona una sección' },\n    { value: 'Warm Up', label: 'Warm Up' },\n    { value: 'Trabajo DS', label: 'Trabajo DS' },\n    { value: 'Out', label: 'Out' },\n  ];\n\n  // Estado para modales y formularios\n  // Estado para seguimiento semanal\n  const [showWeeklyModal, setShowWeeklyModal] = React.useState(false);\n  const [weeklyExercise, setWeeklyExercise] = React.useState(null);\n  const [weekNumber, setWeekNumber] = React.useState(\"\");\n  const [weekWeight, setWeekWeight] = React.useState(\"\");\n  const [weekNotes, setWeekNotes] = React.useState(\"\");\n\n  // Estado para seguimiento diario general de rutina\n  const [showDailyModal, setShowDailyModal] = React.useState(false);\n  const [dailyDate, setDailyDate] = React.useState(\"\");\n  const [dailyPF, setDailyPF] = React.useState(\"\");\n  const [dailyPE, setDailyPE] = React.useState(\"\");\n\n  // Estados para colapso/expansión\n  const [collapsedDays, setCollapsedDays] = React.useState(new Set());\n  const [collapsedSections, setCollapsedSections] = React.useState(new Set());\n\n  // Funciones para manejar colapso/expansión\n  const toggleDay = (day) => {\n    const newCollapsedDays = new Set(collapsedDays);\n    if (newCollapsedDays.has(day)) {\n      newCollapsedDays.delete(day);\n    } else {\n      newCollapsedDays.add(day);\n    }\n    setCollapsedDays(newCollapsedDays);\n  };\n\n  const toggleSection = (daySection) => {\n    const newCollapsedSections = new Set(collapsedSections);\n    if (newCollapsedSections.has(daySection)) {\n      newCollapsedSections.delete(daySection);\n    } else {\n      newCollapsedSections.add(daySection);\n    }\n    setCollapsedSections(newCollapsedSections);\n  };\n\n  const handleOpenWeeklyModal = (exercise) => {\n    setWeeklyExercise(exercise);\n    setWeekNumber(\"\");\n    setWeekWeight(\"\");\n    setWeekNotes(\"\");\n    setShowWeeklyModal(true);\n  };\n\n  const handleCloseWeeklyModal = () => {\n    setShowWeeklyModal(false);\n    setWeeklyExercise(null);\n    setWeekNumber(\"\");\n    setWeekWeight(\"\");\n    setWeekNotes(\"\");\n  };\n\n  // Handlers para seguimiento diario general\n  const handleOpenDailyModal = () => {\n    setDailyDate(new Date().toISOString().split('T')[0]); // Fecha actual por defecto\n    setDailyPF(\"\");\n    setDailyPE(\"\");\n    setShowDailyModal(true);\n  };\n\n  const handleCloseDailyModal = () => {\n    setShowDailyModal(false);\n    setDailyDate(\"\");\n    setDailyPF(\"\");\n    setDailyPE(\"\");\n  };\n\n  const handleSaveDaily = () => {\n    if (!dailyDate || !dailyPF || !dailyPE) return;\n    \n    // Crear el objeto de datos diarios para la rutina\n    const dailyData = {\n      date: dailyDate,\n      pf: parseInt(dailyPF),\n      pe: parseInt(dailyPE),\n      timestamp: new Date().toISOString()\n    };\n\n    // Llamar a la función para actualizar la rutina\n    onUpdateRoutine({\n      id: routine.id,\n      action: 'addDailyRoutineTracking',\n      data: dailyData\n    });\n\n    handleCloseDailyModal();\n  };\n\n  const handleSaveWeekly = () => {\n    if (!weekNumber || !weeklyExercise) return;\n    \n    // Crear el objeto de datos semanales\n    const weeklyData = {\n      week: weekNumber,\n      weight: weekWeight,\n      generalNotes: weekNotes,\n      date: new Date().toISOString().split('T')[0] // Fecha actual\n    };\n\n    // Llamar a la función para actualizar la rutina\n    onUpdateRoutine({\n      id: routine.id,\n      action: 'addWeeklyTracking',\n      data: {\n        exerciseId: weeklyExercise.id,\n        weeklyData: weeklyData\n      }\n    });\n\n    handleCloseWeeklyModal();\n  };\n\n  // Agrupar y renderizar ejercicios por día y sección\n  let ejerciciosPorDia = null;\n  if (exercises.length === 0) {\n    ejerciciosPorDia = <p className=\"text-gray-600 text-center py-4\">No hay ejercicios para seguimiento.</p>;\n  } else {\n    // Agrupar por día y luego por sección\n    const groupedByDay = exercises.reduce((acc, ex) => {\n      const day = ex.day || 'Sin día';\n      if (!acc[day]) acc[day] = {};\n      \n      const section = ex.section || 'Sin sección';\n      if (!acc[day][section]) acc[day][section] = [];\n      acc[day][section].push(ex);\n      \n      return acc;\n    }, {});\n\n    // Orden específico de las secciones\n    const sectionOrder = ['Warm Up', 'Trabajo DS', 'Out'];\n    \n    // Ordenar días\n    const orderedDays = [\n      '1','2','3','4','5','6','7'\n    ].filter(d => groupedByDay[d]).concat(Object.keys(groupedByDay).filter(d => !['1','2','3','4','5','6','7'].includes(d)));\n\n    ejerciciosPorDia = orderedDays.map(day => (\n      <div key={day} className=\"mb-6\">\n        <div \n          className=\"flex items-center justify-between cursor-pointer p-3 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors\"\n          onClick={() => toggleDay(day)}\n        >\n          <h4 className=\"text-lg font-bold text-blue-700\">\n            {['1','2','3','4','5','6','7'].includes(day) ? `Día ${day}` : 'Sin día asignado'}\n          </h4>\n          <svg \n            className={`w-5 h-5 text-blue-700 transform transition-transform ${collapsedDays.has(day) ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </div>\n        \n        {!collapsedDays.has(day) && (\n          <div className=\"mt-4\">\n            {/* Renderizar secciones en orden específico */}\n            {sectionOrder.map(sectionName => {\n              if (!groupedByDay[day][sectionName]) return null;\n              \n              const sectionKey = `${day}-${sectionName}`;\n              \n              return (\n                <div key={sectionName} className=\"mb-4\">\n                  <div \n                    className=\"flex items-center justify-between cursor-pointer p-2 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors\"\n                    onClick={() => toggleSection(sectionKey)}\n                  >\n                    <h5 className=\"text-md font-semibold text-purple-700\">{sectionName}</h5>\n                    <svg \n                      className={`w-4 h-4 text-purple-700 transform transition-transform ${collapsedSections.has(sectionKey) ? 'rotate-180' : ''}`}\n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                  \n                  {!collapsedSections.has(sectionKey) && (\n                    <div className=\"grid gap-4 mt-3\">\n                      {groupedByDay[day][sectionName].map((ex) => (\n                        <div key={ex.id} className=\"p-4 bg-gray-50 rounded-xl shadow\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h6 className=\"text-md font-semibold text-gray-800\">{ex.name}</h6>\n                            <div className=\"flex gap-2\">\n                              {/* Botón para seguimiento semanal */}\n                              {canAddDailyTracking && (\n                                <button\n                                  className=\"p-1 rounded-full bg-purple-100 hover:bg-purple-200 text-purple-700\"\n                                  title=\"Agregar seguimiento semanal\"\n                                  onClick={() => handleOpenWeeklyModal(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para editar ejercicio si esEditable */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700\"\n                                  title=\"Editar ejercicio\"\n                                  onClick={() => handleEditExerciseClick(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-2 gap-2 mb-2 text-sm text-gray-700\">\n                            <div><span className=\"font-semibold\">Series:</span> {ex.sets || '-'}</div>\n                            <div><span className=\"font-semibold\">Repeticiones:</span> {ex.reps || '-'}</div>\n                            <div><span className=\"font-semibold\">Peso (Kg):</span> {ex.weight || '-'}</div>\n                            <div><span className=\"font-semibold\">Tiempo (seg):</span> {ex.time || '-'}</div>\n                            <div><span className=\"font-semibold\">Descanso (seg):</span> {ex.rest || '-'}</div>\n                          </div>\n\n                          {/* Mostrar seguimiento semanal */}\n                          {ex.weeklyData ? (\n                            <div className=\"mb-4\">\n                              <h6 className=\"text-sm font-semibold text-gray-700 mb-2\">Seguimiento Semanal:</h6>\n                              <table className=\"w-full text-sm border border-gray-300 rounded-lg overflow-hidden\">\n                                <thead className=\"bg-purple-100\">\n                                  <tr>\n                                    <th className=\"px-2 py-1\">Semana</th>\n                                    <th className=\"px-2 py-1\">Peso</th>\n                                    <th className=\"px-2 py-1\">Notas</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {Object.entries(ex.weeklyData).map(([week, data]) => (\n                                    <tr key={week} className=\"border-t\">\n                                      <td className=\"px-2 py-1\">{week}</td>\n                                      <td className=\"px-2 py-1\">{data.weight}</td>\n                                      <td className=\"px-2 py-1\">{data.generalNotes}</td>\n                                    </tr>\n                                  ))}\n                                </tbody>\n                              </table>\n                            </div>\n                          ) : (\n                            <p className=\"text-gray-500 text-sm mb-2\">Sin datos de seguimiento semanal.</p>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n            \n            {/* Mostrar ejercicios de secciones no estándar */}\n            {Object.keys(groupedByDay[day]).filter(section => !sectionOrder.includes(section)).map(sectionName => {\n              const sectionKey = `${day}-${sectionName}`;\n              \n              return (\n                <div key={sectionName} className=\"mb-4\">\n                  <div \n                    className=\"flex items-center justify-between cursor-pointer p-2 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                    onClick={() => toggleSection(sectionKey)}\n                  >\n                    <h5 className=\"text-md font-semibold text-gray-700\">{sectionName}</h5>\n                    <svg \n                      className={`w-4 h-4 text-gray-700 transform transition-transform ${collapsedSections.has(sectionKey) ? 'rotate-180' : ''}`}\n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                  \n                  {!collapsedSections.has(sectionKey) && (\n                    <div className=\"grid gap-4 mt-3\">\n                      {groupedByDay[day][sectionName].map((ex) => (\n                        <div key={ex.id} className=\"p-4 bg-gray-50 rounded-xl shadow\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h6 className=\"text-md font-semibold text-gray-800\">{ex.name}</h6>\n                            <div className=\"flex gap-2\">\n                              {/* Botón para seguimiento semanal */}\n                              {canAddDailyTracking && (\n                                <button\n                                  className=\"p-1 rounded-full bg-purple-100 hover:bg-purple-200 text-purple-700\"\n                                  title=\"Agregar seguimiento semanal\"\n                                  onClick={() => handleOpenWeeklyModal(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para editar ejercicio si esEditable */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700\"\n                                  title=\"Editar ejercicio\"\n                                  onClick={() => handleEditExerciseClick(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-2 gap-2 mb-2 text-sm text-gray-700\">\n                            <div><span className=\"font-semibold\">Series:</span> {ex.sets || '-'}</div>\n                            <div><span className=\"font-semibold\">Repeticiones:</span> {ex.reps || '-'}</div>\n                            <div><span className=\"font-semibold\">Peso (Kg):</span> {ex.weight || '-'}</div>\n                            <div><span className=\"font-semibold\">Tiempo (seg):</span> {ex.time || '-'}</div>\n                            <div><span className=\"font-semibold\">Descanso (seg):</span> {ex.rest || '-'}</div>\n                          </div>\n\n                          {/* Mostrar seguimiento semanal */}\n                          {ex.weeklyData ? (\n                            <div className=\"mb-4\">\n                              <h6 className=\"text-sm font-semibold text-gray-700 mb-2\">Seguimiento Semanal:</h6>\n                              <table className=\"w-full text-sm border border-gray-300 rounded-lg overflow-hidden\">\n                                <thead className=\"bg-purple-100\">\n                                  <tr>\n                                    <th className=\"px-2 py-1\">Semana</th>\n                                    <th className=\"px-2 py-1\">Peso</th>\n                                    <th className=\"px-2 py-1\">Notas</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {Object.entries(ex.weeklyData).map(([week, data]) => (\n                                    <tr key={week} className=\"border-t\">\n                                      <td className=\"px-2 py-1\">{week}</td>\n                                      <td className=\"px-2 py-1\">{data.weight}</td>\n                                      <td className=\"px-2 py-1\">{data.generalNotes}</td>\n                                    </tr>\n                                  ))}\n                                </tbody>\n                              </table>\n                            </div>\n                          ) : (\n                            <p className=\"text-gray-500 text-sm mb-2\">Sin datos de seguimiento semanal.</p>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    ));\n  }\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-bold text-gray-700\">Ejercicios por Día</h3>\n          {/* Botón ícono para agregar ejercicio, solo para admin */}\n          {isEditable && (\n            <button\n              onClick={() => onAddExerciseClick()}\n              className=\"p-2 bg-green-600 text-white rounded-full hover:bg-green-700 transition-colors shadow-md\"\n              title=\"Agregar Ejercicio\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n              </svg>\n            </button>\n          )}\n        </div>\n        \n        {/* Botón para seguimiento diario general de rutina */}\n        {canAddDailyTracking && (\n          <button\n            onClick={handleOpenDailyModal}\n            className=\"mb-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-semibold shadow-md flex items-center\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5 mr-2\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5a2.25 2.25 0 0 0 2.25-2.25m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5a2.25 2.25 0 0 1 21 9v7.5m-9-13.5h.008v.008H12V8.25Z\" />\n            </svg>\n            Seguimiento Diario\n          </button>\n        )}\n        {ejerciciosPorDia}\n        \n        {/* Mostrar seguimiento diario general de la rutina */}\n        {routine.dailyTracking && Object.keys(routine.dailyTracking).length > 0 && (\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n            <h4 className=\"text-lg font-bold text-blue-700 mb-4\">Seguimiento Diario de la Rutina</h4>\n            <div className=\"max-h-40 overflow-y-auto\">\n              <table className=\"w-full text-sm border border-blue-300 rounded-lg overflow-hidden\">\n                <thead className=\"bg-blue-100\">\n                  <tr>\n                    <th className=\"px-3 py-2\">Fecha</th>\n                    <th className=\"px-3 py-2\">PF (0-5)</th>\n                    <th className=\"px-3 py-2\">PE (0-5)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(routine.dailyTracking)\n                    .sort(([a], [b]) => new Date(b) - new Date(a))\n                    .map(([date, data]) => (\n                      <tr key={date} className=\"border-t\">\n                        <td className=\"px-3 py-2\">{date}</td>\n                        <td className=\"px-3 py-2\">{data.pf}</td>\n                        <td className=\"px-3 py-2\">{data.pe}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Modal para seguimiento diario general */}\n      {showDailyModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Seguimiento Diario de la Rutina</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">Registra tu percepción de fatiga y esfuerzo</p>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha del entrenamiento\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full border rounded px-3 py-2\"\n                value={dailyDate}\n                onChange={e => setDailyDate(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Percepción de Fatiga (PF): {dailyPF}/5\n              </label>\n              <select\n                className=\"w-full border rounded px-3 py-2\"\n                value={dailyPF}\n                onChange={e => setDailyPF(e.target.value)}\n              >\n                <option value=\"\">Selecciona PF (0-5)</option>\n                <option value=\"0\">0 - Sin fatiga</option>\n                <option value=\"1\">1 - Muy poca fatiga</option>\n                <option value=\"2\">2 - Poca fatiga</option>\n                <option value=\"3\">3 - Fatiga moderada</option>\n                <option value=\"4\">4 - Mucha fatiga</option>\n                <option value=\"5\">5 - Fatiga extrema</option>\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Percepción de Esfuerzo (PE): {dailyPE}/5\n              </label>\n              <select\n                className=\"w-full border rounded px-3 py-2\"\n                value={dailyPE}\n                onChange={e => setDailyPE(e.target.value)}\n              >\n                <option value=\"\">Selecciona PE (0-5)</option>\n                <option value=\"0\">0 - Sin esfuerzo</option>\n                <option value=\"1\">1 - Muy poco esfuerzo</option>\n                <option value=\"2\">2 - Poco esfuerzo</option>\n                <option value=\"3\">3 - Esfuerzo moderado</option>\n                <option value=\"4\">4 - Mucho esfuerzo</option>\n                <option value=\"5\">5 - Esfuerzo extremo</option>\n              </select>\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\n                onClick={handleCloseDailyModal}\n              >\n                Cancelar\n              </button>\n              <button\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                onClick={handleSaveDaily}\n                disabled={!dailyDate || !dailyPF || !dailyPE}\n              >\n                Guardar\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Modal para agregar seguimiento semanal */}\n      {showWeeklyModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Agregar seguimiento semanal</h3>\n            <select\n              className=\"w-full border rounded px-3 py-2 mb-4\"\n              value={weekNumber}\n              onChange={e => setWeekNumber(e.target.value)}\n            >\n              <option value=\"\">Selecciona la semana</option>\n              {getWeekOptions().map(opt => (\n                <option key={opt.value} value={opt.value}>{opt.label}</option>\n              ))}\n            </select>\n            <input\n              type=\"number\"\n              className=\"w-full border rounded px-3 py-2 mb-4\"\n              placeholder=\"Peso (Kg)\"\n              value={weekWeight}\n              onChange={e => setWeekWeight(e.target.value)}\n            />\n            <textarea\n              className=\"w-full border rounded px-3 py-2 mb-4\"\n              placeholder=\"Notas (máx 100 caracteres)\"\n              maxLength={100}\n              value={weekNotes}\n              onChange={e => setWeekNotes(e.target.value)}\n            />\n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\n                onClick={handleCloseWeeklyModal}\n              >Cancelar</button>\n              <button\n                className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600\"\n                onClick={handleSaveWeekly}\n                disabled={!weekNumber}\n              >Guardar</button>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* Modal para editar ejercicio */}\n      {showExerciseModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Editar ejercicio</h3>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Nombre:</label>\n                <input\n                  type=\"text\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Nombre del ejercicio\"\n                  value={exerciseName}\n                  onChange={e => setExerciseName(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Sección:</label>\n                <select\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  value={exerciseSection}\n                  onChange={e => setExerciseSection(e.target.value)}\n                >\n                  {sectionOptions.map(opt => (\n                    <option key={opt.value} value={opt.value}>{opt.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Día:</label>\n                <select\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  value={exerciseDay}\n                  onChange={e => setExerciseDay(e.target.value)}\n                >\n                  {dayOptions.map(opt => (\n                    <option key={opt.value} value={opt.value}>{opt.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Series:</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Series\"\n                  value={exerciseSets}\n                  onChange={e => setExerciseSets(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Repeticiones:</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Repeticiones\"\n                  value={exerciseReps}\n                  onChange={e => setExerciseReps(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Peso (Kg):</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Peso (Kg)\"\n                  value={exerciseWeight}\n                  onChange={e => setExerciseWeight(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Tiempo (seg):</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Tiempo (segundos)\"\n                  value={exerciseTime}\n                  onChange={e => setExerciseTime(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-sm font-medium text-gray-700 w-24\">Descanso (seg):</label>\n                <input\n                  type=\"number\"\n                  className=\"flex-1 border rounded px-3 py-2\"\n                  placeholder=\"Descanso (segundos)\"\n                  value={exerciseRest}\n                  onChange={e => setExerciseRest(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowExerciseModal(false);\n                  setEditExercise(null);\n                }}\n              >Cancelar</button>\n              <button\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                onClick={() => {\n                  // Guardar cambios (puedes personalizar la lógica)\n                  if (routine.id) {\n                    onUpdateRoutine({\n                      id: routine.id,\n                      action: 'editExercise',\n                      data: {\n                        ...editExercise,\n                        name: exerciseName,\n                        sets: exerciseSets,\n                        reps: exerciseReps,\n                        weight: exerciseWeight,\n                        time: exerciseTime,\n                        rest: exerciseRest,\n                        day: exerciseDay,\n                        section: exerciseSection,\n                      }\n                    });\n                    setShowExerciseModal(false);\n                    setEditExercise(null);\n                  } else {\n                    alert('No se encontró el ID de la rutina.');\n                  }\n                }}\n                disabled={!exerciseName.trim()}\n              >Guardar</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoutineDetail;\n"],"names":["_ref","routine","onUpdateRoutine","isEditable","onAddExerciseClick","canAddDailyTracking","showExerciseModal","setShowExerciseModal","React","editExercise","setEditExercise","exerciseName","setExerciseName","exerciseSets","setExerciseSets","exerciseReps","setExerciseReps","exerciseWeight","setExerciseWeight","exerciseTime","setExerciseTime","exerciseRest","setExerciseRest","exerciseDay","setExerciseDay","exerciseSection","setExerciseSection","handleEditExerciseClick","ex","name","sets","reps","weight","time","rest","day","section","exercises","Array","isArray","showWeeklyModal","setShowWeeklyModal","weeklyExercise","setWeeklyExercise","weekNumber","setWeekNumber","weekWeight","setWeekWeight","weekNotes","setWeekNotes","showDailyModal","setShowDailyModal","dailyDate","setDailyDate","dailyPF","setDailyPF","dailyPE","setDailyPE","collapsedDays","setCollapsedDays","Set","collapsedSections","setCollapsedSections","toggleSection","daySection","newCollapsedSections","has","delete","add","handleOpenWeeklyModal","exercise","handleCloseWeeklyModal","handleCloseDailyModal","ejerciciosPorDia","length","_jsx","className","children","groupedByDay","reduce","acc","push","sectionOrder","filter","d","concat","Object","keys","includes","map","_jsxs","onClick","newCollapsedDays","toggleDay","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","sectionName","sectionKey","title","xmlns","weeklyData","entries","_ref2","week","data","generalNotes","id","_ref3","handleOpenDailyModal","Date","toISOString","split","dailyTracking","sort","_ref4","_ref5","a","b","_ref6","date","pf","pe","type","value","onChange","e","target","handleSaveDaily","dailyData","parseInt","timestamp","action","disabled","getWeekOptions","startDate","endDate","start","end","diffTime","Math","abs","diffDays","ceil","numWeeks","max","from","_","i","toString","label","opt","placeholder","maxLength","handleSaveWeekly","exerciseId","alert","trim"],"sourceRoot":""}