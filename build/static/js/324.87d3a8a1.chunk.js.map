{"version":3,"file":"static/js/324.87d3a8a1.chunk.js","mappings":"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","sources":["components/RoutineDetail.js"],"sourcesContent":["import React from \"react\";\n\nconst RoutineDetail = ({\n  routine,\n  onUpdateRoutine = () => {},\n  isEditable,\n  onAddExerciseClick = () => {},\n  canAddDailyTracking = false,\n}) => {\n  // Debug: Verificar que routine tiene ID\n  console.log('RoutineDetail - routine recibida:', routine);\n  console.log('RoutineDetail - routine.id:', routine?.id);\n  console.log('RoutineDetail - isEditable:', isEditable);\n  console.log('RoutineDetail - canAddDailyTracking:', canAddDailyTracking);\n\n  // ✅ CORRECTO - Todos los hooks DENTRO de la función del componente\n  const [showExerciseModal, setShowExerciseModal] = React.useState(false);\n  const [editExercise, setEditExercise] = React.useState(null);\n  const [exerciseName, setExerciseName] = React.useState(\"\");\n  const [exerciseSets, setExerciseSets] = React.useState(\"\");\n  const [exerciseReps, setExerciseReps] = React.useState(\"\");\n  const [exerciseWeight, setExerciseWeight] = React.useState(\"\");\n  const [exerciseTime, setExerciseTime] = React.useState(\"\");\n  const [exerciseRest, setExerciseRest] = React.useState(\"\");\n  const [exerciseDay, setExerciseDay] = React.useState(\"\");\n  const [exerciseSection, setExerciseSection] = React.useState(\"\");\n  const [exerciseMedia, setExerciseMedia] = React.useState(\"\"); // Nuevo campo para media\n  const [exerciseRIR, setExerciseRIR] = React.useState(\"\"); // Nuevo campo para RIR\n  const [exerciseCadencia, setExerciseCadencia] = React.useState(\"\"); // Nuevo campo para Cadencia\n  const [exerciseRound, setExerciseRound] = React.useState(\"\"); // Nuevo campo para Round\n\n  // Handler para editar ejercicio\n  const handleEditExerciseClick = (ex) => {\n    setEditExercise(ex);\n    setExerciseName(ex.name || \"\");\n    setExerciseSets(ex.sets || \"\");\n    setExerciseReps(ex.reps || \"\");\n    setExerciseWeight(ex.weight || \"\");\n    setExerciseTime(ex.time || \"\");\n    setExerciseRest(ex.rest || \"\");\n    setExerciseDay(ex.day || \"\");\n    setExerciseSection(ex.section || \"\");\n    setExerciseMedia(ex.media || \"\"); // Incluir el campo media\n    setExerciseRIR(ex.rir || \"\"); // Incluir el campo RIR\n    setExerciseCadencia(ex.cadencia || \"\"); // Incluir el campo Cadencia\n    setExerciseRound(ex.round || \"\"); // Incluir el campo Round\n    setShowExerciseModal(true);\n  };\n\n  // Calcular semanas de la rutina\n  const getWeekOptions = () => {\n    if (!routine.startDate || !routine.endDate) return [];\n    const start = new Date(routine.startDate);\n    const end = new Date(routine.endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const numWeeks = Math.max(1, Math.ceil(diffDays / 7));\n    return Array.from({ length: numWeeks }, (_, i) => ({ value: (i + 1).toString(), label: `Semana ${i + 1}` }));\n  };\n  // Definir exercises al inicio para evitar ReferenceError\n  const exercises = Array.isArray(routine.exercises) ? routine.exercises : [];\n\n  // Estados para colapso/expansión - Inicializar con todos los días y secciones colapsadas\n  const [collapsedDays, setCollapsedDays] = React.useState(() => {\n    // Crear un Set con todos los días que tienen ejercicios\n    const allDays = new Set();\n    exercises.forEach(ex => {\n      const day = ex.day || 'Sin día';\n      allDays.add(day);\n    });\n    return allDays;\n  });\n\n  // Función para renderizar detalles del ejercicio\n  const renderExerciseDetails = (ex) => (\n    <div className=\"grid grid-cols-2 gap-2 mb-2 text-sm text-gray-700\">\n      {ex.sets && <div><span className=\"font-semibold\">Series:</span> {ex.sets}</div>}\n      {ex.reps && <div><span className=\"font-semibold\">Reps:</span> {ex.reps}</div>}\n      {ex.time && <div><span className=\"font-semibold\">Tiempo (seg):</span> {ex.time}</div>}\n      {ex.rest && <div><span className=\"font-semibold\">Descanso (seg):</span> {ex.rest}</div>}\n      {ex.weight && <div><span className=\"font-semibold\">Peso (Kg):</span> {ex.weight}</div>}\n      {ex.rir && <div><span className=\"font-semibold\">RIR:</span> {ex.rir}</div>}\n      {ex.cadencia && <div><span className=\"font-semibold\">Cadencia:</span> {ex.cadencia}</div>}\n    </div>\n  );\n\n  const [collapsedSections, setCollapsedSections] = React.useState(() => {\n    // Crear un Set con todas las combinaciones día-sección que tienen ejercicios\n    const allSections = new Set();\n    exercises.forEach(ex => {\n      const day = ex.day || 'Sin día';\n      const section = ex.section || 'Sin sección';\n      allSections.add(`${day}-${section}`);\n    });\n    return allSections;\n  });\n\n  // Opciones para el desplegable de día\n  const dayOptions = [\n    { value: '', label: 'Selecciona un día' },\n    { value: '1', label: 'Día 1' },\n    { value: '2', label: 'Día 2' },\n    { value: '3', label: 'Día 3' },\n    { value: '4', label: 'Día 4' },\n    { value: '5', label: 'Día 5' },\n    { value: '6', label: 'Día 6' },\n    { value: '7', label: 'Día 7' },\n  ];\n\n  // Opciones para el desplegable de sección (igual que en AddExerciseScreen)\n  const sectionOptions = [\n    { value: '', label: 'Selecciona una sección' },\n    { value: 'Warm Up', label: 'Warm Up' },\n    { value: 'Activación', label: 'Activación' },\n    { value: 'Core', label: 'Core' },\n    { value: 'Trabajo DS', label: 'Trabajo DS' },\n    { value: 'Out', label: 'Out' },\n  ];\n\n  // Estado para modales y formularios\n  // Estado para seguimiento semanal\n  const [showWeeklyModal, setShowWeeklyModal] = React.useState(false);\n  const [weeklyExercise, setWeeklyExercise] = React.useState(null);\n  const [weekNumber, setWeekNumber] = React.useState(\"\");\n  const [weekWeight, setWeekWeight] = React.useState(\"\");\n  const [weekNotes, setWeekNotes] = React.useState(\"\");\n  const [isEditingWeekly, setIsEditingWeekly] = React.useState(false);\n  const [editingWeeklyData, setEditingWeeklyData] = React.useState(null);\n  \n  // Estado para colapsar seguimiento semanal por ejercicio - Inicializar con todos los ejercicios colapsados\n  const [collapsedWeeklyTracking, setCollapsedWeeklyTracking] = React.useState(() => {\n    // Crear un Set con todos los IDs de ejercicios para que inicien colapsados\n    const allExerciseIds = new Set();\n    exercises.forEach(ex => {\n      allExerciseIds.add(ex.id);\n    });\n    return allExerciseIds;\n  });\n\n  // Estado para seguimiento diario general de rutina\n  const [showDailyModal, setShowDailyModal] = React.useState(false);\n  const [dailyDate, setDailyDate] = React.useState(\"\");\n  const [dailyPF, setDailyPF] = React.useState(\"\");\n  const [dailyPE, setDailyPE] = React.useState(\"\");\n  const [isEditingDaily, setIsEditingDaily] = React.useState(false);\n  const [editingDailyDate, setEditingDailyDate] = React.useState(\"\");\n\n  // Estado para editar información de rutina\n  const [showRoutineModal, setShowRoutineModal] = React.useState(false);\n  const [routineName, setRoutineName] = React.useState(\"\");\n  const [routineStartDate, setRoutineStartDate] = React.useState(\"\");\n  const [routineEndDate, setRoutineEndDate] = React.useState(\"\");\n  const [routineDescription, setRoutineDescription] = React.useState(\"\");\n\n  // Funciones para manejar colapso/expansión\n  const toggleDay = (day) => {\n    const newCollapsedDays = new Set(collapsedDays);\n    if (newCollapsedDays.has(day)) {\n      newCollapsedDays.delete(day);\n    } else {\n      newCollapsedDays.add(day);\n    }\n    setCollapsedDays(newCollapsedDays);\n  };\n\n  const toggleSection = (daySection) => {\n    const newCollapsedSections = new Set(collapsedSections);\n    if (newCollapsedSections.has(daySection)) {\n      newCollapsedSections.delete(daySection);\n    } else {\n      newCollapsedSections.add(daySection);\n    }\n    setCollapsedSections(newCollapsedSections);\n  };\n\n  const toggleWeeklyTracking = (exerciseId) => {\n    const newCollapsedWeeklyTracking = new Set(collapsedWeeklyTracking);\n    if (newCollapsedWeeklyTracking.has(exerciseId)) {\n      newCollapsedWeeklyTracking.delete(exerciseId);\n    } else {\n      newCollapsedWeeklyTracking.add(exerciseId);\n    }\n    setCollapsedWeeklyTracking(newCollapsedWeeklyTracking);\n  };\n\n  // Función para calcular el mayor peso levantado por ejercicio\n  const getMaxWeightForExercise = (exercise) => {\n    if (!exercise.weeklyData) return 0;\n    const weights = Object.values(exercise.weeklyData)\n      .map(data => parseFloat(data.weight) || 0)\n      .filter(weight => weight > 0);\n    return weights.length > 0 ? Math.max(...weights) : 0;\n  };\n\n  // Función para renderizar todas las semanas del seguimiento\n  const renderWeeklyTracking = (exercise) => {\n    if (!routine.startDate || !routine.endDate) return null;\n    \n    const weekOptions = getWeekOptions();\n    const isCollapsed = collapsedWeeklyTracking.has(exercise.id);\n    const maxWeight = getMaxWeightForExercise(exercise);\n    \n    return (\n      <div className=\"mb-4\">\n        <div \n          className=\"flex items-center justify-between cursor-pointer p-2 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors\"\n          onClick={() => toggleWeeklyTracking(exercise.id)}\n        >\n          <h6 className=\"text-sm font-semibold text-purple-700\">\n            Seguimiento Semanal {maxWeight > 0 && `(Máximo: ${maxWeight} kg)`}\n          </h6>\n          <svg \n            className={`w-4 h-4 text-purple-700 transform transition-transform ${isCollapsed ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </div>\n        \n        {!isCollapsed && (\n          <div className=\"mt-2\">\n            <table className=\"w-full text-sm border border-purple-300 rounded-lg overflow-hidden\">\n              <thead className=\"bg-purple-100\">\n                <tr>\n                  <th className=\"px-2 py-1 text-center w-20\">Semana</th>\n                  <th className=\"px-2 py-1 text-center w-24\">Peso (kg)</th>\n                  <th className=\"px-2 py-1 text-center w-auto\">Notas</th>\n                  <th className=\"px-2 py-1 text-center w-24\">Fecha</th>\n                  <th className=\"px-2 py-1 text-center w-20\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {weekOptions.map(week => {\n                  const weekData = exercise.weeklyData?.[week.value];\n                  return (\n                    <tr key={week.value} className=\"border-t\">\n                      <td className=\"px-2 py-1 font-medium text-center\">{week.label}</td>\n                      <td className=\"px-2 py-1 text-center\">\n                        {weekData?.weight ? `${weekData.weight} kg` : '-'}\n                      </td>\n                      <td className=\"px-2 py-1 text-center max-w-0\">\n                        <div className=\"break-words whitespace-normal\">\n                          {weekData?.generalNotes || '-'}\n                        </div>\n                      </td>\n                      <td className=\"px-2 py-1 text-xs text-gray-500 text-center\">\n                        {weekData?.date || '-'}\n                      </td>\n                      <td className=\"px-2 py-1\">\n                        <div className=\"flex gap-1 justify-center\">\n                          {weekData ? (\n                            <>\n                              <button\n                                className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n                                title=\"Editar seguimiento\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleEditWeeklyTracking(exercise, week.value, weekData);\n                                }}\n                              >\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-3 h-3\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                                </svg>\n                              </button>\n                              <button\n                                className=\"p-1 rounded-full bg-red-100 hover:bg-red-200 text-red-700 transition-colors\"\n                                title=\"Eliminar seguimiento\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleDeleteWeeklyTracking(exercise, week.value);\n                                }}\n                              >\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-3 h-3\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                                </svg>\n                              </button>\n                            </>\n                          ) : (\n                            <button\n                              className=\"p-1 rounded-full bg-green-100 hover:bg-green-200 text-green-700 transition-colors\"\n                              title=\"Agregar seguimiento\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleOpenWeeklyModal(exercise, week.value);\n                              }}\n                            >\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-3 h-3\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            {maxWeight > 0 && (\n              <div className=\"mt-2 p-2 bg-green-50 rounded text-sm\">\n                <span className=\"font-semibold text-green-700\">\n                  Mayor peso levantado: {maxWeight} kg\n                </span>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleOpenWeeklyModal = (exercise, weekValue = \"\") => {\n    setWeeklyExercise(exercise);\n    setWeekNumber(weekValue);\n    setWeekWeight(\"\");\n    setWeekNotes(\"\");\n    setIsEditingWeekly(false);\n    setEditingWeeklyData(null);\n    setShowWeeklyModal(true);\n  };\n\n  const handleEditWeeklyTracking = (exercise, weekValue, weekData) => {\n    console.log('handleEditWeeklyTracking called with:', { exercise, weekValue, weekData });\n    try {\n      setWeeklyExercise(exercise);\n      setWeekNumber(weekValue);\n      setWeekWeight(weekData.weight || \"\");\n      setWeekNotes(weekData.generalNotes || \"\");\n      setIsEditingWeekly(true);\n      setEditingWeeklyData(weekData);\n      setShowWeeklyModal(true);\n    } catch (error) {\n      console.error('Error in handleEditWeeklyTracking:', error);\n      alert('Error al abrir el modal de edición: ' + error.message);\n    }\n  };\n\n  const handleDeleteWeeklyTracking = (exercise, weekValue) => {\n    console.log('handleDeleteWeeklyTracking called with:', { exercise, weekValue });\n    try {\n      if (!confirm('¿Estás seguro de que quieres eliminar este seguimiento semanal?')) {\n        return;\n      }\n      \n      // Obtener el ID de la rutina\n      const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n      \n      if (!routineId) {\n        console.error('Error: ID de rutina no encontrado para eliminar seguimiento semanal', routine);\n        alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n        return;\n      }\n      \n      console.log('Deleting weekly tracking with data:', {\n        id: routineId,\n        action: 'deleteWeeklyTracking',\n        data: {\n          exerciseId: exercise.id,\n          week: weekValue\n        }\n      });\n      \n      // Llamar a la función para eliminar el seguimiento semanal\n      onUpdateRoutine({\n        id: routineId,\n        action: 'deleteWeeklyTracking',\n        data: {\n          exerciseId: exercise.id,\n          week: weekValue\n        }\n      });\n    } catch (error) {\n      console.error('Error in handleDeleteWeeklyTracking:', error);\n      alert('Error al eliminar el seguimiento: ' + error.message);\n    }\n  };\n\n  const handleCloseWeeklyModal = () => {\n    setShowWeeklyModal(false);\n    setWeeklyExercise(null);\n    setWeekNumber(\"\");\n    setWeekWeight(\"\");\n    setWeekNotes(\"\");\n    setIsEditingWeekly(false);\n    setEditingWeeklyData(null);\n  };\n\n  // Handlers para seguimiento diario general\n  const handleOpenDailyModal = () => {\n    setDailyDate(new Date().toISOString().split('T')[0]); // Fecha actual por defecto\n    setDailyPF(\"\");\n    setDailyPE(\"\");\n    setIsEditingDaily(false);\n    setEditingDailyDate(\"\");\n    setShowDailyModal(true);\n  };\n\n  const handleEditDaily = (date, data) => {\n    console.log('handleEditDaily called with:', { date, data });\n    try {\n      setDailyDate(date);\n      setDailyPF(data?.pf != null ? data.pf.toString() : \"\");\n      setDailyPE(data?.pe != null ? data.pe.toString() : \"\");\n      setIsEditingDaily(true);\n      setEditingDailyDate(date);\n      setShowDailyModal(true);\n    } catch (error) {\n      console.error('Error in handleEditDaily:', error);\n      console.error('Data received:', data);\n      alert('Error al abrir el modal de edición: ' + error.message);\n    }\n  };\n\n  const handleDeleteDaily = (date) => {\n    if (!confirm('¿Estás seguro de que quieres eliminar este registro diario?')) {\n      return;\n    }\n    \n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    \n    if (!routineId) {\n      console.error('Error: ID de rutina no encontrado para eliminar seguimiento diario', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n    \n    onUpdateRoutine({\n      id: routineId,\n      action: 'deleteDailyRoutineTracking',\n      data: { date }\n    });\n  };\n\n  const handleCloseDailyModal = () => {\n    setShowDailyModal(false);\n    setDailyDate(\"\");\n    setDailyPF(\"\");\n    setDailyPE(\"\");\n    setIsEditingDaily(false);\n    setEditingDailyDate(\"\");\n  };\n\n  const handleSaveDaily = () => {\n    if (!dailyDate || !dailyPF || !dailyPE) {\n      alert('Por favor completa todos los campos requeridos');\n      return;\n    }\n    \n    // Intentar obtener el ID de diferentes formas\n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    \n    if (!routineId) {\n      console.error('Error: ID de rutina no encontrado para seguimiento diario', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n    \n    try {\n      // Crear el objeto de datos diarios para la rutina\n      const dailyData = {\n        date: dailyDate,\n        pf: parseInt(dailyPF) || 0,\n        pe: parseInt(dailyPE) || 0,\n        timestamp: new Date().toISOString()\n      };\n\n      console.log('Saving daily data:', dailyData);\n      console.log('Is editing:', isEditingDaily);\n\n      // Llamar a la función para actualizar la rutina\n      onUpdateRoutine({\n        id: routineId,\n        action: isEditingDaily ? 'updateDailyRoutineTracking' : 'addDailyRoutineTracking',\n        data: isEditingDaily ? { ...dailyData, originalDate: editingDailyDate } : dailyData\n      });\n\n      handleCloseDailyModal();\n    } catch (error) {\n      console.error('Error in handleSaveDaily:', error);\n      alert('Error al guardar el seguimiento diario: ' + error.message);\n    }\n  };\n\n  // Handlers para editar información de rutina\n  const handleOpenRoutineModal = () => {\n    setRoutineName(routine.name || \"\");\n    setRoutineStartDate(routine.startDate || \"\");\n    setRoutineEndDate(routine.endDate || \"\");\n    setRoutineDescription(routine.description || \"\");\n    setShowRoutineModal(true);\n  };\n\n  const handleCloseRoutineModal = () => {\n    setShowRoutineModal(false);\n    setRoutineName(\"\");\n    setRoutineStartDate(\"\");\n    setRoutineEndDate(\"\");\n    setRoutineDescription(\"\");\n  };\n\n  const handleSaveRoutine = () => {\n    // Debug adicional al momento de guardar\n    console.log('handleSaveRoutine - routine completa:', routine);\n    console.log('handleSaveRoutine - routine.id:', routine?.id);\n    console.log('handleSaveRoutine - typeof routine.id:', typeof routine?.id);\n    \n    // Intentar obtener el ID de diferentes formas\n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    console.log('handleSaveRoutine - routineId encontrado:', routineId);\n    \n    // Validar que exista el ID de la rutina\n    if (!routine || !routineId) {\n      console.error('Error: ID de rutina no encontrado', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n\n    // Crear el objeto de datos de la rutina\n    const routineData = {\n      name: routineName,\n      startDate: routineStartDate,\n      endDate: routineEndDate,\n      description: routineDescription\n    };\n\n    console.log('Guardando rutina:', {\n      id: routineId,\n      action: 'updateRoutineInfo',\n      data: routineData\n    });\n\n    // Llamar a la función para actualizar la rutina\n    onUpdateRoutine({\n      id: routineId,\n      action: 'updateRoutineInfo',\n      data: routineData\n    });\n\n    handleCloseRoutineModal();\n  };\n\n  const handleSaveWeekly = () => {\n    console.log('handleSaveWeekly called with:', {\n      weekNumber,\n      weeklyExercise,\n      weekWeight,\n      weekNotes,\n      isEditingWeekly,\n      editingWeeklyData\n    });\n    \n    if (!weekNumber || !weeklyExercise) {\n      alert('Por favor completa todos los campos requeridos');\n      return;\n    }\n    \n    try {\n      // Intentar obtener el ID de diferentes formas\n      const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n      \n      if (!routineId) {\n        console.error('Error: ID de rutina no encontrado para seguimiento semanal', routine);\n        alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n        return;\n      }\n      \n      // Crear el objeto de datos semanales\n      const weeklyData = {\n        week: weekNumber,\n        weight: weekWeight,\n        generalNotes: weekNotes,\n        date: isEditingWeekly ? editingWeeklyData.date : new Date().toISOString().split('T')[0] // Mantener fecha original si se está editando\n      };\n\n      const updateData = {\n        id: routineId,\n        action: isEditingWeekly ? 'updateWeeklyTracking' : 'addWeeklyTracking',\n        data: {\n          exerciseId: weeklyExercise.id,\n          weeklyData: weeklyData\n        }\n      };\n\n      console.log('Calling onUpdateRoutine with:', updateData);\n\n      // Llamar a la función para actualizar la rutina\n      onUpdateRoutine(updateData);\n\n      handleCloseWeeklyModal();\n    } catch (error) {\n      console.error('Error in handleSaveWeekly:', error);\n      alert('Error al guardar el seguimiento: ' + error.message);\n    }\n  };\n\n  // Handlers para eliminar ejercicios, días y secciones\n  const handleDeleteExercise = (exerciseId) => {\n    if (!confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\n      return;\n    }\n    \n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    \n    if (!routineId) {\n      console.error('Error: ID de rutina no encontrado para eliminar ejercicio', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n    \n    onUpdateRoutine({\n      id: routineId,\n      action: 'deleteExercise',\n      data: { exerciseId }\n    });\n  };\n\n  const handleDeleteDay = (day) => {\n    console.log('handleDeleteDay called with day:', day);\n    console.log('routine:', routine);\n    console.log('isEditable:', isEditable);\n    \n    if (!confirm(`¿Estás seguro de que quieres eliminar todos los ejercicios del ${['1','2','3','4','5','6','7'].includes(day) ? `Día ${day}` : 'día sin asignar'}?`)) {\n      return;\n    }\n    \n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    \n    if (!routineId) {\n      console.error('Error: ID de rutina no encontrado para eliminar día', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n    \n    console.log('Calling onUpdateRoutine with:', { id: routineId, action: 'deleteDay', data: { day } });\n    \n    onUpdateRoutine({\n      id: routineId,\n      action: 'deleteDay',\n      data: { day }\n    });\n  };\n\n  const handleDeleteSection = (day, section) => {\n    console.log('handleDeleteSection called with:', { day, section });\n    console.log('routine:', routine);\n    console.log('isEditable:', isEditable);\n    \n    if (!confirm(`¿Estás seguro de que quieres eliminar todos los ejercicios de la sección \"${section}\" del ${['1','2','3','4','5','6','7'].includes(day) ? `Día ${day}` : 'día sin asignar'}?`)) {\n      return;\n    }\n    \n    const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n    \n    if (!routineId) {\n      console.error('Error: ID de rutina no encontrado para eliminar sección', routine);\n      alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n      return;\n    }\n    \n    console.log('Calling onUpdateRoutine with:', { id: routineId, action: 'deleteSection', data: { day, section } });\n    \n    onUpdateRoutine({\n      id: routineId,\n      action: 'deleteSection',\n      data: { day, section }\n    });\n  };\n\n  // Agrupar y renderizar ejercicios por día y sección\n  let ejerciciosPorDia = null;\n  if (exercises.length === 0) {\n    ejerciciosPorDia = <p className=\"text-gray-600 text-center py-4\">No hay ejercicios para seguimiento.</p>;\n  } else {\n    // Agrupar por día y luego por sección\n    const groupedByDay = exercises.reduce((acc, ex) => {\n      const day = ex.day || 'Sin día';\n      if (!acc[day]) acc[day] = {};\n      \n      const section = ex.section || 'Sin sección';\n      if (!acc[day][section]) acc[day][section] = [];\n      acc[day][section].push(ex);\n      \n      return acc;\n    }, {});\n\n    // Orden específico de las secciones\n    const sectionOrder = ['Warm Up', 'Activación', 'Core', 'Trabajo DS', 'Out'];\n    \n    // Ordenar días\n    const orderedDays = [\n      '1','2','3','4','5','6','7'\n    ].filter(d => groupedByDay[d]).concat(Object.keys(groupedByDay).filter(d => !['1','2','3','4','5','6','7'].includes(d)));\n\n    ejerciciosPorDia = orderedDays.map(day => (\n      <div key={day} className=\"mb-6\">\n        <div className=\"flex items-center gap-2\">\n          <div \n            className=\"flex items-center justify-between cursor-pointer p-3 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors flex-1\"\n            onClick={() => toggleDay(day)}\n          >\n            <h4 className=\"text-lg font-bold text-blue-700\">\n              {['1','2','3','4','5','6','7'].includes(day) ? `Día ${day}` : 'Sin día asignado'}\n            </h4>\n            <div className=\"flex items-center gap-2\">\n              <svg \n                className={`w-5 h-5 text-blue-700 transform transition-transform ${collapsedDays.has(day) ? 'rotate-180' : ''}`}\n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </div>\n          \n          {/* Botón para eliminar día completo - Fuera del contenedor como columna separada */}\n          {isEditable && (\n            <button\n              onClick={(e) => {\n                console.log('Delete day button clicked for day:', day);\n                e.stopPropagation();\n                handleDeleteDay(day);\n              }}\n              className=\"p-1 rounded-full bg-red-100 hover:bg-red-200 text-red-700 transition-colors flex-shrink-0\"\n              title=\"Eliminar día completo\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n              </svg>\n            </button>\n          )}\n        </div>\n        \n        {!collapsedDays.has(day) && (\n          <div className=\"mt-4\">\n            {/* Renderizar secciones en orden específico */}\n            {sectionOrder.map(sectionName => {\n              if (!groupedByDay[day][sectionName]) return null;\n              \n              const sectionKey = `${day}-${sectionName}`;\n              \n              return (\n                <div key={sectionName} className=\"mb-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <div \n                      className=\"flex items-center justify-between cursor-pointer p-2 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors flex-1\"\n                      onClick={() => toggleSection(sectionKey)}\n                    >\n                      <h5 className=\"text-md font-semibold text-purple-700\">{sectionName}</h5>\n                      <div className=\"flex items-center gap-2\">\n                        <svg \n                          className={`w-4 h-4 text-purple-700 transform transition-transform ${collapsedSections.has(sectionKey) ? 'rotate-180' : ''}`}\n                          fill=\"none\" \n                          stroke=\"currentColor\" \n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                    \n                    {/* Botón para eliminar sección completa - Fuera del contenedor como columna separada */}\n                    {isEditable && (\n                      <button\n                        onClick={(e) => {\n                          console.log('Delete section button clicked for:', { day, section: sectionName });\n                          e.stopPropagation();\n                          handleDeleteSection(day, sectionName);\n                        }}\n                        className=\"p-1 rounded-full bg-red-100 hover:bg-red-200 text-red-700 transition-colors flex-shrink-0\"\n                        title=\"Eliminar sección completa\"\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-3 h-3\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                        </svg>\n                      </button>\n                    )}\n                  </div>\n                  \n                  {!collapsedSections.has(sectionKey) && (\n                    <div className=\"grid gap-4 mt-3\">\n                      {groupedByDay[day][sectionName].map((ex) => (\n                        <div key={ex.id} className=\"p-4 bg-gray-50 rounded-xl shadow\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center gap-2\">\n                              <h6 className=\"text-md font-semibold text-gray-800\">{ex.name}</h6>\n                              {ex.media && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n                                  title=\"Ver video del ejercicio\"\n                                  onClick={() => window.open(ex.media, '_blank')}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.91 11.672a.375.375 0 0 1 0 .656l-5.603 3.113a.375.375 0 0 1-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112Z\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                            <div className=\"flex gap-2\">\n                              {/* Botón para seguimiento semanal */}\n                              {canAddDailyTracking && (\n                                <button\n                                  className=\"p-1 rounded-full bg-purple-100 hover:bg-purple-200 text-purple-700\"\n                                  title=\"Agregar seguimiento semanal\"\n                                  onClick={() => handleOpenWeeklyModal(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para editar ejercicio si esEditable */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700\"\n                                  title=\"Editar ejercicio\"\n                                  onClick={() => handleEditExerciseClick(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para eliminar ejercicio */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-red-100 hover:bg-red-200 text-red-700\"\n                                  title=\"Eliminar ejercicio\"\n                                  onClick={() => handleDeleteExercise(ex.id)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                          \n                          {/* Mostrar detalles del ejercicio */}\n                          {renderExerciseDetails(ex)}\n\n                          {/* Mostrar seguimiento semanal */}\n                          {renderWeeklyTracking(ex)}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n            \n            {/* Mostrar ejercicios de secciones no estándar */}\n            {Object.keys(groupedByDay[day]).filter(section => !sectionOrder.includes(section)).map(sectionName => {\n              const sectionKey = `${day}-${sectionName}`;\n              \n              return (\n                <div key={sectionName} className=\"mb-4\">\n                  <div \n                    className=\"flex items-center justify-between cursor-pointer p-2 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                    onClick={() => toggleSection(sectionKey)}\n                  >\n                    <h5 className=\"text-md font-semibold text-gray-700\">{sectionName}</h5>\n                    <div className=\"flex items-center gap-2\">\n                      {/* Botón para eliminar sección completa */}\n                      {isEditable && (\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleDeleteSection(day, sectionName);\n                          }}\n                          className=\"p-1 rounded-full bg-red-100 hover:bg-red-200 text-red-700 transition-colors\"\n                          title=\"Eliminar sección completa\"\n                        >\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-3 h-3\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                          </svg>\n                        </button>\n                      )}\n                      <svg \n                        className={`w-4 h-4 text-gray-700 transform transition-transform ${collapsedSections.has(sectionKey) ? 'rotate-180' : ''}`}\n                        fill=\"none\" \n                        stroke=\"currentColor\" \n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    </div>\n                  </div>\n                  \n                  {!collapsedSections.has(sectionKey) && (\n                    <div className=\"grid gap-4 mt-3\">\n                      {groupedByDay[day][sectionName].map((ex) => (\n                        <div key={ex.id} className=\"p-4 bg-gray-50 rounded-xl shadow\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center gap-2\">\n                              <h6 className=\"text-md font-semibold text-gray-800\">{ex.name}</h6>\n                              {ex.media && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n                                  title=\"Ver video del ejercicio\"\n                                  onClick={() => window.open(ex.media, '_blank')}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.91 11.672a.375.375 0 0 1 0 .656l-5.603 3.113a.375.375 0 0 1-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112Z\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                            <div className=\"flex gap-2\">\n                              {/* Botón para seguimiento semanal */}\n                              {canAddDailyTracking && (\n                                <button\n                                  className=\"p-1 rounded-full bg-purple-100 hover:bg-purple-200 text-purple-700\"\n                                  title=\"Agregar seguimiento semanal\"\n                                  onClick={() => handleOpenWeeklyModal(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para editar ejercicio si esEditable */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700\"\n                                  title=\"Editar ejercicio\"\n                                  onClick={() => handleEditExerciseClick(ex)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                                  </svg>\n                                </button>\n                              )}\n                              {/* Botón para eliminar ejercicio */}\n                              {isEditable && (\n                                <button\n                                  className=\"p-1 rounded-full bg-red-100 hover:bg-red-200 text-red-700\"\n                                  title=\"Eliminar ejercicio\"\n                                  onClick={() => handleDeleteExercise(ex.id)}\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                                  </svg>\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                          \n                          {/* Mostrar detalles del ejercicio */}\n                          {renderExerciseDetails(ex)}\n\n                          {/* Mostrar seguimiento semanal */}\n                          {renderWeeklyTracking(ex)}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    ));\n  }\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800\">\n          {routine.name || 'Rutina sin nombre'}\n        </h2>\n        \n        {/* Botón para editar rutina */}\n        {isEditable && (\n          <button\n            onClick={handleOpenRoutineModal}\n            className=\"p-2 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n            title=\"Editar rutina\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n            </svg>\n          </button>\n        )}\n      </div>\n      \n      {/* Información básica de la rutina */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div>\n            <span className=\"font-semibold\">Fecha de inicio:</span> {routine.startDate || 'No especificada'}\n          </div>\n          <div>\n            <span className=\"font-semibold\">Fecha de fin:</span> {routine.endDate || 'No especificada'}\n          </div>\n          <div className=\"col-span-2\">\n            <span className=\"font-semibold\">Descripción:</span> {routine.description || 'Sin descripción'}\n          </div>\n        </div>\n      </div>\n\n      {/* Lista de ejercicios */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h3 className=\"text-lg font-semibold\">Ejercicios</h3>\n          {/* Botón para agregar nuevo ejercicio */}\n          {isEditable && (\n            <button\n              onClick={onAddExerciseClick}\n              className=\"p-2 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n              title=\"Agregar nuevo ejercicio\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n              </svg>\n            </button>\n          )}\n        </div>\n        {ejerciciosPorDia}\n      </div>\n\n      {/* Sección de Percepciones (Seguimiento Diario) */}\n      <div className=\"mb-6\">\n        <div \n          className=\"flex items-center justify-between cursor-pointer p-2 bg-green-50 rounded-lg hover:bg-green-100 transition-colors mb-4\"\n        >\n          <h3 className=\"text-lg font-semibold text-green-700\">Percepciones</h3>\n          <div className=\"flex items-center gap-2\">\n            {/* Botón para agregar seguimiento diario */}\n            {canAddDailyTracking && (\n              <button\n                onClick={handleOpenDailyModal}\n                className=\"p-1 rounded-full bg-green-100 hover:bg-green-200 text-green-700 transition-colors\"\n                title=\"Agregar Seguimiento Diario\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n              </button>\n            )}\n          </div>\n        </div>\n        \n        {/* Tabla de seguimiento diario */}\n        {routine.dailyTracking && Object.keys(routine.dailyTracking).length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm border border-green-300 rounded-lg overflow-hidden\">\n              <thead className=\"bg-green-100\">\n                <tr>\n                  <th className=\"px-2 py-1 text-center w-28\">Fecha</th>\n                  <th className=\"px-2 py-1 text-center w-16\">PF</th>\n                  <th className=\"px-2 py-1 text-center w-16\">PE</th>\n                  <th className=\"px-2 py-1 text-center w-20\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.entries(routine.dailyTracking)\n                  .sort(([a], [b]) => new Date(b) - new Date(a))\n                  .map(([date, data]) => (\n                    <tr key={date} className=\"border-t\">\n                      <td className=\"px-2 py-1 text-center text-xs\">{date}</td>\n                      <td className=\"px-2 py-1 text-center font-medium\">{data.pf}</td>\n                      <td className=\"px-2 py-1 text-center font-medium\">{data.pe}</td>\n                      <td className=\"px-2 py-1\">\n                        <div className=\"flex gap-1 justify-center\">\n                          <button\n                            onClick={() => handleEditDaily(date, data)}\n                            className=\"p-1 rounded-full bg-blue-100 hover:bg-blue-200 text-blue-700 transition-colors\"\n                            title=\"Editar seguimiento\"\n                          >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-3 h-3\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                            </svg>\n                          </button>\n                          <button\n                            onClick={() => handleDeleteDaily(date)}\n                            className=\"p-1 rounded-full bg-red-100 hover:bg-red-200 text-red-700 transition-colors\"\n                            title=\"Eliminar seguimiento\"\n                          >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-3 h-3\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                            </svg>\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-4 text-gray-500\">\n            No hay percepciones registradas aún.\n          </div>\n        )}\n      </div>\n\n      {/* Modal para seguimiento diario general */}\n      {showDailyModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">\n              {isEditingDaily ? 'Editar seguimiento diario' : 'Seguimiento Diario de la Rutina'}\n            </h3>\n            <p className=\"text-sm text-gray-600 mb-4\">\n              {isEditingDaily ? 'Modifica tu percepción de fatiga y esfuerzo' : 'Registra tu percepción de fatiga y esfuerzo'}\n            </p>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha del entrenamiento\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                value={dailyDate}\n                onChange={e => setDailyDate(e.target.value)}\n                disabled={isEditingDaily}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Percepción de Fatiga (PF) - 1 a 10\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Ej: 7\"\n                value={dailyPF}\n                onChange={e => setDailyPF(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Percepción de Esfuerzo (PE) - 1 a 10\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Ej: 8\"\n                value={dailyPE}\n                onChange={e => setDailyPE(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"flex gap-3\">\n              <button\n                onClick={handleSaveDaily}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                {isEditingDaily ? 'Actualizar' : 'Guardar'}\n              </button>\n              <button\n                onClick={handleCloseDailyModal}\n                className=\"flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-400 transition-colors\"\n              >\n                Cancelar\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Modal para seguimiento semanal */}\n      {showWeeklyModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">\n              {isEditingWeekly ? 'Editar seguimiento semanal' : 'Seguimiento Semanal'}\n            </h3>\n            <p className=\"text-sm text-gray-600 mb-4\">\n              Ejercicio: <span className=\"font-semibold\">{weeklyExercise?.name}</span>\n            </p>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Semana\n              </label>\n              <select\n                value={weekNumber}\n                onChange={(e) => setWeekNumber(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                disabled={isEditingWeekly}\n              >\n                <option value=\"\">Selecciona una semana</option>\n                {getWeekOptions().map(week => (\n                  <option key={week.value} value={week.value}>\n                    {week.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Peso (kg)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.1\"\n                value={weekWeight}\n                onChange={(e) => setWeekWeight(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Ej: 80.5\"\n              />\n            </div>\n            \n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Notas generales\n              </label>\n              <textarea\n                value={weekNotes}\n                onChange={(e) => setWeekNotes(e.target.value)}\n                rows=\"3\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Observaciones, sensaciones, etc.\"\n              />\n            </div>\n            \n            <div className=\"flex gap-3\">\n              <button\n                onClick={handleSaveWeekly}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                {isEditingWeekly ? 'Actualizar' : 'Guardar'}\n              </button>\n              <button\n                onClick={handleCloseWeeklyModal}\n                className=\"flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-400 transition-colors\"\n              >\n                Cancelar\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Modal para editar información de rutina */}\n      {showRoutineModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-md\">\n            <h3 className=\"text-lg font-bold mb-4\">Editar Rutina</h3>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Nombre de la rutina\n              </label>\n              <input\n                type=\"text\"\n                value={routineName}\n                onChange={(e) => setRoutineName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Ej: Rutina de fuerza\"\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha de inicio\n              </label>\n              <input\n                type=\"date\"\n                value={routineStartDate}\n                onChange={(e) => setRoutineStartDate(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha de fin\n              </label>\n              <input\n                type=\"date\"\n                value={routineEndDate}\n                onChange={(e) => setRoutineEndDate(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n            \n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Descripción\n              </label>\n              <textarea\n                value={routineDescription}\n                onChange={(e) => setRoutineDescription(e.target.value)}\n                rows=\"3\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Describe los objetivos y características de la rutina\"\n              />\n            </div>\n            \n            <div className=\"flex gap-3\">\n              <button\n                onClick={handleSaveRoutine}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Guardar\n              </button>\n              <button\n                onClick={handleCloseRoutineModal}\n                className=\"flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-400 transition-colors\"\n              >\n                Cancelar\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Modal para editar ejercicio */}\n      {showExerciseModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-lg w-full max-w-lg max-h-[90vh] overflow-y-auto\">\n            <h3 className=\"text-lg font-bold mb-4\">\n              {editExercise ? 'Editar Ejercicio' : 'Agregar Ejercicio'}\n            </h3>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Nombre del ejercicio\n              </label>\n              <input\n                type=\"text\"\n                value={exerciseName}\n                onChange={(e) => setExerciseName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Ej: Sentadilla\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Series\n                </label>\n                <input\n                  type=\"text\"\n                  value={exerciseSets}\n                  onChange={(e) => setExerciseSets(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ej: 3\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Repeticiones\n                </label>\n                <input\n                  type=\"text\"\n                  value={exerciseReps}\n                  onChange={(e) => setExerciseReps(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ej: 10-12\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Peso (kg)\n                </label>\n                <input\n                  type=\"text\"\n                  value={exerciseWeight}\n                  onChange={(e) => setExerciseWeight(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ej: 80\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Tiempo (seg)\n                </label>\n                <input\n                  type=\"text\"\n                  value={exerciseTime}\n                  onChange={(e) => setExerciseTime(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ej: 30\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Descanso (seg)\n              </label>\n              <input\n                type=\"text\"\n                value={exerciseRest}\n                onChange={(e) => setExerciseRest(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Ej: 90\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  RIR (Reps in Reserve)\n                </label>\n                <input\n                  type=\"text\"\n                  value={exerciseRIR}\n                  onChange={(e) => setExerciseRIR(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ej: 2\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Cadencia\n                </label>\n                <input\n                  type=\"text\"\n                  value={exerciseCadencia}\n                  onChange={(e) => setExerciseCadencia(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ej: 3-1-2-1\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                URL de Media (video/imagen)\n              </label>\n              <input\n                type=\"url\"\n                value={exerciseMedia}\n                onChange={(e) => setExerciseMedia(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Ej: https://youtube.com/ejercicio\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-3 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Día\n                </label>\n                <select\n                  value={exerciseDay}\n                  onChange={(e) => setExerciseDay(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  {dayOptions.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Sección\n                </label>\n                <select\n                  value={exerciseSection}\n                  onChange={(e) => setExerciseSection(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  {sectionOptions.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Round\n                </label>\n                <input\n                  type=\"text\"\n                  value={exerciseRound}\n                  onChange={(e) => setExerciseRound(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ej: 1\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => {\n                  // Intentar obtener el ID de diferentes formas\n                 \n                  const routineId = routine?.id || routine?.routine_id || routine?.client_id;\n                  console.log('routineId detectado:', routineId);\n                  \n                  // Validar que exista el ID de la rutina\n                  if (!routine || !routineId) {\n                    console.error('Error: ID de rutina no encontrado', {\n                      routine,\n                      routineId,\n                      availableKeys: Object.keys(routine || {}),\n                      routineType: typeof routine,\n                      routineConstructor: routine?.constructor?.name\n                    });\n                    alert('Error: No se encontró el ID de la rutina. Por favor, recarga la página.');\n                    return;\n                  }\n\n                  // Datos del ejercicio a guardar\n                  const exerciseData = {\n                    ...editExercise,\n                    name: exerciseName,\n                    sets: exerciseSets,\n                    reps: exerciseReps,\n                    weight: exerciseWeight,\n                    time: exerciseTime,\n                    rest: exerciseRest,\n                    day: exerciseDay,\n                    section: exerciseSection,\n                    media: exerciseMedia, // Incluir el campo media\n                    rir: exerciseRIR, // Incluir el campo RIR\n                    cadencia: exerciseCadencia, // Incluir el campo Cadencia\n                    round: exerciseRound, // Incluir el campo Round\n                  };\n                  \n                  console.log('Datos a guardar:', exerciseData);\n                  console.log('Llamando onUpdateRoutine con:', {\n                    id: routineId,\n                    action: 'editExercise',\n                    data: exerciseData\n                  });\n\n                  // Guardar cambios - CORRIGIENDO EL FORMATO\n                  onUpdateRoutine({\n                    id: routineId,\n                    action: 'editExercise',\n                    data: exerciseData\n                  });\n                  setShowExerciseModal(false);\n                  setEditExercise(null);\n                  setExerciseName(\"\");\n                  setExerciseSets(\"\");\n                  setExerciseReps(\"\");\n                  setExerciseWeight(\"\");\n                  setExerciseTime(\"\");\n                  setExerciseRest(\"\");\n                  setExerciseDay(\"\");\n                  setExerciseSection(\"\");\n                  setExerciseMedia(\"\"); // Limpiar el campo media\n                  setExerciseRIR(\"\"); // Limpiar el campo RIR\n                  setExerciseCadencia(\"\"); // Limpiar el campo Cadencia\n                  setExerciseRound(\"\"); // Limpiar el campo Round\n                }}\n                disabled={!exerciseName.trim()}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-300\"\n              >Guardar</button>\n              <button\n                onClick={() => {\n                  setShowExerciseModal(false);\n                  setEditExercise(null);\n                  setExerciseName(\"\");\n                  setExerciseSets(\"\");\n                  setExerciseReps(\"\");\n                  setExerciseWeight(\"\");\n                  setExerciseTime(\"\");\n                  setExerciseRest(\"\");\n                  setExerciseDay(\"\");\n                  setExerciseSection(\"\");\n                  setExerciseMedia(\"\"); // Limpiar el campo media\n                  setExerciseRIR(\"\"); // Limpiar el campo RIR\n                  setExerciseCadencia(\"\"); // Limpiar el campo Cadencia\n                  setExerciseRound(\"\"); // Limpiar el campo Round\n                }}\n                className=\"flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-400 transition-colors\"\n              >Cancelar</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoutineDetail;\n"],"names":["_ref","routine","onUpdateRoutine","isEditable","onAddExerciseClick","canAddDailyTracking","console","log","id","showExerciseModal","setShowExerciseModal","React","editExercise","setEditExercise","exerciseName","setExerciseName","exerciseSets","setExerciseSets","exerciseReps","setExerciseReps","exerciseWeight","setExerciseWeight","exerciseTime","setExerciseTime","exerciseRest","setExerciseRest","exerciseDay","setExerciseDay","exerciseSection","setExerciseSection","exerciseMedia","setExerciseMedia","exerciseRIR","setExerciseRIR","exerciseCadencia","setExerciseCadencia","exerciseRound","setExerciseRound","handleEditExerciseClick","ex","name","sets","reps","weight","time","rest","day","section","media","rir","cadencia","round","getWeekOptions","startDate","endDate","start","Date","end","diffTime","Math","abs","diffDays","ceil","numWeeks","max","Array","from","length","_","i","value","toString","label","exercises","isArray","collapsedDays","setCollapsedDays","allDays","Set","forEach","add","renderExerciseDetails","_jsxs","className","children","_jsx","collapsedSections","setCollapsedSections","allSections","showWeeklyModal","setShowWeeklyModal","weeklyExercise","setWeeklyExercise","weekNumber","setWeekNumber","weekWeight","setWeekWeight","weekNotes","setWeekNotes","isEditingWeekly","setIsEditingWeekly","editingWeeklyData","setEditingWeeklyData","collapsedWeeklyTracking","setCollapsedWeeklyTracking","allExerciseIds","showDailyModal","setShowDailyModal","dailyDate","setDailyDate","dailyPF","setDailyPF","dailyPE","setDailyPE","isEditingDaily","setIsEditingDaily","editingDailyDate","setEditingDailyDate","showRoutineModal","setShowRoutineModal","routineName","setRoutineName","routineStartDate","setRoutineStartDate","routineEndDate","setRoutineEndDate","routineDescription","setRoutineDescription","toggleSection","daySection","newCollapsedSections","has","delete","renderWeeklyTracking","exercise","weekOptions","isCollapsed","maxWeight","weeklyData","weights","Object","values","map","data","parseFloat","filter","getMaxWeightForExercise","onClick","exerciseId","newCollapsedWeeklyTracking","toggleWeeklyTracking","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","week","_exercise$weeklyData","weekData","generalNotes","date","_Fragment","title","e","stopPropagation","handleEditWeeklyTracking","xmlns","handleDeleteWeeklyTracking","handleOpenWeeklyModal","weekValue","arguments","undefined","error","alert","message","confirm","routineId","routine_id","client_id","action","handleCloseWeeklyModal","handleCloseDailyModal","handleCloseRoutineModal","handleDeleteExercise","handleDeleteSection","includes","ejerciciosPorDia","groupedByDay","reduce","acc","push","sectionOrder","concat","keys","newCollapsedDays","toggleDay","handleDeleteDay","sectionName","sectionKey","window","open","handleOpenRoutineModal","description","handleOpenDailyModal","toISOString","split","dailyTracking","entries","sort","_ref2","_ref3","a","b","_ref4","pf","pe","handleEditDaily","handleDeleteDaily","type","onChange","target","disabled","min","placeholder","handleSaveDaily","dailyData","parseInt","timestamp","originalDate","step","rows","handleSaveWeekly","updateData","handleSaveRoutine","routineData","option","_routine$constructor","availableKeys","routineType","routineConstructor","constructor","exerciseData","trim"],"sourceRoot":""}