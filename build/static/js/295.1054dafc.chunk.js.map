{"version":3,"file":"static/js/295.1054dafc.chunk.js","mappings":"qIAEA,MAqEA,EArE8BA,IAMvB,IANwB,SAC7BC,EAAQ,MACRC,EAAK,SACLC,EAAW,CAAC,EAAC,OACbC,EAAM,QACNC,GACDL,EAEC,MAAOM,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IAE1CC,KAAKC,MAAMD,KAAKE,UAAUR,KAkBnC,OACES,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFC,UAC7FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8DAA6DC,SAAA,EAC1EC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,wCAAuCC,SAAA,CAAC,gBAAcb,EAASe,SAC7EJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,SAChDZ,EAAMe,IAAI,CAACC,EAAMC,KAAG,IAAAC,EAAA,OACnBL,EAAAA,EAAAA,MAAA,OAAgBF,UAAU,gEAA+DC,SAAA,EACvFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,CAAC,UAAQI,MAC5CN,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLC,YAAY,QACZT,UAAU,2HACVU,OAA0B,QAAnBH,EAAAd,EAAcY,UAAK,IAAAE,OAAA,EAAnBA,EAAqBI,QAAS,GACrCC,SAAUC,GA5BHC,EAACT,EAAMU,EAAOL,KACjChB,EAAiBsB,IAAI,IAChBA,EACH,CAACX,GAAO,IACHW,EAAKX,GACR,CAACU,GAAQL,OAuBcI,CAAaT,EAAM,QAASQ,EAAEI,OAAOP,OACpDQ,MAAO,CAAEC,SAAU,MAErBpB,EAAAA,EAAAA,KAAA,UACEC,UAAU,wIACVoB,MAAM,iBACNC,QAASA,KAvBrB9B,EAAOE,QACPD,KAsBwCS,UAE5BF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,gCAhBjDxB,QAsBdN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACpCF,EAAAA,EAAAA,KAAA,UACEsB,QAAS7B,EACTQ,UAAU,6GAA4GC,SACvH,mBC8DX,EA1HmBd,IAAkD,IAAjD,aAAE2C,EAAY,aAAEC,EAAY,YAAEtB,GAAatB,EAC7D,MAAO6C,EAAQC,IAAatC,EAAAA,EAAAA,WAAS,GAC/BuC,GAAgBC,EAAAA,EAAAA,QAAO,MAKvBC,EAAON,EAAe,IAAIO,KAAKP,GAAgB,IAAIO,MAClDC,EAAcC,IAAmB5C,EAAAA,EAAAA,UAASyC,EAAKI,aAC/CC,EAAaC,IAAkB/C,EAAAA,EAAAA,UAASyC,EAAKO,eAsB9CC,EAAkBC,IACtB,MAAMC,EAAU,IAAIT,KAAKI,EAAaH,EAAcO,GACpDd,EAAae,EAAQC,cAAcC,MAAM,KAAK,IAC9Cf,GAAU,IAkDZ,OAZAgB,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAsBC,IACtBjB,EAAckB,UAAYlB,EAAckB,QAAQC,SAASF,EAAMlC,SACjEgB,GAAU,IAId,OADAqB,SAASC,iBAAiB,YAAaL,GAChC,KACLI,SAASE,oBAAoB,YAAaN,KAE3C,KAGDhD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAWyD,IAAKvB,EAAcjC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLC,YAAaA,EACbC,MAAOoB,GAAgB,GACvB4B,UAAQ,EACRrC,QAASA,IAAMY,GAAWD,GAC1BhC,UAAU,4IAGXgC,IACC9B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mFAAkFC,SAAA,EAC/FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,UAAQsB,QAvFMsC,KACtBpB,EAAiBqB,GACG,IAAdA,GACFlB,EAAeD,EAAc,GACtB,IAEFmB,EAAY,IAiFqB5D,UAAU,qCAAoCC,UAC9EF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,qCAGzD3B,EAAAA,EAAAA,MAAA,QAAMF,UAAU,8BAA6BC,SAAA,CApCpC,CACjB,QAAS,UAAW,QAAS,QAAS,OAAQ,QAC9C,QAAS,SAAU,aAAc,UAAW,YAAa,aAkCSqC,GAAc,IAAEG,MAC1E1C,EAAAA,EAAAA,KAAA,UAAQsB,QAnFMwC,KACtBtB,EAAiBqB,GACG,KAAdA,GACFlB,EAAeD,EAAc,GACtB,GAEFmB,EAAY,IA6EqB5D,UAAU,qCAAoCC,UAC9EF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,sCAI3D3B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qCAAoCC,SAAA,CAChD,CAAC,MAAO,MAAO,MAAO,SAAO,MAAO,MAAO,UAAOG,IAAKyC,IACtD9C,EAAAA,EAAAA,KAAA,OAAeC,UAAU,oCAAmCC,SAAE4C,GAApDA,IA3EHiB,MACjB,MAAMC,EAlC6B,IAAI1B,KAkCTI,EAAaH,EAlCe,EAAG,GAAG0B,UAmChE,MAAMC,EAlCgBC,EAACC,EAAMC,IAAU,IAAI/B,KAAK8B,EAAMC,EAAO,GAAGC,SAkC/CH,CAAgBzB,EAAaH,GACxCgC,EAAO,GAGb,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAUM,IAC5BD,EAAKE,MAAKzE,EAAAA,EAAAA,KAAA,OAAwBC,UAAU,0DAAxB,SAASuE,MAI/B,IAAK,IAAI1B,EAAM,EAAGA,GAAOkB,EAAWlB,IAAO,CACzC,MAAM4B,EAAa3C,GAAgB,IAAIO,KAAKP,GAAc4C,iBAAmB,IAAIrC,KAAKI,EAAaH,EAAcO,GAAK6B,eAChHC,GAAU,IAAItC,MAAOqC,iBAAmB,IAAIrC,KAAKI,EAAaH,EAAcO,GAAK6B,eACvFJ,EAAKE,MACHzE,EAAAA,EAAAA,KAAA,OAEEsB,QAASA,IAAMuB,EAAeC,GAC9B7C,UAAW,6FACPyE,EAAa,sBAAwB,kDACrCE,IAAYF,EAAa,yBAA2B,iBACtDxE,SAED4C,GAPIA,GAUX,CACA,OAAOyB,GAkDER,a,aC/Gb,MAo4BA,EAp4BsB3E,IAKf,IALgB,QACrByF,EAAO,gBACPC,EAAkBA,OAAQ,WAC1BC,EAAU,mBACVC,EAAqBA,QACtB5F,EACC,MAAO6F,EAAmBC,IAAwBtF,EAAAA,EAAAA,UAAS,OACpDuF,EAAYC,IAAiBxF,EAAAA,EAAAA,UAASiF,EAAQQ,MAAQ,KACtDC,EAAYC,IAAiB3F,EAAAA,EAAAA,UAASiF,EAAQW,MAAQ,KACtDC,EAAcC,IAAmB9F,EAAAA,EAAAA,UAASiF,EAAQc,QAAU,KAC5DC,EAAaC,IAAkBjG,EAAAA,EAAAA,UAASiF,EAAQiB,OAAS,KACzDC,EAAaC,IAAkBpG,EAAAA,EAAAA,UAASiF,EAAQjE,OAAS,KACzDqF,EAAYC,IAAiBtG,EAAAA,EAAAA,UAASiF,EAAQsB,MAAQ,KACtDC,EAAYC,IAAiBzG,EAAAA,EAAAA,UAASiF,EAAQyB,MAAQ,KACtDC,EAAWC,IAAgB5G,EAAAA,EAAAA,UAASiF,EAAQ/B,KAAO,KAGnD2D,EAAuBC,IAA4B9G,EAAAA,EAAAA,WAAS,IAC5D+G,EAAmBC,IAAwBhH,EAAAA,EAAAA,UAASiF,EAAQzE,OAC5DyG,EAAiBC,IAAsBlH,EAAAA,EAAAA,UAASiF,EAAQkC,YACxDC,EAAeC,IAAoBrH,EAAAA,EAAAA,UAASiF,EAAQqC,UACpDC,EAAmBC,IAAwBxH,EAAAA,EAAAA,UAASiF,EAAQwC,aAAe,KAC3EC,EAAoBC,IAAyB3H,EAAAA,EAAAA,UAASiF,EAAQ2C,SAAW,KAGzEC,EAA0BC,IAA+B9H,EAAAA,EAAAA,UAAS,CAAC,IAEnE+H,EAAmBC,IAAwBhI,EAAAA,EAAAA,WAAS,IACpDiI,EAAkBC,IAAuBlI,EAAAA,EAAAA,UAAS,MAGnDmI,EAAmBlD,EAAQkD,kBAAoB,CAAC,EAiBhDC,EAdgBC,MACpB,IAAKpD,EAAQkC,YAAclC,EAAQqC,QAAS,MAAO,GACnD,MAAMgB,EAAQ,IAAI5F,KAAKuC,EAAQkC,WACzBoB,EAAM,IAAI7F,KAAKuC,EAAQqC,SACvB5H,EAAQ,GACd,IAAI+D,EAAU,IAAIf,KAAK4F,GACnBE,EAAU,EACd,KAAO/E,GAAW8E,GAChB7I,EAAMmF,KAAK2D,GACX/E,EAAQgF,QAAQhF,EAAQY,UAAY,GACpCmE,IAEF,OAAO9I,GAEU2I,IAGZK,EAA8BC,IAAmC3I,EAAAA,EAAAA,UAAS,OAC1E4I,EAAWC,IAAgB7I,EAAAA,EAAAA,UAAS,KACpC8I,EAAWC,IAAgB/I,EAAAA,EAAAA,UAAS,KACpCgJ,GAAuBC,KAA4BjJ,EAAAA,EAAAA,WAAS,IAE5DkJ,GAAqBC,KAA0BnJ,EAAAA,EAAAA,WAAS,IACxDoJ,GAAaC,KAAkBrJ,EAAAA,EAAAA,UAAS,CAC7CQ,KAAM,GACNiF,KAAM,GACNG,KAAM,GACNG,OAAQ,GACRQ,KAAM,GACNG,KAAM,GACNR,MAAO,GACPlF,MAAO,GACPkC,IAAK,GACLoG,QAAS,KAiCLC,GAA2BA,KAC/BjE,EAAqB,OAuCjBkE,GAAYC,MAAMC,QAAQzE,EAAQuE,WAAavE,EAAQuE,UAAY,GACnEG,GAAmBH,GAAUI,OAAO,CAACC,EAAKpK,KAC9C,MAAMyD,EAAMzD,EAASyD,KAAO,aACtBoG,EAAU7J,EAAS6J,SAAW,iBAIpC,OAHKO,EAAI3G,KAAM2G,EAAI3G,GAAO,CAAC,GACtB2G,EAAI3G,GAAKoG,KAAUO,EAAI3G,GAAKoG,GAAW,IAC5CO,EAAI3G,GAAKoG,GAASzE,KAAKpF,GAChBoK,GACN,CAAC,GAEEC,GAAaC,OAAOC,KAAKL,IAAkBM,KAAK,CAACC,EAAGC,IACpDD,EAAEE,WAAW,WAAUD,EAAEC,WAAW,UAC/BC,SAASH,EAAEI,QAAQ,UAAQ,KAAOD,SAASF,EAAEG,QAAQ,UAAQ,KAE/DJ,EAAEK,cAAcJ,IAGnBK,GAAe,CAAC,UAAW,aAAc,MAAO,SAAU,SAAU,eAAgB,YAAa,SAUjGC,GAA2BA,CAACC,EAAYC,EAAWvJ,EAAOL,KAC9D,MAAM6J,EAAmB3F,EAAQuE,UAAU/I,IAAIoK,IAC7C,GAAIA,EAAGC,KAAOJ,EAAY,CACxB,MAAMK,EAAoB,IAAKF,EAAGG,YAAc,CAAC,GAKjD,OAJKD,EAAkBJ,KACrBI,EAAkBJ,GAAa,CAAE5E,OAAQ,GAAIkF,aAAc,KAE7DF,EAAkBJ,GAAWvJ,GAASL,EAC/B,IAAK8J,EAAIG,WAAYD,EAC9B,CACA,OAAOF,IAET3F,EAAgB,IAAKD,EAASuE,UAAWoB,KAGrCM,GAAyBA,KAC7B,GAAIxC,GAAgCE,GAAaE,EAAW,CAC1D,MAAMqC,EAAiB,IAAKlG,GACvBkG,EAAeC,gBAClBD,EAAeC,cAAgB,CAAC,GAElC,MACMC,EADa,IAAI3I,KAAKgG,GACKtF,cAAcC,MAAM,KAAK,GAErD8H,EAAeC,cAAcC,KAChCF,EAAeC,cAAcC,GAAiB,IAEhDF,EAAeC,cAAcC,GAAexG,KAAK,CAC/CyG,GAAI1C,EACJ2C,GAAIzC,IAEN5D,EAAgBiG,GAChBtC,EAAa,IACbE,EAAa,IACbJ,EAAgC,KAClC,MACE6C,MAAM,sEAwEV,OACEjL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qCAAoCC,SAAA,CAChDuG,GACCtG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wDAAuDC,SAAA,EACpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uCAAsCC,SAAC,+BACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,cAAcpL,UAAU,+CAA8CC,SAAC,6BAGtFF,EAAAA,EAAAA,KAAA,SACE0K,GAAG,cACHjK,KAAK,OACLE,MAAOgG,EACP9F,SAAWC,GAAM8F,EAAqB9F,EAAEI,OAAOP,OAC/CV,UAAU,iIAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qEAAoEC,SAAA,EACjFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,YAAYpL,UAAU,+CAA8CC,SAAC,sBACpFF,EAAAA,EAAAA,KAACsL,EAAU,CACTvJ,aAAc8E,EACd7E,aAAc8E,EACdpG,YAAY,wBAGhBP,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,UAAUpL,UAAU,+CAA8CC,SAAC,mBAClFF,EAAAA,EAAAA,KAACsL,EAAU,CACTvJ,aAAciF,EACdhF,aAAciF,EACdvG,YAAY,wBAIlBP,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,cAAcpL,UAAU,+CAA8CC,SAAC,8CACtFF,EAAAA,EAAAA,KAAA,YACE0K,GAAG,cACH/J,MAAOwG,EACPtG,SAAWC,GAAMsG,EAAqBtG,EAAEI,OAAOP,MAAM4K,MAAM,EAAG,MAC9DtL,UAAU,oIACVuL,KAAK,IACL9K,YAAY,8CAEdP,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mCAAkCC,SAAA,CAAEiH,EAAkBsE,OAAO,cAG5EtL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,eAAepL,UAAU,+CAA8CC,SAAC,2BACvFF,EAAAA,EAAAA,KAAA,SACE0K,GAAG,eACHjK,KAAK,OACLE,MAAO2G,EACPzG,SAAWC,GAAMyG,EAAsBzG,EAAEI,OAAOP,OAChDV,UAAU,qEAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,OAAOpL,UAAU,8BAA6BC,SAAC,YAC9DF,EAAAA,EAAAA,KAAA,SAAO0K,GAAG,OAAOjK,KAAK,OAAOE,MAAOwE,EAAYtE,SAAUC,GAAKsE,EAActE,EAAEI,OAAOP,OAAQV,UAAU,yCAE1GE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,OAAOpL,UAAU,8BAA6BC,SAAC,UAC9DF,EAAAA,EAAAA,KAAA,SAAO0K,GAAG,OAAOjK,KAAK,OAAOE,MAAO2E,EAAYzE,SAAUC,GAAKyE,EAAczE,EAAEI,OAAOP,OAAQV,UAAU,yCAE1GE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,SAASpL,UAAU,8BAA6BC,SAAC,UAChEF,EAAAA,EAAAA,KAAA,SAAO0K,GAAG,SAASjK,KAAK,OAAOE,MAAO8E,EAAc5E,SAAUC,GAAK4E,EAAgB5E,EAAEI,OAAOP,OAAQV,UAAU,yCAEhHE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,OAAOpL,UAAU,8BAA6BC,SAAC,YAC9DF,EAAAA,EAAAA,KAAA,SAAO0K,GAAG,OAAOjK,KAAK,OAAOE,MAAOsF,EAAYpF,SAAUC,GAAKoF,EAAcpF,EAAEI,OAAOP,OAAQV,UAAU,yCAE1GE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,OAAOpL,UAAU,8BAA6BC,SAAC,cAC9DF,EAAAA,EAAAA,KAAA,SAAO0K,GAAG,OAAOjK,KAAK,OAAOE,MAAOyF,EAAYvF,SAAUC,GAAKuF,EAAcvF,EAAEI,OAAOP,OAAQV,UAAU,4CAG5GE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,QAAQpL,UAAU,+CAA8CC,SAAC,kBAChFF,EAAAA,EAAAA,KAAA,SACE0K,GAAG,QACHjK,KAAK,OACLE,MAAOiF,EACP/E,SAAWC,GAAM+E,EAAe/E,EAAEI,OAAOP,OACzCV,UAAU,qEAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,QAAQpL,UAAU,+CAA8CC,SAAC,YAChFF,EAAAA,EAAAA,KAAA,YACE0K,GAAG,QACH/J,MAAOoF,EACPlF,SAAWC,GAAMkF,EAAelF,EAAEI,OAAOP,OACzCV,UAAU,+DACVuL,KAAK,IACL9K,YAAY,4BAGhBP,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOqL,QAAQ,MAAMpL,UAAU,+CAA8CC,SAAC,aAC9EF,EAAAA,EAAAA,KAAA,SACE0K,GAAG,MACHjK,KAAK,OACLE,MAAO4F,EACP1F,SAAWC,GAAM0F,EAAa1F,EAAEI,OAAOP,OACvCV,UAAU,qEAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,UACEsB,QA1Q2BoK,KACrC9E,EAAqB/B,EAAQzE,MAC7B0G,EAAmBjC,EAAQkC,WAC3BE,EAAiBpC,EAAQqC,SACzBE,EAAqBvC,EAAQwC,aAAe,IAC5CE,EAAsB1C,EAAQ2C,SAAW,IACzCpC,EAAcP,EAAQQ,MAAQ,IAC9BE,EAAcV,EAAQW,MAAQ,IAC9BE,EAAgBb,EAAQc,QAAU,IAClCE,EAAehB,EAAQiB,OAAS,IAChCE,EAAenB,EAAQjE,OAAS,IAChCsF,EAAcrB,EAAQsB,MAAQ,IAC9BE,EAAcxB,EAAQyB,MAAQ,IAC9BE,EAAa3B,EAAQ/B,KAAO,IAC5B4D,GAAyB,IA6PfzG,UAAU,8IACVoB,MAAM,WAAUnB,UAEhBF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,8BAGzD9B,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLa,QAASA,KACPwD,EAAgB,CACd4F,GAAI7F,EAAQ6F,GACZtK,KAAMuG,EACNI,UAAWF,EACXK,QAASF,EACTK,YAAaF,EACbwE,UAAW9G,EAAQ8G,UACnBnE,QAASF,EACTjC,KAAMF,EACNK,KAAMF,EACNK,OAAQF,EACR7E,MAAOmF,EACPD,MAAOF,EACP9C,IAAKyD,EACLJ,KAAMF,EACNK,KAAMF,IAERM,GAAyB,IAE3BzG,UAAU,wIACVoB,MAAM,kBAAiBnB,UAEvBF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,qCAM7D3B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCC,SAAE2E,EAAQzE,OACzDyE,EAAQkC,WAAalC,EAAQqC,UAC5B/G,EAAAA,EAAAA,MAAA,KAAGF,UAAU,wBAAuBC,SAAA,CAAC,YACzB2E,EAAQkC,UAAU,MAAIlC,EAAQqC,WAG3CrC,EAAQwC,cACPrH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAE2E,EAAQwC,iBAGtDtC,IACC/E,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAAMoF,GAAyB,GACxCzG,UAAU,+IACVoB,MAAM,gBAAenB,UAErBF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,wKAOzC,IAArBsH,GAAUqC,QACTzL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,SAAC,6CAE9CwJ,GAAWrJ,IAAKyC,IACd3C,EAAAA,EAAAA,MAAA,OAAeF,UAAU,4CAA2CC,SAAA,EAClEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDC,SAAE4C,IACnE6G,OAAOC,KAAKL,GAAiBzG,IAAM+G,KAAK,CAACC,EAAGC,KAC3C,MAAM6B,EAASxB,GAAayB,QAAQ/B,GAC9BgC,EAAS1B,GAAayB,QAAQ9B,GACpC,OAAgB,IAAZ6B,IAA6B,IAAZE,EAAsBhC,EAAEK,cAAcJ,IAC3C,IAAZ6B,EAAsB,GACV,IAAZE,GAAuB,EACpBF,EAASE,IACfzL,IAAK6I,IACN/I,EAAAA,EAAAA,MAAA,OAEEF,UAAW,yCAAyCC,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,UACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAAEgJ,OAEvDlJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,2CAA0CC,SAAA,EACzDF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,uCAAsCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,eAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,YAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,kBAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,eAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,YAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,cAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,WAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iFAAgFC,SAAC,UAC9F6E,IACC/E,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kFAAiFC,SAAC,cAElGF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mFAAkFC,SAAC,sBAGrGF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,2BAA0BC,SACxCqJ,GAAiBzG,GAAKoG,GAAS7I,IAAKhB,IACnCc,EAAAA,EAAAA,MAAC4L,EAAAA,SAAc,CAAA7L,SAAA,EACbC,EAAAA,EAAAA,MAAA,MAAImB,QAASA,KAAM0K,OAjSX1B,EAiSkCjL,EAASqL,QAhSzEhD,EAA4BuE,IAAS,IAChCA,EACH,CAAC3B,IAAc2B,EAAU3B,MAHGA,OAiSgDrK,UAAU,oDAAmDC,SAAA,EACnHF,EAAAA,EAAAA,KAAA,MAAI,aAAW,YAAYC,UAAU,gEAA+DC,SAAEb,EAASe,QAC/GJ,EAAAA,EAAAA,KAAA,MAAI,aAAW,SAASC,UAAU,oDAAmDC,SAClF+E,IAAsB5F,EAASqL,IAC9B1K,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOwE,EACPtE,SAAWC,GAAMsE,EAActE,EAAEI,OAAOP,OACxCV,UAAU,qCAGZZ,EAASgG,QAGbrF,EAAAA,EAAAA,KAAA,MAAI,aAAW,eAAeC,UAAU,oDAAmDC,SACxF+E,IAAsB5F,EAASqL,IAC9B1K,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAO2E,EACPzE,SAAWC,GAAMyE,EAAczE,EAAEI,OAAOP,OACxCV,UAAU,qCAGZZ,EAASmG,QAGbxF,EAAAA,EAAAA,KAAA,MAAI,aAAW,YAAYC,UAAU,oDAAmDC,SACrF+E,IAAsB5F,EAASqL,IAC9B1K,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAO8E,EACP5E,SAAWC,GAAM4E,EAAgB5E,EAAEI,OAAOP,OAC1CV,UAAU,qCAGZZ,EAASsG,UAGb3F,EAAAA,EAAAA,KAAA,MAAI,aAAW,SAASC,UAAU,oDAAmDC,SAClF+E,IAAsB5F,EAASqL,IAC9B1K,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOsF,EACPpF,SAAWC,GAAMoF,EAAcpF,EAAEI,OAAOP,OACxCV,UAAU,qCAGZZ,EAAS8G,MAAQ,SAGrBnG,EAAAA,EAAAA,KAAA,MAAI,aAAW,WAAWC,UAAU,oDAAmDC,SACpF+E,IAAsB5F,EAASqL,IAC9B1K,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOyF,EACPvF,SAAWC,GAAMuF,EAAcvF,EAAEI,OAAOP,OACxCV,UAAU,qCAGZZ,EAASiH,MAAQ,SAGrBtG,EAAAA,EAAAA,KAAA,MAAI,aAAW,QAAQC,UAAU,oDAAmDC,SACjF+E,IAAsB5F,EAASqL,IAC9B1K,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOiF,EACP/E,SAAWC,GAAM+E,EAAe/E,EAAEI,OAAOP,OACzCV,UAAU,mCACVS,YAAY,iBAGdrB,EAASyG,OACP9F,EAAAA,EAAAA,KAAA,KAAGkM,KAAM7M,EAASyG,MAAO5E,OAAO,SAASiL,IAAI,sBAAsBlM,UAAU,gCAA+BC,UAC1GF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,uBAAsBC,UAC5IF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,uIAGvD,SAGR9B,EAAAA,EAAAA,KAAA,MAAI,aAAW,QAAQC,UAAU,oDAAmDC,SACjF+E,IAAsB5F,EAASqL,IAC9B1K,EAAAA,EAAAA,KAAA,YACEW,MAAOoF,EACPlF,SAAWC,GAAMkF,EAAelF,EAAEI,OAAOP,OACzCV,UAAU,4CACVuL,KAAK,IACL9K,YAAY,wBAGdrB,EAASuB,OAAS,QAGrBmE,IACC5E,EAAAA,EAAAA,MAAA,MAAI,aAAW,WAAWF,UAAU,kGAAiGC,SAAA,CAClI+E,IAAsB5F,EAASqL,IAC9BvK,EAAAA,EAAAA,MAAAiM,EAAAA,SAAA,CAAAlM,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAlgBpBgJ,KACvB,MAAME,EAAmB3F,EAAQuE,UAAU/I,IAAKoK,GAC9CA,EAAGC,KAAOJ,EACN,IACKG,EACHpF,KAAMF,EACNK,KAAMF,EACNK,OAAQF,EACRK,MAAOF,EACPhF,MAAOmF,EACPI,KAAMF,EACNK,KAAMF,GAERqE,GAEN3F,EAAgB,IAAKD,EAASuE,UAAWoB,IACzCtF,EAAqB,OAkf4BmH,CAAgBhN,EAASqL,IACxCzK,UAAU,wJACVoB,MAAM,UAASnB,UAEfF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,+BAGzD9B,EAAAA,EAAAA,KAAA,UACEsB,QAAS6H,GACTlJ,UAAU,sJACVoB,MAAM,WAAUnB,UAEhBF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,iCAK3D9B,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAjiBlBjC,KACvB6F,EAAqB7F,EAASqL,IAC9BtF,EAAc/F,EAASgG,MACvBE,EAAclG,EAASmG,MACvBE,EAAgBrG,EAASsG,QACzBE,EAAexG,EAASyG,OAAS,IACjCE,EAAe3G,EAASuB,OAAS,IACjCsF,EAAc7G,EAAS8G,MAAQ,IAC/BE,EAAchH,EAASiH,MAAQ,KAyhBgBgG,CAAgBjN,GAC/BY,UAAU,0JACVoB,MAAM,SAAQnB,UAEdF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,sKAI3D9B,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAzgBXgJ,KAC5B,GAAIiC,OAAOC,QAAQ,+DAA0D,CAC3E,MAAMhC,EAAmB3F,EAAQuE,UAAUqD,OAAQhC,GAAOA,EAAGC,KAAOJ,GACpExF,EAAgB,IAAKD,EAASuE,UAAWoB,GAC3C,GAqgB6CkC,CAAqBrN,EAASqL,IAC7CzK,UAAU,oJACVoB,MAAM,WAAUnB,UAEhBF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,0RAK7D9B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0CAAyCC,UACrDF,EAAAA,EAAAA,KAAA,UACEC,UAAU,iIACVoB,MAAM,sBACNC,QAASR,IACPA,EAAE6L,kBACF7E,EAAoBzI,GACpBuI,GAAqB,IACrB1H,UAEFF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,wDAKhF6F,GAAqBE,IACpB7H,EAAAA,EAAAA,KAAC4M,EAAqB,CACpBvN,SAAUwI,EACVvI,MAAO0I,EACPzI,SAAUwI,EAAiBF,EAAiB6C,KAAO,CAAC,EACpDlL,OAAQqN,IAEN,MAAMC,EAAkB,IAAK/E,EAAkB,CAACF,EAAiB6C,IAAKmC,GACtE/H,EAAgB,IAAKD,EAASkD,iBAAkB+E,KAElDrN,QAASA,KACPmI,GAAqB,GACrBE,EAAoB,YAMLL,EAAyBpI,EAASqL,MACjC1K,EAAAA,EAAAA,KAAA,MAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAI4M,QAAShI,EAAa,GAAK,EAAG9E,UAAU,0CAAyCC,SAAA,EACnFC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,6DAA4DC,SAAA,EACxEF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BtB,UAAU,6BAA6BuB,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAGxB,UAC5HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,2MACjD,kBACUzC,EAASe,SAE3BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB8H,EAAW3H,IAAIC,IAAI,IAAA0M,EAAAC,EAAAC,EAAAC,EAAA,OAClBhN,EAAAA,EAAAA,MAAA,OAAgBF,UAAU,+DAA8DC,SAAA,EACtFC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,yCAAwCC,SAAA,CAAC,UAAQI,EAAK,QACtEH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gFAA+EC,SAAA,EAC5FF,EAAAA,EAAAA,KAAA,SACES,KAAK,SACLR,UAAU,uJACVS,YAAY,YACZC,OAA0B,QAAnBqM,EAAA3N,EAASuL,kBAAU,IAAAoC,GAAQ,QAARC,EAAnBD,EAAsB1M,UAAK,IAAA2M,OAAR,EAAnBA,EAA6BtH,SAAU,GAC9C9E,SAAWC,GAAMuJ,GAAyBhL,EAASqL,GAAIpK,EAAM,SAAUQ,EAAEI,OAAOP,OAChFyM,UAAWrI,KAEb/E,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLR,UAAU,6IACVS,YAAY,kCACZC,OAA0B,QAAnBuM,EAAA7N,EAASuL,kBAAU,IAAAsC,GAAQ,QAARC,EAAnBD,EAAsB5M,UAAK,IAAA6M,OAAR,EAAnBA,EAA6BtC,eAAgB,GACpDhK,SAAWC,GAAMuJ,GAAyBhL,EAASqL,GAAIpK,EAAM,eAAgBQ,EAAEI,OAAOP,OACtFyM,UAAWrI,SAjBPzE,cAzLDjB,EAASqL,cA1BjCxB,KAqPT/I,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gEAA+DC,SAAA,EAC5EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wDAAwDqB,QAASA,IAAMuH,IAA0BD,IAAuB1I,SAAA,EACrIF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAAC,wBACpDF,EAAAA,EAAAA,KAAA,OACEuB,MAAM,6BACNtB,UAAW,qBAAqB2I,GAAwB,aAAe,kCACvEnH,QAAQ,YACRD,KAAK,eAActB,UAEnBF,EAAAA,EAAAA,KAAA,QAAMqN,SAAS,UAAUvL,EAAE,sHAAsHwL,SAAS,iBAG7J1E,KACCzI,EAAAA,EAAAA,MAAAiM,EAAAA,SAAA,CAAAlM,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qFAAoFC,SAAA,EACjGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,wBAChEF,EAAAA,EAAAA,KAACsL,EAAU,CACTvJ,aAAcuG,EACdtG,aAAcuG,EACd7H,YAAY,uBACZ0M,UAAWrI,QAGf5E,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,mCAChEF,EAAAA,EAAAA,KAAA,SACES,KAAK,SACLR,UAAU,wJACVS,YAAY,WACZC,MAAO6H,EACP3H,SAAWC,GAAM2H,EAAa3H,EAAEI,OAAOP,OACvCyM,UAAWrI,QAGf5E,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,qCAChEF,EAAAA,EAAAA,KAAA,SACES,KAAK,SACLR,UAAU,wJACVS,YAAY,WACZC,MAAO+H,EACP7H,SAAWC,GAAM6H,EAAa7H,EAAEI,OAAOP,OACvCyM,UAAWrI,QAGf/E,EAAAA,EAAAA,KAAA,UACEsB,QAASwJ,GACT7K,UAAU,mJACVoB,MAAM,UAASnB,UAEfF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,kCAK1D6H,OAAOC,KAAK/E,EAAQmG,eAAiB,CAAC,GAAGS,OAAS,IACjDtL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SAAC,2BACzDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvByJ,OAAOC,KAAK/E,EAAQmG,eAAenB,OAAOxJ,IAAIgC,GAC7CwC,EAAQmG,cAAc3I,GAAMhC,IAAI,CAACkN,EAAOC,KACtCrN,EAAAA,EAAAA,MAAA,OAA8BF,UAAU,qFAAoFC,SAAA,EAC1HC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,wBAAuBC,SAAA,CAAC,UAAQmC,MAChDlC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,wBAAuBC,SAAA,CAAC,OAAKqN,EAAMrC,OACnD/K,EAAAA,EAAAA,MAAA,QAAMF,UAAU,wBAAuBC,SAAA,CAAC,OAAKqN,EAAMpC,QAH3C,GAAG9I,KAAQmL,oBA/T7B1K,IAgVbiC,IACC/E,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAAMyH,IAAuB,GACtC9I,UAAU,+IACVoB,MAAM,oBAAmBnB,UAEzBF,EAAAA,EAAAA,KAAA,OAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAe1B,UAAU,UAASC,UAC/HF,EAAAA,EAAAA,KAAA,QAAM4B,cAAc,QAAQC,eAAe,QAAQC,EAAE,+BAK1DgH,KACC3I,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wDAAuDC,SAAA,EACpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uCAAsCC,SAAC,uBACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,aAChEF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOqI,GAAY5I,KACnBS,SAAUC,GAAKmI,GAAe,IAAKD,GAAa5I,KAAMU,EAAEI,OAAOP,QAC/DV,UAAU,qEAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,8BAA6BC,SAAC,YAC/CF,EAAAA,EAAAA,KAAA,SAAOS,KAAK,OAAOE,MAAOqI,GAAY3D,KAAMxE,SAAUC,GAAKmI,GAAe,IAAKD,GAAa3D,KAAMvE,EAAEI,OAAOP,QAAUV,UAAU,yCAEjIE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,8BAA6BC,SAAC,UAC/CF,EAAAA,EAAAA,KAAA,SAAOS,KAAK,OAAOE,MAAOqI,GAAYxD,KAAM3E,SAAUC,GAAKmI,GAAe,IAAKD,GAAaxD,KAAM1E,EAAEI,OAAOP,QAAUV,UAAU,yCAEjIE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,8BAA6BC,SAAC,UAC/CF,EAAAA,EAAAA,KAAA,SAAOS,KAAK,OAAOE,MAAOqI,GAAYrD,OAAQ9E,SAAUC,GAAKmI,GAAe,IAAKD,GAAarD,OAAQ7E,EAAEI,OAAOP,QAAUV,UAAU,yCAErIE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,8BAA6BC,SAAC,YAC/CF,EAAAA,EAAAA,KAAA,SAAOS,KAAK,OAAOE,MAAOqI,GAAY7C,KAAMtF,SAAUC,GAAKmI,GAAe,IAAKD,GAAa7C,KAAMrF,EAAEI,OAAOP,QAAUV,UAAU,yCAEjIE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,8BAA6BC,SAAC,cAC/CF,EAAAA,EAAAA,KAAA,SAAOS,KAAK,OAAOE,MAAOqI,GAAY1C,KAAMzF,SAAUC,GAAKmI,GAAe,IAAKD,GAAa1C,KAAMxF,EAAEI,OAAOP,QAAUV,UAAU,4CAGnIE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,kBAChEF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOqI,GAAYlD,MACnBjF,SAAUC,GAAKmI,GAAe,IAAKD,GAAalD,MAAOhF,EAAEI,OAAOP,QAChEV,UAAU,qEAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,YAChEF,EAAAA,EAAAA,KAAA,YACEW,MAAOqI,GAAYpI,MACnBC,SAAUC,GAAKmI,GAAe,IAAKD,GAAapI,MAAOE,EAAEI,OAAOP,QAChEV,UAAU,+DACVuL,KAAK,IACL9K,YAAY,4BAGhBP,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,aAChEF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOqI,GAAYlG,IACnBjC,SAAUC,GAAKmI,GAAe,IAAKD,GAAalG,IAAKhC,EAAEI,OAAOP,QAC9DV,UAAU,qEAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,iBAChEF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLE,MAAOqI,GAAYE,QACnBrI,SAAUC,GAAKmI,GAAe,IAAKD,GAAaE,QAASpI,EAAEI,OAAOP,QAClEV,UAAU,qEAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,UACEsB,QAASA,IAAMyH,IAAuB,GACtC9I,UAAU,8IACVoB,MAAM,WAAUnB,SACjB,cAGDF,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLa,QAjpBcmM,UACxB,IAAKzE,GAAY5I,KAEf,YADAgL,MAAM,0CAGR,MAAMsC,EAAiB,IAAK1E,GAAa0B,GAAIpI,KAAKqL,OAC5CnD,EAAmB,IAAKnB,MAAMC,QAAQzE,EAAQuE,WAAavE,EAAQuE,UAAY,GAAKsE,IAGpF,KAAEE,EAAI,MAAEC,SAAgBC,EAAAA,EAC3BC,KAAK,WACLC,OAAO,CAAE5E,UAAWoB,IACpByD,GAAG,KAAMpJ,EAAQ6F,IACjBwD,SAECL,EACFzC,MAAM,kCAKR+C,QAAQC,IAAI,8CAA+CR,GAGvDA,GAAQA,EAAK,GACf9I,EAAgB8I,EAAK,IAErB9I,EAAgB,IAAKD,EAASuE,UAAWoB,IAG3CzB,IAAuB,GACvBE,GAAe,CACb7I,KAAM,GACNiF,KAAM,GACNG,KAAM,GACNG,OAAQ,GACRQ,KAAM,GACNG,KAAM,GACNR,MAAO,GACPlF,MAAO,GACPkC,IAAK,GACLoG,QAAS,OAymBDjJ,UAAU,wIACVoB,MAAM,oBAAmBnB,SAC1B,qB","sources":["components/ExerciseTrackingModal.js","components/DatePicker.js","components/RoutineDetail.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ExerciseTrackingModal = ({\r\n  exercise,\r\n  weeks,\r\n  tracking = {},\r\n  onSave,\r\n  onClose\r\n}) => {\r\n  // Estado local para edición\r\n  const [localTracking, setLocalTracking] = useState(() => {\r\n    // Copia profunda para evitar mutaciones\r\n    return JSON.parse(JSON.stringify(tracking));\r\n  });\r\n\r\n  const handleChange = (week, field, value) => {\r\n    setLocalTracking(prev => ({\r\n      ...prev,\r\n      [week]: {\r\n        ...prev[week],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    onSave(localTracking);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl w-full max-w-lg p-6 relative\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Seguimiento: {exercise.name}</h2>\r\n        <div className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n          {weeks.map((week, idx) => (\r\n            <div key={week} className=\"flex flex-col sm:flex-row sm:items-center gap-2 border-b pb-2\">\r\n              <div className=\"font-semibold w-24\">Semana {week}</div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Notas\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\r\n                value={localTracking[week]?.notes || ''}\r\n                onChange={e => handleChange(week, 'notes', e.target.value)}\r\n                style={{ minWidth: 0 }}\r\n              />\r\n              <button\r\n                className=\"ml-2 px-3 py-2 rounded-xl bg-green-600 text-white hover:bg-green-700 transition-colors font-semibold flex items-center justify-center\"\r\n                title=\"Guardar semana\"\r\n                onClick={() => handleSave()}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex justify-end mt-6\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold\"\r\n          >\r\n            Cerrar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseTrackingModal;\r\n","import React, { useState, useRef, useEffect } from 'react';\n\nconst DatePicker = ({ selectedDate, onDateChange, placeholder }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const datePickerRef = useRef(null);\n\n  const daysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();\n  const firstDayOfMonth = (year, month) => new Date(year, month, 1).getDay(); // 0 for Sunday, 1 for Monday\n\n  const date = selectedDate ? new Date(selectedDate) : new Date();\n  const [currentMonth, setCurrentMonth] = useState(date.getMonth());\n  const [currentYear, setCurrentYear] = useState(date.getFullYear());\n\n  const handlePrevMonth = () => {\n    setCurrentMonth((prevMonth) => {\n      if (prevMonth === 0) {\n        setCurrentYear(currentYear - 1);\n        return 11;\n      }\n      return prevMonth - 1;\n    });\n  };\n\n  const handleNextMonth = () => {\n    setCurrentMonth((prevMonth) => {\n      if (prevMonth === 11) {\n        setCurrentYear(currentYear + 1);\n        return 0;\n      }\n      return prevMonth + 1;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    const newDate = new Date(currentYear, currentMonth, day);\n    onDateChange(newDate.toISOString().split('T')[0]); // Format YYYY-MM-DD\n    setIsOpen(false);\n  };\n\n  const renderDays = () => {\n    const totalDays = daysInMonth(currentYear, currentMonth);\n    const firstDay = firstDayOfMonth(currentYear, currentMonth);\n    const days = [];\n\n    // Fill leading empty cells\n    for (let i = 0; i < firstDay; i++) {\n      days.push(<div key={`empty-${i}`} className=\"w-8 h-8 flex items-center justify-center text-gray-400\"></div>);\n    }\n\n    // Fill days of the month\n    for (let day = 1; day <= totalDays; day++) {\n      const isSelected = selectedDate && new Date(selectedDate).toDateString() === new Date(currentYear, currentMonth, day).toDateString();\n      const isToday = new Date().toDateString() === new Date(currentYear, currentMonth, day).toDateString();\n      days.push(\n        <div\n          key={day}\n          onClick={() => handleDayClick(day)}\n          className={`w-8 h-8 flex items-center justify-center rounded-full cursor-pointer text-sm\n            ${isSelected ? 'bg-black text-white' : 'text-gray-700 hover:bg-gray-200'}\n            ${isToday && !isSelected ? 'border border-blue-500' : ''}\n          `}\n        >\n          {day}\n        </div>\n      );\n    }\n    return days;\n  };\n\n  const monthNames = [\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n  ];\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (datePickerRef.current && !datePickerRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"relative\" ref={datePickerRef}>\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        value={selectedDate || ''}\n        readOnly\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition cursor-pointer\"\n      />\n\n      {isOpen && (\n        <div className=\"absolute z-10 mt-2 bg-white border border-gray-300 rounded-lg shadow-lg p-4 w-64\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <button onClick={handlePrevMonth} className=\"p-2 rounded-full hover:bg-gray-200\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n              </svg>\n            </button>\n            <span className=\"font-semibold text-gray-800\">{monthNames[currentMonth]} {currentYear}</span>\n            <button onClick={handleNextMonth} className=\"p-2 rounded-full hover:bg-gray-200\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\n              </svg>\n            </button>\n          </div>\n          <div className=\"grid grid-cols-7 gap-1 text-center\">\n            {['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'].map((day) => (\n              <div key={day} className=\"text-xs font-medium text-gray-500\">{day}</div>\n            ))}\n            {renderDays()}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DatePicker;","import React, { useState } from 'react';\nimport ExerciseTrackingModal from './ExerciseTrackingModal';\nimport DatePicker from './DatePicker';\nimport { supabase } from '../supabaseClient';\n\nconst RoutineDetail = ({\n  routine,\n  onUpdateRoutine = () => {},\n  isEditable,\n  onAddExerciseClick = () => {},\n}) => {\n  const [editingExerciseId, setEditingExerciseId] = useState(null);\n  const [editedSets, setEditedSets] = useState(routine.sets || '');\n  const [editedReps, setEditedReps] = useState(routine.reps || '');\n  const [editedWeight, setEditedWeight] = useState(routine.weight || '');\n  const [editedMedia, setEditedMedia] = useState(routine.media || '');\n  const [editedNotes, setEditedNotes] = useState(routine.notes || '');\n  const [editedTime, setEditedTime] = useState(routine.time || '');\n  const [editedRest, setEditedRest] = useState(routine.rest || '');\n  const [editedDay, setEditedDay] = useState(routine.day || '');\n\n  // Estados para la edición de la rutina\n  const [editingRoutineDetails, setEditingRoutineDetails] = useState(false);\n  const [editedRoutineName, setEditedRoutineName] = useState(routine.name);\n  const [editedStartDate, setEditedStartDate] = useState(routine.startDate);\n  const [editedEndDate, setEditedEndDate] = useState(routine.endDate);\n  const [editedDescription, setEditedDescription] = useState(routine.description || '');\n  const [editedExerciseName, setEditedExerciseName] = useState(routine.name_ex || '');\n\n  // Estado para colapsar/expandir el seguimiento de cada ejercicio\n  const [expandedExerciseTracking, setExpandedExerciseTracking] = useState({});\n  // Estado para modal de tracking\n  const [showTrackingModal, setShowTrackingModal] = useState(false);\n  const [selectedExercise, setSelectedExercise] = useState(null);\n\n  // Obtener o inicializar el tracking semanal de ejercicios\n  const exerciseTracking = routine.exerciseTracking || {};\n\n  // Calcular semanas de la rutina\n  const getWeeksArray = () => {\n    if (!routine.startDate || !routine.endDate) return [];\n    const start = new Date(routine.startDate);\n    const end = new Date(routine.endDate);\n    const weeks = [];\n    let current = new Date(start);\n    let weekNum = 1;\n    while (current <= end) {\n      weeks.push(weekNum);\n      current.setDate(current.getDate() + 7);\n      weekNum++;\n    }\n    return weeks;\n  };\n  const weeksArray = getWeeksArray();\n\n  // Estado para el seguimiento diario de PF y PE\n  const [selectedDateForDailyTracking, setSelectedDateForDailyTracking] = useState(null);\n  const [currentPF, setCurrentPF] = useState('');\n  const [currentPE, setCurrentPE] = useState('');\n  const [expandedDailyTracking, setExpandedDailyTracking] = useState(false); // Nuevo estado para expandir/colapsar seguimiento diario\n\n  const [showAddExerciseForm, setShowAddExerciseForm] = useState(false);\n  const [newExercise, setNewExercise] = useState({\n    name: '',\n    sets: '',\n    reps: '',\n    weight: '',\n    time: '',\n    rest: '',\n    media: '',\n    notes: '',\n    day: '',\n    section: '',\n  });\n\n  const handleEditClick = (exercise) => {\n    setEditingExerciseId(exercise.id);\n    setEditedSets(exercise.sets);\n    setEditedReps(exercise.reps);\n    setEditedWeight(exercise.weight);\n    setEditedMedia(exercise.media || '');\n    setEditedNotes(exercise.notes || '');\n    setEditedTime(exercise.time || '');\n    setEditedRest(exercise.rest || '');\n  };\n\n  const handleSaveClick = (exerciseId) => {\n    const updatedExercises = routine.exercises.map((ex) =>\n      ex.id === exerciseId\n        ? {\n            ...ex,\n            sets: editedSets,\n            reps: editedReps,\n            weight: editedWeight,\n            media: editedMedia,\n            notes: editedNotes,\n            time: editedTime,\n            rest: editedRest,\n          }\n        : ex\n    );\n    onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    setEditingExerciseId(null);\n  };\n\n  const handleCancelEditExercise = () => {\n    setEditingExerciseId(null);\n  };\n\n  const handleDeleteExercise = (exerciseId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\n      const updatedExercises = routine.exercises.filter((ex) => ex.id !== exerciseId);\n      onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    }\n  };\n\n  const handleSaveRoutineDetails = () => {\n    onUpdateRoutine({\n      ...routine,\n      name: editedRoutineName,\n      startDate: editedStartDate,\n      endDate: editedEndDate,\n      description: editedDescription,\n    });\n    setEditingRoutineDetails(false);\n  };\n\n  const handleCancelEditRoutineDetails = () => {\n    setEditedRoutineName(routine.name);\n    setEditedStartDate(routine.startDate);\n    setEditedEndDate(routine.endDate);\n    setEditedDescription(routine.description || '');\n    setEditedExerciseName(routine.name_ex || '');\n    setEditedSets(routine.sets || '');\n    setEditedReps(routine.reps || '');\n    setEditedWeight(routine.weight || '');\n    setEditedMedia(routine.media || '');\n    setEditedNotes(routine.notes || '');\n    setEditedTime(routine.time || '');\n    setEditedRest(routine.rest || '');\n    setEditedDay(routine.day || '');\n    setEditingRoutineDetails(false);\n  };\n\n  // Agrupar ejercicios por día y sección\n  const exercises = Array.isArray(routine.exercises) ? routine.exercises : [];\n  const groupedExercises = exercises.reduce((acc, exercise) => {\n    const day = exercise.day || 'Sin Día';\n    const section = exercise.section || 'Sin Sección';\n    if (!acc[day]) acc[day] = {};\n    if (!acc[day][section]) acc[day][section] = [];\n    acc[day][section].push(exercise);\n    return acc;\n  }, {});\n\n  const sortedDays = Object.keys(groupedExercises).sort((a, b) => {\n    if (a.startsWith('Día') && b.startsWith('Día')) {\n      return parseInt(a.replace('Día ', '')) - parseInt(b.replace('Día ', ''));\n    }\n    return a.localeCompare(b);\n  });\n\n  const sectionOrder = ['Warm Up', 'Trabajo DS', 'Out', 'Fuerza', 'Cardio', 'Estiramiento', 'Cool Down', 'Otros'];\n\n  const calculateWeeks = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return Math.ceil(diffDays / 7);\n  };\n\n  const handleTrackingDataChange = (exerciseId, weekIndex, field, value) => {\n    const updatedExercises = routine.exercises.map(ex => {\n      if (ex.id === exerciseId) {\n        const updatedWeeklyData = { ...ex.weeklyData || {} }; // Asegura que weeklyData exista\n        if (!updatedWeeklyData[weekIndex]) {\n          updatedWeeklyData[weekIndex] = { weight: '', generalNotes: '' };\n        }\n        updatedWeeklyData[weekIndex][field] = value;\n        return { ...ex, weeklyData: updatedWeeklyData };\n      }\n      return ex;\n    });\n    onUpdateRoutine({ ...routine, exercises: updatedExercises });\n  };\n\n  const handleAddDailyTracking = () => {\n    if (selectedDateForDailyTracking && currentPF && currentPE) {\n      const updatedRoutine = { ...routine };\n      if (!updatedRoutine.dailyTracking) {\n        updatedRoutine.dailyTracking = {};\n      }\n      const dateObject = new Date(selectedDateForDailyTracking);\n      const formattedDate = dateObject.toISOString().split('T')[0]; // Formato YYYY-MM-DD\n      \n      if (!updatedRoutine.dailyTracking[formattedDate]) {\n        updatedRoutine.dailyTracking[formattedDate] = [];\n      }\n      updatedRoutine.dailyTracking[formattedDate].push({\n        PF: currentPF,\n        PE: currentPE,\n      });\n      onUpdateRoutine(updatedRoutine);\n      setCurrentPF('');\n      setCurrentPE('');\n      setSelectedDateForDailyTracking(null); // Limpiar la fecha seleccionada\n    } else {\n      alert('Por favor, selecciona una fecha e ingresa los valores de PF y PE.');\n    }\n  };\n\n  const toggleExerciseTracking = (exerciseId) => {\n    setExpandedExerciseTracking(prevState => ({\n      ...prevState,\n      [exerciseId]: !prevState[exerciseId]\n    }));\n  };\n\n  // Eliminado weeksArray duplicado, se usa el de getWeeksArray()\n\n  const handleUpdateRoutine = async (updatedRoutine) => {\n    // Actualiza la rutina en Supabase, incluyendo la columna description\n    const { id, ...fields } = updatedRoutine;\n    const { error } = await supabase\n      .from('rutinas')\n      .update(fields)\n      .eq('id', id);\n    if (error) {\n      alert('Error al actualizar la rutina');\n      return;\n    }\n    // Recarga las rutinas o actualiza el estado según tu lógica\n  };\n\n  const handleAddExercise = async () => {\n    if (!newExercise.name) {\n      alert('El nombre del ejercicio es obligatorio');\n      return;\n    }\n    const exerciseWithId = { ...newExercise, id: Date.now() };\n    const updatedExercises = [...(Array.isArray(routine.exercises) ? routine.exercises : []), exerciseWithId];\n\n    // Actualiza en la base de datos y en la UI\n    const { data, error } = await supabase\n      .from('rutinas')\n      .update({ exercises: updatedExercises })\n      .eq('id', routine.id)\n      .select();\n\n    if (error) {\n      alert('Error al guardar el ejercicio');\n      return;\n    }\n\n    // Log para depuración\n    console.log('Respuesta de Supabase al agregar ejercicio:', data);\n\n    // Usa la rutina actualizada que devuelve Supabase\n    if (data && data[0]) {\n      onUpdateRoutine(data[0]);\n    } else {\n      onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    }\n\n    setShowAddExerciseForm(false);\n    setNewExercise({\n      name: '',\n      sets: '',\n      reps: '',\n      weight: '',\n      time: '',\n      rest: '',\n      media: '',\n      notes: '',\n      day: '',\n      section: '',\n    });\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      {editingRoutineDetails ? (\n        <div className=\"mb-6 p-4 border border-gray-200 rounded-xl bg-gray-50\">\n          <h3 className=\"text-xl font-bold text-gray-700 mb-4\">Editar Detalles de Rutina</h3>\n          <div className=\"mb-4\">\n            <label htmlFor=\"routineName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Título de la Rutina:\n            </label>\n            <input\n              id=\"routineName\"\n              type=\"text\"\n              value={editedRoutineName}\n              onChange={(e) => setEditedRoutineName(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            />\n          </div>\n          <div className=\"mb-4 flex flex-col sm:flex-row sm:space-x-4 space-y-4 sm:space-y-0\">\n            <div className=\"flex-1\">\n              <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">Fecha de Inicio:</label>\n              <DatePicker\n                selectedDate={editedStartDate}\n                onDateChange={setEditedStartDate}\n                placeholder=\"Fecha de Inicio\"\n              />\n            </div>\n            <div className=\"flex-1\">\n              <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">Fecha de Fin:</label>\n              <DatePicker\n                selectedDate={editedEndDate}\n                onDateChange={setEditedEndDate}\n                placeholder=\"Fecha de Fin\"\n              />\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">Descripción (máx. 250 caracteres):</label>\n            <textarea\n              id=\"description\"\n              value={editedDescription}\n              onChange={(e) => setEditedDescription(e.target.value.slice(0, 250))}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition resize-y\"\n              rows=\"3\"\n              placeholder=\"Agrega una descripción para la rutina\"\n            ></textarea>\n            <p className=\"text-right text-xs text-gray-500\">{editedDescription.length}/250</p>\n          </div>\n          {/* Campos para el ejercicio principal */}\n          <div className=\"mb-4\">\n            <label htmlFor=\"exerciseName\" className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre del Ejercicio:</label>\n            <input\n              id=\"exerciseName\"\n              type=\"text\"\n              value={editedExerciseName}\n              onChange={(e) => setEditedExerciseName(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4 flex flex-wrap gap-4\">\n            <div>\n              <label htmlFor=\"sets\" className=\"block text-xs text-gray-700\">Series</label>\n              <input id=\"sets\" type=\"text\" value={editedSets} onChange={e => setEditedSets(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"reps\" className=\"block text-xs text-gray-700\">Reps</label>\n              <input id=\"reps\" type=\"text\" value={editedReps} onChange={e => setEditedReps(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"weight\" className=\"block text-xs text-gray-700\">Peso</label>\n              <input id=\"weight\" type=\"text\" value={editedWeight} onChange={e => setEditedWeight(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"time\" className=\"block text-xs text-gray-700\">Tiempo</label>\n              <input id=\"time\" type=\"text\" value={editedTime} onChange={e => setEditedTime(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"rest\" className=\"block text-xs text-gray-700\">Descanso</label>\n              <input id=\"rest\" type=\"text\" value={editedRest} onChange={e => setEditedRest(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"media\" className=\"block text-sm font-medium text-gray-700 mb-1\">Media (URL):</label>\n            <input\n              id=\"media\"\n              type=\"text\"\n              value={editedMedia}\n              onChange={(e) => setEditedMedia(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">Notas:</label>\n            <textarea\n              id=\"notes\"\n              value={editedNotes}\n              onChange={(e) => setEditedNotes(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n              rows=\"2\"\n              placeholder=\"Notas del ejercicio\"\n            ></textarea>\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"day\" className=\"block text-sm font-medium text-gray-700 mb-1\">Día:</label>\n            <input\n              id=\"day\"\n              type=\"text\"\n              value={editedDay}\n              onChange={(e) => setEditedDay(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"flex justify-end space-x-4 mt-6\">\n            <button\n              onClick={handleCancelEditRoutineDetails}\n              className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold flex items-center justify-center\"\n              title=\"Cancelar\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                onUpdateRoutine({\n                  id: routine.id,\n                  name: editedRoutineName,\n                  startDate: editedStartDate,\n                  endDate: editedEndDate,\n                  description: editedDescription,\n                  client_id: routine.client_id,\n                  name_ex: editedExerciseName,\n                  sets: editedSets,\n                  reps: editedReps,\n                  weight: editedWeight,\n                  notes: editedNotes,\n                  media: editedMedia,\n                  day: editedDay,\n                  time: editedTime,\n                  rest: editedRest,\n                });\n                setEditingRoutineDetails(false);\n              }}\n              className=\"px-6 py-2 rounded-xl bg-black text-white hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Guardar Cambios\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">{routine.name}</h2>\n            {routine.startDate && routine.endDate && (\n              <p className=\"text-md text-gray-600\">\n                Periodo: {routine.startDate} - {routine.endDate}\n              </p>\n            )}\n            {routine.description && (\n              <p className=\"text-sm text-gray-700 mt-2\">{routine.description}</p>\n            )}\n          </div>\n          {isEditable && (\n            <button\n              onClick={() => setEditingRoutineDetails(true)}\n              className=\"px-4 py-2 rounded-xl bg-yellow-600 text-white hover:bg-yellow-700 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Editar Rutina\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      )}\n\n      {exercises.length === 0 ? (\n        <p className=\"text-gray-600 text-center py-4\">No hay ejercicios en esta rutina aún.</p>\n      ) : (\n        sortedDays.map((day) => (\n          <div key={day} className=\"mb-8 p-4 bg-gray-100 rounded-xl shadow-sm\">\n            <h3 className=\"text-xl font-bold text-gray-700 mb-4 border-b pb-2\">{day}</h3>\n            {Object.keys(groupedExercises[day]).sort((a, b) => {\n              const indexA = sectionOrder.indexOf(a);\n              const indexB = sectionOrder.indexOf(b);\n              if (indexA === -1 && indexB === -1) return a.localeCompare(b);\n              if (indexA === -1) return 1;\n              if (indexB === -1) return -1;\n              return indexA - indexB;\n            }).map((section) => (\n              <div \n                key={section} \n                className={`mb-6 p-4 bg-white rounded-xl shadow-sm`}\n              >\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h4 className=\"text-lg font-semibold text-gray-700\">{section}</h4>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full bg-white rounded-lg shadow-sm\">\n                    <thead>\n                      <tr className=\"bg-gray-100 border-b border-gray-200\">\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ejercicio</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Series</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Repeticiones</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Peso (kg)</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tiempo</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Descanso</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Media</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Notas</th>\n                        {isEditable && (\n                          <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n                        )}\n                        <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Seguimiento</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {groupedExercises[day][section].map((exercise) => (\n                        <React.Fragment key={exercise.id}>\n                          <tr onClick={() => toggleExerciseTracking(exercise.id)} className=\"cursor-pointer hover:bg-gray-50 transition-colors\">\n                            <td data-label=\"Ejercicio\" className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{exercise.name}</td>\n                            <td data-label=\"Series\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedSets}\n                                  onChange={(e) => setEditedSets(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.sets\n                              )}\n                            </td>\n                            <td data-label=\"Repeticiones\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedReps}\n                                  onChange={(e) => setEditedReps(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.reps\n                              )}\n                            </td>\n                            <td data-label=\"Peso (kg)\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedWeight}\n                                  onChange={(e) => setEditedWeight(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.weight\n                              )}\n                            </td>\n                            <td data-label=\"Tiempo\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedTime}\n                                  onChange={(e) => setEditedTime(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.time || 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Descanso\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedRest}\n                                  onChange={(e) => setEditedRest(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.rest || 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Media\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedMedia}\n                                  onChange={(e) => setEditedMedia(e.target.value)}\n                                  className=\"w-32 px-2 py-1 border rounded-md\"\n                                  placeholder=\"URL de media\"\n                                />\n                              ) : (\n                                exercise.media ? (\n                                  <a href={exercise.media} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5 inline-block\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\" />\n                                    </svg>\n                                  </a>\n                                ) : 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Notas\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <textarea\n                                  value={editedNotes}\n                                  onChange={(e) => setEditedNotes(e.target.value)}\n                                  className=\"w-40 px-2 py-1 border rounded-md resize-y\"\n                                  rows=\"2\"\n                                  placeholder=\"Notas del ejercicio\"\n                                ></textarea>\n                              ) : (\n                                exercise.notes || 'N/A'\n                              )}\n                            </td>\n                            {isEditable && (\n                              <td data-label=\"Acciones\" className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2 flex flex-wrap justify-end\">\n                                {editingExerciseId === exercise.id ? (\n                                  <>\n                                    <button\n                                      onClick={() => handleSaveClick(exercise.id)}\n                                      className=\"px-3 py-1 rounded-lg bg-green-600 text-white hover:bg-green-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                      title=\"Guardar\"\n                                    >\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n                                      </svg>\n                                    </button>\n                                    <button\n                                      onClick={handleCancelEditExercise}\n                                      className=\"px-3 py-1 rounded-lg bg-gray-400 text-white hover:bg-gray-500 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                      title=\"Cancelar\"\n                                    >\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                                      </svg>\n                                    </button>\n                                  </>\n                                ) : (\n                                  <button\n                                    onClick={() => handleEditClick(exercise)}\n                                    className=\"px-3 py-1 rounded-lg bg-yellow-600 text-white hover:bg-yellow-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                    title=\"Editar\"\n                                  >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n                                    </svg>\n                                  </button>\n                                )}\n                                <button\n                                  onClick={() => handleDeleteExercise(exercise.id)}\n                                  className=\"px-3 py-1 rounded-lg bg-red-600 text-white hover:bg-red-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                  title=\"Eliminar\"\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.924a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165M12 2.25h.007v.008H12V2.25z\" />\n                                  </svg>\n                                </button>\n                              </td>\n                            )}\n                            <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                              <button\n                                className=\"px-3 py-2 rounded-xl bg-blue-600 text-white hover:bg-blue-700 transition-colors font-semibold flex items-center justify-center\"\n                                title=\"Seguimiento semanal\"\n                                onClick={e => {\n                                  e.stopPropagation();\n                                  setSelectedExercise(exercise);\n                                  setShowTrackingModal(true);\n                                }}\n                              >\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17v-2a4 4 0 014-4h4m0 0V7m0 4l-4-4m4 4l4-4\" />\n                                </svg>\n                              </button>\n                            </td>\n      {/* Modal de seguimiento semanal por ejercicio */}\n      {showTrackingModal && selectedExercise && (\n        <ExerciseTrackingModal\n          exercise={selectedExercise}\n          weeks={weeksArray}\n          tracking={exerciseTracking[selectedExercise.id] || {}}\n          onSave={trackingData => {\n            // Actualizar el objeto exerciseTracking y guardar\n            const updatedTracking = { ...exerciseTracking, [selectedExercise.id]: trackingData };\n            onUpdateRoutine({ ...routine, exerciseTracking: updatedTracking });\n          }}\n          onClose={() => {\n            setShowTrackingModal(false);\n            setSelectedExercise(null);\n          }}\n        />\n      )}\n                          </tr>\n                          {/* Sección de Seguimiento para cada ejercicio, se muestra/oculta al hacer clic en la fila */}\n                          {expandedExerciseTracking[exercise.id] && (\n                            <tr>\n                              <td colSpan={isEditable ? 10 : 9} className=\"p-4 bg-gray-50 border-t border-gray-200\">\n                                <h5 className=\"text-lg font-semibold text-gray-700 mb-3 flex items-center\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-2 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                                  </svg>\n                                  Seguimiento de {exercise.name}\n                                </h5>\n                                <div className=\"space-y-4\">\n                                  {weeksArray.map(week => (\n                                    <div key={week} className=\"flex flex-col p-3 border border-gray-200 rounded-md bg-white\">\n                                      <span className=\"text-sm font-medium text-gray-700 mb-2\">Semana {week}:</span>\n                                      <div className=\"flex flex-col sm:flex-row sm:items-center sm:space-x-2 space-y-2 sm:space-y-0\">\n                                        <input\n                                          type=\"number\"\n                                          className=\"w-full sm:w-24 px-2 py-1 border border-gray-300 rounded-md text-center text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors\"\n                                          placeholder=\"Peso (kg)\"\n                                          value={exercise.weeklyData?.[week]?.weight || ''}\n                                          onChange={(e) => handleTrackingDataChange(exercise.id, week, 'weight', e.target.value)}\n                                          disabled={!isEditable} // Editable por admin y cliente\n                                        />\n                                        <input\n                                          type=\"text\"\n                                          className=\"w-full flex-grow px-2 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors\"\n                                          placeholder=\"Notas (ej. cómo me sentí)\"\n                                          value={exercise.weeklyData?.[week]?.generalNotes || ''}\n                                          onChange={(e) => handleTrackingDataChange(exercise.id, week, 'generalNotes', e.target.value)}\n                                          disabled={!isEditable} // Editable por admin y cliente\n                                        />\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </td>\n                            </tr>\n                          )}\n                        </React.Fragment>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            ))}\n            {/* Sección de Seguimiento Diario de PF y PE */}\n            <div className=\"mt-6 p-4 bg-white rounded-xl shadow-sm border border-gray-200\">\n              <div className=\"flex justify-between items-center mb-3 cursor-pointer\" onClick={() => setExpandedDailyTracking(!expandedDailyTracking)}>\n                <h4 className=\"text-lg font-semibold text-gray-700\">Seguimiento Diario</h4>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className={`h-5 w-5 transform ${expandedDailyTracking ? 'rotate-180' : 'rotate-0'} transition-transform`}\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path fillRule=\"evenodd\" d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              {expandedDailyTracking && (\n                <>\n                  <div className=\"flex flex-col sm:flex-row sm:items-center sm:space-x-4 space-y-4 sm:space-y-0 mb-4\">\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Seleccionar Fecha:</label>\n                      <DatePicker\n                        selectedDate={selectedDateForDailyTracking}\n                        onDateChange={setSelectedDateForDailyTracking}\n                        placeholder=\"Selecciona una fecha\"\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">PF (Percepción de Fatiga):</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition-all duration-300 ease-in-out\"\n                        placeholder=\"Ej. 1-10\"\n                        value={currentPF}\n                        onChange={(e) => setCurrentPF(e.target.value)}\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">PE (Percepción de Esfuerzo):</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition-all duration-300 ease-in-out\"\n                        placeholder=\"Ej. 1-10\"\n                        value={currentPE}\n                        onChange={(e) => setCurrentPE(e.target.value)}\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <button\n                      onClick={handleAddDailyTracking}\n                      className=\"mt-auto px-6 py-2 rounded-xl bg-blue-600 text-white hover:bg-blue-700 transition-colors font-semibold shadow-md flex items-center justify-center\"\n                      title=\"Agregar\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                      </svg>\n                    </button>\n                  </div>\n                  {/* Historial de PF y PE por día */}\n                  {Object.keys(routine.dailyTracking || {}).length > 0 && (\n                    <div className=\"mt-4\">\n                      <h5 className=\"text-md font-semibold text-gray-700 mb-2\">Historial de PF y PE:</h5>\n                      <div className=\"space-y-2\">\n                        {Object.keys(routine.dailyTracking).sort().map(date => (\n                          routine.dailyTracking[date].map((entry, index) => (\n                            <div key={`${date}-${index}`} className=\"flex justify-between items-center p-2 bg-gray-50 rounded-md border border-gray-200\">\n                              <span className=\"text-sm text-gray-700\">Fecha: {date}</span>\n                              <span className=\"text-sm text-gray-700\">PF: {entry.PF}</span>\n                              <span className=\"text-sm text-gray-700\">PE: {entry.PE}</span>\n                            </div>\n                          ))\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        ))\n      )}\n\n      {isEditable && (\n        <button\n          onClick={() => setShowAddExerciseForm(true)}\n          className=\"w-full mt-6 bg-black text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n          title=\"Agregar Ejercicio\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n          </svg>\n        </button>\n      )}\n\n      {showAddExerciseForm && (\n        <div className=\"mb-6 p-4 border border-gray-200 rounded-xl bg-gray-50\">\n          <h3 className=\"text-lg font-bold text-gray-700 mb-4\">Agregar Ejercicio</h3>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre:</label>\n            <input\n              type=\"text\"\n              value={newExercise.name}\n              onChange={e => setNewExercise({ ...newExercise, name: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4 flex flex-wrap gap-4\">\n            <div>\n              <label className=\"block text-xs text-gray-700\">Series</label>\n              <input type=\"text\" value={newExercise.sets} onChange={e => setNewExercise({ ...newExercise, sets: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Reps</label>\n              <input type=\"text\" value={newExercise.reps} onChange={e => setNewExercise({ ...newExercise, reps: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Peso</label>\n              <input type=\"text\" value={newExercise.weight} onChange={e => setNewExercise({ ...newExercise, weight: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Tiempo</label>\n              <input type=\"text\" value={newExercise.time} onChange={e => setNewExercise({ ...newExercise, time: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Descanso</label>\n              <input type=\"text\" value={newExercise.rest} onChange={e => setNewExercise({ ...newExercise, rest: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Media (URL):</label>\n            <input\n              type=\"text\"\n              value={newExercise.media}\n              onChange={e => setNewExercise({ ...newExercise, media: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notas:</label>\n            <textarea\n              value={newExercise.notes}\n              onChange={e => setNewExercise({ ...newExercise, notes: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n              rows=\"2\"\n              placeholder=\"Notas del ejercicio\"\n            ></textarea>\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Día:</label>\n            <input\n              type=\"text\"\n              value={newExercise.day}\n              onChange={e => setNewExercise({ ...newExercise, day: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Sección:</label>\n            <input\n              type=\"text\"\n              value={newExercise.section}\n              onChange={e => setNewExercise({ ...newExercise, section: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"flex justify-end space-x-4 mt-6\">\n            <button\n              onClick={() => setShowAddExerciseForm(false)}\n              className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold flex items-center justify-center\"\n              title=\"Cancelar\"\n            >\n              Cancelar\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleAddExercise}\n              className=\"px-6 py-2 rounded-xl bg-black text-white hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Guardar Ejercicio\"\n            >\n              Guardar\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoutineDetail;"],"names":["_ref","exercise","weeks","tracking","onSave","onClose","localTracking","setLocalTracking","useState","JSON","parse","stringify","_jsx","className","children","_jsxs","name","map","week","idx","_localTracking$week","type","placeholder","value","notes","onChange","e","handleChange","field","prev","target","style","minWidth","title","onClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","selectedDate","onDateChange","isOpen","setIsOpen","datePickerRef","useRef","date","Date","currentMonth","setCurrentMonth","getMonth","currentYear","setCurrentYear","getFullYear","handleDayClick","day","newDate","toISOString","split","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","readOnly","handlePrevMonth","prevMonth","handleNextMonth","renderDays","totalDays","getDate","firstDay","firstDayOfMonth","year","month","getDay","days","i","push","isSelected","toDateString","isToday","routine","onUpdateRoutine","isEditable","onAddExerciseClick","editingExerciseId","setEditingExerciseId","editedSets","setEditedSets","sets","editedReps","setEditedReps","reps","editedWeight","setEditedWeight","weight","editedMedia","setEditedMedia","media","editedNotes","setEditedNotes","editedTime","setEditedTime","time","editedRest","setEditedRest","rest","editedDay","setEditedDay","editingRoutineDetails","setEditingRoutineDetails","editedRoutineName","setEditedRoutineName","editedStartDate","setEditedStartDate","startDate","editedEndDate","setEditedEndDate","endDate","editedDescription","setEditedDescription","description","editedExerciseName","setEditedExerciseName","name_ex","expandedExerciseTracking","setExpandedExerciseTracking","showTrackingModal","setShowTrackingModal","selectedExercise","setSelectedExercise","exerciseTracking","weeksArray","getWeeksArray","start","end","weekNum","setDate","selectedDateForDailyTracking","setSelectedDateForDailyTracking","currentPF","setCurrentPF","currentPE","setCurrentPE","expandedDailyTracking","setExpandedDailyTracking","showAddExerciseForm","setShowAddExerciseForm","newExercise","setNewExercise","section","handleCancelEditExercise","exercises","Array","isArray","groupedExercises","reduce","acc","sortedDays","Object","keys","sort","a","b","startsWith","parseInt","replace","localeCompare","sectionOrder","handleTrackingDataChange","exerciseId","weekIndex","updatedExercises","ex","id","updatedWeeklyData","weeklyData","generalNotes","handleAddDailyTracking","updatedRoutine","dailyTracking","formattedDate","PF","PE","alert","htmlFor","DatePicker","slice","rows","length","handleCancelEditRoutineDetails","client_id","indexA","indexOf","indexB","React","toggleExerciseTracking","prevState","href","rel","_Fragment","handleSaveClick","handleEditClick","window","confirm","filter","handleDeleteExercise","stopPropagation","ExerciseTrackingModal","trackingData","updatedTracking","colSpan","_exercise$weeklyData","_exercise$weeklyData$","_exercise$weeklyData2","_exercise$weeklyData3","disabled","fillRule","clipRule","entry","index","async","exerciseWithId","now","data","error","supabase","from","update","eq","select","console","log"],"sourceRoot":""}