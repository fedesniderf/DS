{"version":3,"file":"static/js/763.8c9d045b.chunk.js","mappings":"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","sources":["components/ResetPasswordModal.js","components/UserManagementScreen.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ResetPasswordModal = ({ user, onResetPassword, onClose }) => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleReset = () => {\n    if (newPassword !== confirmPassword) {\n      setError('Las contraseñas no coinciden.');\n      return;\n    }\n    if (newPassword.length < 6) {\n      setError('La contraseña debe tener al menos 6 caracteres.');\n      return;\n    }\n    setError('');\n    onResetPassword(user.id, newPassword);\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white rounded-2xl shadow-xl w-full max-w-md p-6 relative\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Restablecer Contraseña para {user.email}</h2>\n\n        {error && <p className=\"text-red-500 text-sm mb-4\">{error}</p>}\n\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700\">Nueva Contraseña:</label>\n          <input\n            type=\"password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            placeholder=\"Mínimo 6 caracteres\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700\">Confirmar Contraseña:</label>\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            placeholder=\"Repite la nueva contraseña\"\n          />\n        </div>\n\n        <div className=\"flex justify-end space-x-4 mt-6\">\n          <button\n            onClick={onClose}\n            className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold\"\n          >\n            Cancelar\n          </button>\n          <button\n            onClick={handleReset}\n            className=\"px-6 py-2 rounded-xl bg-black text-white hover:bg-gray-800 transition-colors font-semibold\"\n          >\n            Restablecer\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPasswordModal;","import React, { useState } from 'react';\nimport ResetPasswordModal from './ResetPasswordModal';\n\nconst UserManagementScreen = ({ users, onDeleteUser, onResetPassword }) => {\n  const [showResetModal, setShowResetModal] = useState(false);\n  const [userToReset, setUserToReset] = useState(null);\n\n  const handleResetClick = (user) => {\n    setUserToReset(user);\n    setShowResetModal(true);\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Administrar Usuarios</h2>\n      {users.length === 0 ? (\n        <p className=\"text-gray-600 text-center py-4\">No hay usuarios registrados.</p>\n      ) : (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full bg-white rounded-lg shadow-sm\">\n            <thead>\n              <tr className=\"bg-gray-100 border-b border-gray-200\">\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rol</th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {users.map((user) => (\n                <tr key={user.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{user.email}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.role}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2\">\n                    <div className=\"flex items-center justify-end space-x-2\"> {/* Contenedor flex para los botones */}\n                      <button\n                        onClick={() => handleResetClick(user)}\n                        className=\"p-2 rounded-full bg-blue-600 text-white hover:bg-blue-700 transition-all duration-300 ease-in-out shadow-md flex items-center justify-center transform hover:scale-110\"\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z\" />\n                        </svg>\n                      </button>\n                      <button\n                        onClick={() => onDeleteUser(user.id)}\n                        className=\"p-2 rounded-full bg-red-600 text-white hover:bg-red-700 transition-all duration-300 ease-in-out shadow-md flex items-center justify-center transform hover:scale-110\"\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.924a2.25 2.25 0 01-2.244-2.077L5.072 5.455m11.35.01L12 2.25 7.672 5.455m11.35.01C18.723 5.67 16.16 6.228 12 6.228s-6.723-.558-7.672-.772M9 12h6\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {showResetModal && userToReset && (\n        <ResetPasswordModal\n          user={userToReset}\n          onResetPassword={onResetPassword}\n          onClose={() => setShowResetModal(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserManagementScreen;"],"names":["_ref","user","onResetPassword","onClose","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","error","setError","_jsx","className","children","_jsxs","email","type","value","onChange","e","target","placeholder","onClick","handleReset","length","id","users","onDeleteUser","showResetModal","setShowResetModal","userToReset","setUserToReset","map","role","handleResetClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","ResetPasswordModal"],"sourceRoot":""}