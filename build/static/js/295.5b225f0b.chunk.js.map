{"version":3,"file":"static/js/295.5b225f0b.chunk.js","mappings":"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","sources":["components/ExerciseTrackingModal.js","components/DatePicker.js","components/RoutineDetail.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ExerciseTrackingModal = ({\r\n  exercise,\r\n  weeks,\r\n  tracking = {},\r\n  onSave,\r\n  onClose\r\n}) => {\r\n  // Estado local para edición\r\n  const [localTracking, setLocalTracking] = useState(() => {\r\n    // Copia profunda para evitar mutaciones\r\n    return JSON.parse(JSON.stringify(tracking));\r\n  });\r\n\r\n  const handleChange = (week, field, value) => {\r\n    setLocalTracking(prev => ({\r\n      ...prev,\r\n      [week]: {\r\n        ...prev[week],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    onSave(localTracking);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl w-full max-w-lg p-6 relative\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Seguimiento: {exercise.name}</h2>\r\n        <div className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n          {weeks.map((week, idx) => (\r\n            <div key={week} className=\"flex flex-col sm:flex-row sm:items-center gap-2 border-b pb-2\">\r\n              <div className=\"font-semibold w-24\">Semana {week}</div>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Kg\"\r\n                className=\"w-24 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\r\n                value={localTracking[week]?.kg || ''}\r\n                onChange={e => handleChange(week, 'kg', e.target.value)}\r\n                style={{ minWidth: 0 }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Notas\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\r\n                value={localTracking[week]?.notes || ''}\r\n                onChange={e => handleChange(week, 'notes', e.target.value)}\r\n                style={{ minWidth: 0 }}\r\n              />\r\n              <button\r\n                className=\"ml-2 px-3 py-2 rounded-xl bg-green-600 text-white hover:bg-green-700 transition-colors font-semibold flex items-center justify-center\"\r\n                title=\"Guardar semana\"\r\n                onClick={() => handleSave()}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex justify-end mt-6\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold\"\r\n          >\r\n            Cerrar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseTrackingModal;\r\n","import React, { useState, useRef, useEffect } from 'react';\n\nconst DatePicker = ({ selectedDate, onDateChange, placeholder }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const datePickerRef = useRef(null);\n\n  const daysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();\n  const firstDayOfMonth = (year, month) => new Date(year, month, 1).getDay(); // 0 for Sunday, 1 for Monday\n\n  const date = selectedDate ? new Date(selectedDate) : new Date();\n  const [currentMonth, setCurrentMonth] = useState(date.getMonth());\n  const [currentYear, setCurrentYear] = useState(date.getFullYear());\n\n  const handlePrevMonth = () => {\n    setCurrentMonth((prevMonth) => {\n      if (prevMonth === 0) {\n        setCurrentYear(currentYear - 1);\n        return 11;\n      }\n      return prevMonth - 1;\n    });\n  };\n\n  const handleNextMonth = () => {\n    setCurrentMonth((prevMonth) => {\n      if (prevMonth === 11) {\n        setCurrentYear(currentYear + 1);\n        return 0;\n      }\n      return prevMonth + 1;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    const newDate = new Date(currentYear, currentMonth, day);\n    onDateChange(newDate.toISOString().split('T')[0]); // Format YYYY-MM-DD\n    setIsOpen(false);\n  };\n\n  const renderDays = () => {\n    const totalDays = daysInMonth(currentYear, currentMonth);\n    const firstDay = firstDayOfMonth(currentYear, currentMonth);\n    const days = [];\n\n    // Fill leading empty cells\n    for (let i = 0; i < firstDay; i++) {\n      days.push(<div key={`empty-${i}`} className=\"w-8 h-8 flex items-center justify-center text-gray-400\"></div>);\n    }\n\n    // Fill days of the month\n    for (let day = 1; day <= totalDays; day++) {\n      const isSelected = selectedDate && new Date(selectedDate).toDateString() === new Date(currentYear, currentMonth, day).toDateString();\n      const isToday = new Date().toDateString() === new Date(currentYear, currentMonth, day).toDateString();\n      days.push(\n        <div\n          key={day}\n          onClick={() => handleDayClick(day)}\n          className={`w-8 h-8 flex items-center justify-center rounded-full cursor-pointer text-sm\n            ${isSelected ? 'bg-black text-white' : 'text-gray-700 hover:bg-gray-200'}\n            ${isToday && !isSelected ? 'border border-blue-500' : ''}\n          `}\n        >\n          {day}\n        </div>\n      );\n    }\n    return days;\n  };\n\n  const monthNames = [\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n  ];\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (datePickerRef.current && !datePickerRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"relative\" ref={datePickerRef}>\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        value={selectedDate || ''}\n        readOnly\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition cursor-pointer\"\n      />\n\n      {isOpen && (\n        <div className=\"absolute z-10 mt-2 bg-white border border-gray-300 rounded-lg shadow-lg p-4 w-64\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <button onClick={handlePrevMonth} className=\"p-2 rounded-full hover:bg-gray-200\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n              </svg>\n            </button>\n            <span className=\"font-semibold text-gray-800\">{monthNames[currentMonth]} {currentYear}</span>\n            <button onClick={handleNextMonth} className=\"p-2 rounded-full hover:bg-gray-200\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\n              </svg>\n            </button>\n          </div>\n          <div className=\"grid grid-cols-7 gap-1 text-center\">\n            {['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'].map((day) => (\n              <div key={day} className=\"text-xs font-medium text-gray-500\">{day}</div>\n            ))}\n            {renderDays()}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DatePicker;","import React, { useState } from 'react';\nimport ExerciseTrackingModal from './ExerciseTrackingModal';\nimport DatePicker from './DatePicker';\nimport { supabase } from '../supabaseClient';\n\nconst RoutineDetail = ({\n  routine,\n  onUpdateRoutine = () => {},\n  isEditable,\n  onAddExerciseClick = () => {},\n}) => {\n  const [editingExerciseId, setEditingExerciseId] = useState(null);\n  const [editedSets, setEditedSets] = useState(routine.sets || '');\n  const [editedReps, setEditedReps] = useState(routine.reps || '');\n  const [editedWeight, setEditedWeight] = useState(routine.weight || '');\n  const [editedMedia, setEditedMedia] = useState(routine.media || '');\n  const [editedNotes, setEditedNotes] = useState(routine.notes || '');\n  const [editedTime, setEditedTime] = useState(routine.time || '');\n  const [editedRest, setEditedRest] = useState(routine.rest || '');\n  const [editedDay, setEditedDay] = useState(routine.day || '');\n\n  // Estados para la edición de la rutina\n  const [editingRoutineDetails, setEditingRoutineDetails] = useState(false);\n  const [editedRoutineName, setEditedRoutineName] = useState(routine.name);\n  const [editedStartDate, setEditedStartDate] = useState(routine.startDate);\n  const [editedEndDate, setEditedEndDate] = useState(routine.endDate);\n  const [editedDescription, setEditedDescription] = useState(routine.description || '');\n  const [editedExerciseName, setEditedExerciseName] = useState(routine.name_ex || '');\n\n  // Estado para colapsar/expandir el seguimiento de cada ejercicio\n  // Estado para el formulario de nuevo ejercicio\n  const [newExercise, setNewExercise] = useState({\n    name: '',\n    sets: '',\n    reps: '',\n    weight: '',\n    time: '',\n    rest: '',\n    media: '',\n    notes: '',\n    day: '',\n    section: '',\n  });\n  // Estado para el ejercicio seleccionado para seguimiento\n  const [selectedExercise, setSelectedExercise] = useState(null);\n  // Estado para la fecha seleccionada en el seguimiento diario\n  const [selectedDateForDailyTracking, setSelectedDateForDailyTracking] = useState(null);\n  const [expandedExerciseTracking, setExpandedExerciseTracking] = useState({});\n  // Estado para mostrar/ocultar el formulario de agregar ejercicio\n  const [showAddExerciseForm, setShowAddExerciseForm] = useState(false);\n  // Estado para modal de tracking\n  const [showTrackingModal, setShowTrackingModal] = useState(false);\n  // Estado para expandir/colapsar el seguimiento diario\n  const [expandedDailyTracking, setExpandedDailyTracking] = useState(false);\n  const handleEditClick = (exercise) => {\n    setEditingExerciseId(exercise.id);\n    setEditedSets(exercise.sets);\n    setEditedReps(exercise.reps);\n    setEditedWeight(exercise.weight);\n    setEditedMedia(exercise.media || '');\n    setEditedNotes(exercise.notes || '');\n    setEditedTime(exercise.time || '');\n    setEditedRest(exercise.rest || '');\n  };\n\n  const handleSaveClick = (exerciseId) => {\n    const updatedExercises = routine.exercises.map((ex) =>\n      ex.id === exerciseId\n        ? {\n            ...ex,\n            sets: editedSets,\n            reps: editedReps,\n            weight: editedWeight,\n            media: editedMedia,\n            notes: editedNotes,\n            time: editedTime,\n            rest: editedRest,\n          }\n        : ex\n    );\n    onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    setEditingExerciseId(null);\n  };\n\n  const handleCancelEditExercise = () => {\n    setEditingExerciseId(null);\n  };\n\n  const handleDeleteExercise = (exerciseId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\n      const updatedExercises = routine.exercises.filter((ex) => ex.id !== exerciseId);\n      onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    }\n  };\n\n  const handleSaveRoutineDetails = () => {\n    onUpdateRoutine({\n      ...routine,\n      name: editedRoutineName,\n      startDate: editedStartDate,\n      endDate: editedEndDate,\n      description: editedDescription,\n    });\n    setEditingRoutineDetails(false);\n  };\n\n  const handleCancelEditRoutineDetails = () => {\n    setEditedRoutineName(routine.name);\n    setEditedStartDate(routine.startDate);\n    setEditedEndDate(routine.endDate);\n    setEditedDescription(routine.description || '');\n    setEditedExerciseName(routine.name_ex || '');\n    setEditedSets(routine.sets || '');\n    setEditedReps(routine.reps || '');\n    setEditedWeight(routine.weight || '');\n    setEditedMedia(routine.media || '');\n    setEditedNotes(routine.notes || '');\n    setEditedTime(routine.time || '');\n    setEditedRest(routine.rest || '');\n    setEditedDay(routine.day || '');\n    setEditingRoutineDetails(false);\n  };\n\n  // Agrupar ejercicios por día y sección\n  const exercises = Array.isArray(routine.exercises) ? routine.exercises : [];\n  const groupedExercises = exercises.reduce((acc, exercise) => {\n    const day = exercise.day || 'Sin Día';\n    const section = exercise.section || 'Sin Sección';\n    if (!acc[day]) acc[day] = {};\n    if (!acc[day][section]) acc[day][section] = [];\n    acc[day][section].push(exercise);\n    return acc;\n  }, {});\n\n  const sortedDays = Object.keys(groupedExercises).sort((a, b) => {\n    if (a.startsWith('Día') && b.startsWith('Día')) {\n      return parseInt(a.replace('Día ', '')) - parseInt(b.replace('Día ', ''));\n    }\n    return a.localeCompare(b);\n  });\n\n  const sectionOrder = ['Warm Up', 'Trabajo DS', 'Out', 'Fuerza', 'Cardio', 'Estiramiento', 'Cool Down', 'Otros'];\n\n  const calculateWeeks = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return Math.ceil(diffDays / 7);\n  };\n\n  const handleTrackingDataChange = (exerciseId, weekIndex, field, value) => {\n    const updatedExercises = routine.exercises.map(ex => {\n      if (ex.id === exerciseId) {\n        const updatedWeeklyData = { ...ex.weeklyData || {} }; // Asegura que weeklyData exista\n        if (!updatedWeeklyData[weekIndex]) {\n          updatedWeeklyData[weekIndex] = { weight: '', generalNotes: '' };\n        }\n        updatedWeeklyData[weekIndex][field] = value;\n        return { ...ex, weeklyData: updatedWeeklyData };\n      }\n      return ex;\n    });\n    onUpdateRoutine({ ...routine, exercises: updatedExercises });\n  };\n\n  const handleAddDailyTracking = () => {\n    if (selectedDateForDailyTracking && currentPF && currentPE) {\n      const updatedRoutine = { ...routine };\n      if (!updatedRoutine.dailyTracking) {\n        updatedRoutine.dailyTracking = {};\n      }\n      const dateObject = new Date(selectedDateForDailyTracking);\n      const formattedDate = dateObject.toISOString().split('T')[0]; // Formato YYYY-MM-DD\n      \n      if (!updatedRoutine.dailyTracking[formattedDate]) {\n        updatedRoutine.dailyTracking[formattedDate] = [];\n      }\n      updatedRoutine.dailyTracking[formattedDate].push({\n        PF: currentPF,\n        PE: currentPE,\n      });\n      onUpdateRoutine(updatedRoutine);\n      setCurrentPF('');\n      setCurrentPE('');\n      setSelectedDateForDailyTracking(null); // Limpiar la fecha seleccionada\n    } else {\n      alert('Por favor, selecciona una fecha e ingresa los valores de PF y PE.');\n    }\n  };\n\n  const toggleExerciseTracking = (exerciseId) => {\n    setExpandedExerciseTracking(prevState => ({\n      ...prevState,\n      [exerciseId]: !prevState[exerciseId]\n    }));\n  };\n\n\n  // Calcular el array de semanas para el seguimiento semanal\n  const weeksArray = (() => {\n    const numWeeks = calculateWeeks(routine.startDate, routine.endDate);\n    return Array.from({ length: numWeeks }, (_, i) => i + 1);\n  })();\n\n  const handleUpdateRoutine = async (updatedRoutine) => {\n    // Actualiza la rutina en Supabase, incluyendo la columna description\n    const { id, ...fields } = updatedRoutine;\n    const { error } = await supabase\n      .from('rutinas')\n      .update(fields)\n      .eq('id', id);\n    if (error) {\n      alert('Error al actualizar la rutina');\n      return;\n    }\n    // Recarga las rutinas o actualiza el estado según tu lógica\n  };\n\n  const handleAddExercise = async () => {\n    if (!newExercise.name) {\n      alert('El nombre del ejercicio es obligatorio');\n      return;\n    }\n    const exerciseWithId = { ...newExercise, id: Date.now() };\n    const updatedExercises = [...(Array.isArray(routine.exercises) ? routine.exercises : []), exerciseWithId];\n\n    // Actualiza en la base de datos y en la UI\n    const { data, error } = await supabase\n      .from('rutinas')\n      .update({ exercises: updatedExercises })\n      .eq('id', routine.id)\n      .select();\n\n    if (error) {\n      alert('Error al guardar el ejercicio');\n      return;\n    }\n\n    // Log para depuración\n    console.log('Respuesta de Supabase al agregar ejercicio:', data);\n\n    // Usa la rutina actualizada que devuelve Supabase\n    if (data && data[0]) {\n      onUpdateRoutine(data[0]);\n    } else {\n      onUpdateRoutine({ ...routine, exercises: updatedExercises });\n    }\n\n    setShowAddExerciseForm(false);\n    setNewExercise({\n      name: '',\n      sets: '',\n      reps: '',\n      weight: '',\n      time: '',\n      rest: '',\n      media: '',\n      notes: '',\n      day: '',\n      section: '',\n    });\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md\">\n      {editingRoutineDetails ? (\n        <div className=\"mb-6 p-4 border border-gray-200 rounded-xl bg-gray-50\">\n          <h3 className=\"text-xl font-bold text-gray-700 mb-4\">Editar Detalles de Rutina</h3>\n          <div className=\"mb-4\">\n            <label htmlFor=\"routineName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Título de la Rutina:\n            </label>\n            <input\n              id=\"routineName\"\n              type=\"text\"\n              value={editedRoutineName}\n              onChange={(e) => setEditedRoutineName(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            />\n          </div>\n          <div className=\"mb-4 flex flex-col sm:flex-row sm:space-x-4 space-y-4 sm:space-y-0\">\n            <div className=\"flex-1\">\n              <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">Fecha de Inicio:</label>\n              <DatePicker\n                selectedDate={editedStartDate}\n                onDateChange={setEditedStartDate}\n                placeholder=\"Fecha de Inicio\"\n              />\n            </div>\n            <div className=\"flex-1\">\n              <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">Fecha de Fin:</label>\n              <DatePicker\n                selectedDate={editedEndDate}\n                onDateChange={setEditedEndDate}\n                placeholder=\"Fecha de Fin\"\n              />\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">Descripción (máx. 250 caracteres):</label>\n            <textarea\n              id=\"description\"\n              value={editedDescription}\n              onChange={(e) => setEditedDescription(e.target.value.slice(0, 250))}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition resize-y\"\n              rows=\"3\"\n              placeholder=\"Agrega una descripción para la rutina\"\n            ></textarea>\n            <p className=\"text-right text-xs text-gray-500\">{editedDescription.length}/250</p>\n          </div>\n          {/* Campos para el ejercicio principal */}\n          <div className=\"mb-4\">\n            <label htmlFor=\"exerciseName\" className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre del Ejercicio:</label>\n            <input\n              id=\"exerciseName\"\n              type=\"text\"\n              value={editedExerciseName}\n              onChange={(e) => setEditedExerciseName(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4 flex flex-wrap gap-4\">\n            <div>\n              <label htmlFor=\"sets\" className=\"block text-xs text-gray-700\">Series</label>\n              <input id=\"sets\" type=\"text\" value={editedSets} onChange={e => setEditedSets(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"reps\" className=\"block text-xs text-gray-700\">Reps</label>\n              <input id=\"reps\" type=\"text\" value={editedReps} onChange={e => setEditedReps(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"weight\" className=\"block text-xs text-gray-700\">Peso</label>\n              <input id=\"weight\" type=\"text\" value={editedWeight} onChange={e => setEditedWeight(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"time\" className=\"block text-xs text-gray-700\">Tiempo</label>\n              <input id=\"time\" type=\"text\" value={editedTime} onChange={e => setEditedTime(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label htmlFor=\"rest\" className=\"block text-xs text-gray-700\">Descanso</label>\n              <input id=\"rest\" type=\"text\" value={editedRest} onChange={e => setEditedRest(e.target.value)} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n          </div>\n          {/* Campos de ejercicio eliminados de la edición de detalles de rutina */}\n          <div className=\"flex justify-end space-x-4 mt-6\">\n            <button\n              onClick={handleCancelEditRoutineDetails}\n              className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold flex items-center justify-center\"\n              title=\"Cancelar\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                onUpdateRoutine({\n                  id: routine.id,\n                  name: editedRoutineName,\n                  startDate: editedStartDate,\n                  endDate: editedEndDate,\n                  description: editedDescription,\n                  client_id: routine.client_id,\n                  name_ex: editedExerciseName,\n                  sets: editedSets,\n                  reps: editedReps,\n                  weight: editedWeight,\n                  notes: editedNotes,\n                  media: editedMedia,\n                  day: editedDay,\n                  time: editedTime,\n                  rest: editedRest,\n                });\n                setEditingRoutineDetails(false);\n              }}\n              className=\"px-6 py-2 rounded-xl bg-black text-white hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Guardar Cambios\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">{routine.name}</h2>\n            {routine.startDate && routine.endDate && (\n              <p className=\"text-md text-gray-600\">\n                Periodo: {routine.startDate} - {routine.endDate}\n              </p>\n            )}\n            {routine.description && (\n              <p className=\"text-sm text-gray-700 mt-2\">{routine.description}</p>\n            )}\n          </div>\n          {isEditable && (\n            <button\n              onClick={() => setEditingRoutineDetails(true)}\n              className=\"px-4 py-2 rounded-xl bg-yellow-600 text-white hover:bg-yellow-700 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Editar Rutina\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n              </svg>\n            </button>\n          )}\n        </div>\n      )}\n\n      {exercises.length === 0 ? (\n        <p className=\"text-gray-600 text-center py-4\">No hay ejercicios en esta rutina aún.</p>\n      ) : (\n        sortedDays.map((day) => (\n          <div key={day} className=\"mb-8 p-4 bg-gray-100 rounded-xl shadow-sm\">\n            <h3 className=\"text-xl font-bold text-gray-700 mb-4 border-b pb-2\">{day}</h3>\n            {Object.keys(groupedExercises[day]).sort((a, b) => {\n              const indexA = sectionOrder.indexOf(a);\n              const indexB = sectionOrder.indexOf(b);\n              if (indexA === -1 && indexB === -1) return a.localeCompare(b);\n              if (indexA === -1) return 1;\n              if (indexB === -1) return -1;\n              return indexA - indexB;\n            }).map((section) => (\n              <div \n                key={section} \n                className={`mb-6 p-4 bg-white rounded-xl shadow-sm`}\n              >\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h4 className=\"text-lg font-semibold text-gray-700\">{section}</h4>\n                </div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full bg-white rounded-lg shadow-sm\">\n                    <thead>\n                      <tr className=\"bg-gray-100 border-b border-gray-200\">\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Ejercicio</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Series</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Repeticiones</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Peso (kg)</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Tiempo</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Descanso</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Media</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Notas</th>\n                        {isEditable && (\n                          <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n                        )}\n                        <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Seguimiento</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {groupedExercises[day][section].map((exercise) => (\n                        <React.Fragment key={exercise.id}>\n                          <tr onClick={() => toggleExerciseTracking(exercise.id)} className=\"cursor-pointer hover:bg-gray-50 transition-colors\">\n                            <td data-label=\"Ejercicio\" className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{exercise.name}</td>\n                            <td data-label=\"Series\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedSets}\n                                  onChange={(e) => setEditedSets(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.sets\n                              )}\n                            </td>\n                            <td data-label=\"Repeticiones\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedReps}\n                                  onChange={(e) => setEditedReps(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.reps\n                              )}\n                            </td>\n                            <td data-label=\"Peso (kg)\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedWeight}\n                                  onChange={(e) => setEditedWeight(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.weight\n                              )}\n                            </td>\n                            <td data-label=\"Tiempo\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedTime}\n                                  onChange={(e) => setEditedTime(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.time || 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Descanso\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedRest}\n                                  onChange={(e) => setEditedRest(e.target.value)}\n                                  className=\"w-20 px-2 py-1 border rounded-md\"\n                                />\n                              ) : (\n                                exercise.rest || 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Media\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <input\n                                  type=\"text\"\n                                  value={editedMedia}\n                                  onChange={(e) => setEditedMedia(e.target.value)}\n                                  className=\"w-32 px-2 py-1 border rounded-md\"\n                                  placeholder=\"URL de media\"\n                                />\n                              ) : (\n                                exercise.media ? (\n                                  <a href={exercise.media} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5 inline-block\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\" />\n                                    </svg>\n                                  </a>\n                                ) : 'N/A'\n                              )}\n                            </td>\n                            <td data-label=\"Notas\" className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {editingExerciseId === exercise.id ? (\n                                <textarea\n                                  value={editedNotes}\n                                  onChange={(e) => setEditedNotes(e.target.value)}\n                                  className=\"w-40 px-2 py-1 border rounded-md resize-y\"\n                                  rows=\"2\"\n                                  placeholder=\"Notas del ejercicio\"\n                                ></textarea>\n                              ) : (\n                                exercise.notes || 'N/A'\n                              )}\n                            </td>\n                            {isEditable && (\n                              <td data-label=\"Acciones\" className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2 flex flex-wrap justify-end\">\n                                {editingExerciseId === exercise.id ? (\n                                  <>\n                                    <button\n                                      onClick={() => handleSaveClick(exercise.id)}\n                                      className=\"px-3 py-1 rounded-lg bg-green-600 text-white hover:bg-green-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                      title=\"Guardar\"\n                                    >\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n                                      </svg>\n                                    </button>\n                                    <button\n                                      onClick={handleCancelEditExercise}\n                                      className=\"px-3 py-1 rounded-lg bg-gray-400 text-white hover:bg-gray-500 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                      title=\"Cancelar\"\n                                    >\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                                      </svg>\n                                    </button>\n                                  </>\n                                ) : (\n                                  <button\n                                    onClick={() => handleEditClick(exercise)}\n                                    className=\"px-3 py-1 rounded-lg bg-yellow-600 text-white hover:bg-yellow-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                    title=\"Editar\"\n                                  >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\n                                    </svg>\n                                  </button>\n                                )}\n                                <button\n                                  onClick={() => handleDeleteExercise(exercise.id)}\n                                  className=\"px-3 py-1 rounded-lg bg-red-600 text-white hover:bg-red-700 transition-colors text-xs font-semibold flex items-center justify-center mb-1 sm:mb-0\"\n                                  title=\"Eliminar\"\n                                >\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-4 h-4\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.924a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165M12 2.25h.007v.008H12V2.25z\" />\n                                  </svg>\n                                </button>\n                              </td>\n                            )}\n                            <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                              <button\n                                className=\"px-3 py-2 rounded-xl bg-blue-600 text-white hover:bg-blue-700 transition-colors font-semibold flex items-center justify-center\"\n                                title=\"Seguimiento semanal\"\n                                onClick={e => {\n                                  e.stopPropagation();\n                                  setSelectedExercise(exercise);\n                                  setShowTrackingModal(true);\n                                }}\n                              >\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17v-2a4 4 0 014-4h4m0 0V7m0 4l-4-4m4 4l4-4\" />\n                                </svg>\n                              </button>\n                            </td>\n      {/* Modal de seguimiento semanal por ejercicio */}\n      {showTrackingModal && selectedExercise && (\n        <ExerciseTrackingModal\n          exercise={selectedExercise}\n          weeks={weeksArray}\n          tracking={exerciseTracking[selectedExercise.id] || {}}\n          onSave={trackingData => {\n            // Actualizar el objeto exerciseTracking y guardar\n            const updatedTracking = { ...exerciseTracking, [selectedExercise.id]: trackingData };\n            onUpdateRoutine({ ...routine, exerciseTracking: updatedTracking });\n          }}\n          onClose={() => {\n            setShowTrackingModal(false);\n            setSelectedExercise(null);\n          }}\n        />\n      )}\n                          </tr>\n                          {/* Eliminada la sección de seguimiento expandible inline. El seguimiento ahora solo se gestiona por modal. */}\n                        </React.Fragment>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            ))}\n            {/* Sección de Seguimiento Diario de PF y PE */}\n            <div className=\"mt-6 p-4 bg-white rounded-xl shadow-sm border border-gray-200\">\n              <div className=\"flex justify-between items-center mb-3 cursor-pointer\" onClick={() => setExpandedDailyTracking(!expandedDailyTracking)}>\n                <h4 className=\"text-lg font-semibold text-gray-700\">Seguimiento Diario</h4>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className={`h-5 w-5 transform ${expandedDailyTracking ? 'rotate-180' : 'rotate-0'} transition-transform`}\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path fillRule=\"evenodd\" d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              {expandedDailyTracking && (\n                <>\n                  <div className=\"flex flex-col sm:flex-row sm:items-center sm:space-x-4 space-y-4 sm:space-y-0 mb-4\">\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Seleccionar Fecha:</label>\n                      <DatePicker\n                        selectedDate={selectedDateForDailyTracking}\n                        onDateChange={setSelectedDateForDailyTracking}\n                        placeholder=\"Selecciona una fecha\"\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">PF (Percepción de Fatiga):</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition-all duration-300 ease-in-out\"\n                        placeholder=\"Ej. 1-10\"\n                        value={currentPF}\n                        onChange={(e) => setCurrentPF(e.target.value)}\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">PE (Percepción de Esfuerzo):</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition-all duration-300 ease-in-out\"\n                        placeholder=\"Ej. 1-10\"\n                        value={currentPE}\n                        onChange={(e) => setCurrentPE(e.target.value)}\n                        disabled={!isEditable}\n                      />\n                    </div>\n                    <button\n                      onClick={handleAddDailyTracking}\n                      className=\"mt-auto px-6 py-2 rounded-xl bg-blue-600 text-white hover:bg-blue-700 transition-colors font-semibold shadow-md flex items-center justify-center\"\n                      title=\"Agregar\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-5 h-5\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                      </svg>\n                    </button>\n                  </div>\n                  {/* Historial de PF y PE por día */}\n                  {Object.keys(routine.dailyTracking || {}).length > 0 && (\n                    <div className=\"mt-4\">\n                      <h5 className=\"text-md font-semibold text-gray-700 mb-2\">Historial de PF y PE:</h5>\n                      <div className=\"space-y-2\">\n                        {Object.keys(routine.dailyTracking).sort().map(date => (\n                          routine.dailyTracking[date].map((entry, index) => (\n                            <div key={`${date}-${index}`} className=\"flex justify-between items-center p-2 bg-gray-50 rounded-md border border-gray-200\">\n                              <span className=\"text-sm text-gray-700\">Fecha: {date}</span>\n                              <span className=\"text-sm text-gray-700\">PF: {entry.PF}</span>\n                              <span className=\"text-sm text-gray-700\">PE: {entry.PE}</span>\n                            </div>\n                          ))\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        ))\n      )}\n\n      {isEditable && (\n        <button\n          onClick={() => setShowAddExerciseForm(true)}\n          className=\"w-full mt-6 bg-black text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n          title=\"Agregar Ejercicio\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n          </svg>\n        </button>\n      )}\n\n      {showAddExerciseForm && (\n        <div className=\"mb-6 p-4 border border-gray-200 rounded-xl bg-gray-50\">\n          <h3 className=\"text-lg font-bold text-gray-700 mb-4\">Agregar Ejercicio</h3>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre:</label>\n            <input\n              type=\"text\"\n              value={newExercise.name}\n              onChange={e => setNewExercise({ ...newExercise, name: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4 flex flex-wrap gap-4\">\n            <div>\n              <label className=\"block text-xs text-gray-700\">Series</label>\n              <input type=\"text\" value={newExercise.sets} onChange={e => setNewExercise({ ...newExercise, sets: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Reps</label>\n              <input type=\"text\" value={newExercise.reps} onChange={e => setNewExercise({ ...newExercise, reps: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Peso</label>\n              <input type=\"text\" value={newExercise.weight} onChange={e => setNewExercise({ ...newExercise, weight: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Tiempo</label>\n              <input type=\"text\" value={newExercise.time} onChange={e => setNewExercise({ ...newExercise, time: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-700\">Descanso</label>\n              <input type=\"text\" value={newExercise.rest} onChange={e => setNewExercise({ ...newExercise, rest: e.target.value })} className=\"w-20 px-2 py-1 border rounded-md\" />\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Media (URL):</label>\n            <input\n              type=\"text\"\n              value={newExercise.media}\n              onChange={e => setNewExercise({ ...newExercise, media: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notas:</label>\n            <textarea\n              value={newExercise.notes}\n              onChange={e => setNewExercise({ ...newExercise, notes: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n              rows=\"2\"\n              placeholder=\"Notas del ejercicio\"\n            ></textarea>\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Día:</label>\n            <input\n              type=\"text\"\n              value={newExercise.day}\n              onChange={e => setNewExercise({ ...newExercise, day: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Sección:</label>\n            <input\n              type=\"text\"\n              value={newExercise.section}\n              onChange={e => setNewExercise({ ...newExercise, section: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm\"\n            />\n          </div>\n          <div className=\"flex justify-end space-x-4 mt-6\">\n            <button\n              onClick={() => setShowAddExerciseForm(false)}\n              className=\"px-6 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors font-semibold flex items-center justify-center\"\n              title=\"Cancelar\"\n            >\n              Cancelar\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleAddExercise}\n              className=\"px-6 py-2 rounded-xl bg-black text-white hover:bg-gray-800 transition-colors font-semibold shadow-md flex items-center justify-center\"\n              title=\"Guardar Ejercicio\"\n            >\n              Guardar\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoutineDetail;"],"names":["_ref","exercise","weeks","tracking","onSave","onClose","localTracking","setLocalTracking","useState","JSON","parse","stringify","handleChange","week","field","value","prev","_jsx","className","children","_jsxs","name","map","idx","_localTracking$week","_localTracking$week2","type","placeholder","kg","onChange","e","target","style","minWidth","notes","title","onClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","selectedDate","onDateChange","isOpen","setIsOpen","datePickerRef","useRef","date","Date","currentMonth","setCurrentMonth","getMonth","currentYear","setCurrentYear","getFullYear","handleDayClick","day","newDate","toISOString","split","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","readOnly","handlePrevMonth","prevMonth","handleNextMonth","renderDays","totalDays","getDate","firstDay","firstDayOfMonth","year","month","getDay","days","i","push","isSelected","toDateString","isToday","routine","onUpdateRoutine","isEditable","onAddExerciseClick","editingExerciseId","setEditingExerciseId","editedSets","setEditedSets","sets","editedReps","setEditedReps","reps","editedWeight","setEditedWeight","weight","editedMedia","setEditedMedia","media","editedNotes","setEditedNotes","editedTime","setEditedTime","time","editedRest","setEditedRest","rest","editedDay","setEditedDay","editingRoutineDetails","setEditingRoutineDetails","editedRoutineName","setEditedRoutineName","editedStartDate","setEditedStartDate","startDate","editedEndDate","setEditedEndDate","endDate","editedDescription","setEditedDescription","description","editedExerciseName","setEditedExerciseName","name_ex","newExercise","setNewExercise","section","selectedExercise","setSelectedExercise","selectedDateForDailyTracking","setSelectedDateForDailyTracking","expandedExerciseTracking","setExpandedExerciseTracking","showAddExerciseForm","setShowAddExerciseForm","showTrackingModal","setShowTrackingModal","expandedDailyTracking","setExpandedDailyTracking","handleCancelEditExercise","exercises","Array","isArray","groupedExercises","reduce","acc","sortedDays","Object","keys","sort","a","b","startsWith","parseInt","replace","localeCompare","sectionOrder","handleAddDailyTracking","currentPF","currentPE","updatedRoutine","dailyTracking","formattedDate","PF","PE","setCurrentPF","setCurrentPE","alert","weeksArray","numWeeks","calculateWeeks","start","end","diffTime","Math","abs","diffDays","ceil","from","length","_","htmlFor","id","DatePicker","slice","rows","handleCancelEditRoutineDetails","client_id","indexA","indexOf","indexB","React","toggleExerciseTracking","exerciseId","prevState","href","rel","_Fragment","updatedExercises","ex","handleSaveClick","handleEditClick","window","confirm","filter","handleDeleteExercise","stopPropagation","ExerciseTrackingModal","exerciseTracking","trackingData","updatedTracking","fillRule","clipRule","disabled","entry","index","async","exerciseWithId","now","data","error","supabase","update","eq","select","console","log"],"sourceRoot":""}