{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\feder\\\\OneDrive\\\\Escritorio\\\\DS_entrenamiento\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback, Suspense, lazy } from 'react';\nimport LayoutHeader from './components/LayoutHeader';\nimport { defaultClients, defaultRoutines } from './mock/clients';\nimport { defaultUsers } from './mock/users';\nimport { generateUniqueId } from './utils/helpers';\n\n// Implementación de Lazy Loading para componentes grandes o que no se cargan al inicio\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientRoutineList = /*#__PURE__*/lazy(_c = () => import('./components/ClientRoutineList'));\n_c2 = ClientRoutineList;\nconst RoutineDetail = /*#__PURE__*/lazy(_c3 = () => import('./components/RoutineDetail'));\n_c4 = RoutineDetail;\nconst AuthScreen = /*#__PURE__*/lazy(_c5 = () => import('./components/AuthScreen'));\n_c6 = AuthScreen;\nconst RegisterScreen = /*#__PURE__*/lazy(_c7 = () => import('./components/RegisterScreen'));\n_c8 = RegisterScreen;\nconst AddExerciseScreen = /*#__PURE__*/lazy(_c9 = () => import('./components/AddExerciseScreen'));\n_c0 = AddExerciseScreen;\nconst AssignRoutineModal = /*#__PURE__*/lazy(_c1 = () => import('./components/AssignRoutineModal'));\n_c10 = AssignRoutineModal;\nconst UserManagementScreen = /*#__PURE__*/lazy(_c11 = () => import('./components/UserManagementScreen'));\n_c12 = UserManagementScreen;\nconst ClientDashboardAdmin = /*#__PURE__*/lazy(_c13 = () => import('./components/ClientDashboardAdmin'));\n_c14 = ClientDashboardAdmin;\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('auth');\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [selectedRoutine, setSelectedRoutine] = useState(null);\n  const [clients, setClients] = useState(defaultClients);\n  const [routines, setRoutines] = useState(defaultRoutines);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState(defaultUsers);\n  const [showAssignRoutineModal, setShowAssignRoutineModal] = useState(false);\n\n  // Memoizar los datos de clientes y usuarios si no cambian con frecuencia\n  const memoizedClients = useMemo(() => clients, [clients]);\n  const memoizedUsers = useMemo(() => users, [users]);\n  const memoizedRoutines = useMemo(() => routines, [routines]);\n\n  // Usar useCallback para funciones que se pasan como props para evitar re-renders innecesarios\n  const handleLogin = useCallback((email, password, method, roleAttempt) => {\n    if (method === 'email') {\n      const user = memoizedUsers.find(u => u.email === email && u.password === password);\n      if (user) {\n        // Aquí se modifica la lógica para que el rol del usuario determine la página de inicio\n        setCurrentUser(user);\n        if (user.role === 'client') {\n          const clientData = memoizedClients.find(c => c.email === user.email);\n          if (clientData) {\n            setSelectedClient(clientData);\n            setCurrentPage('clientDashboard');\n          } else {\n            alert('No se encontraron datos de cliente para este usuario. Por favor, contacta a tu entrenador.');\n            setCurrentUser(null); // Si no hay datos de cliente, no se loguea\n          }\n        } else if (user.role === 'admin') {\n          setCurrentPage('adminClientDashboard');\n        }\n      } else {\n        alert('Credenciales incorrectas.');\n      }\n    } else if (method === 'google') {\n      // Lógica para Google, asumiendo que siempre es admin para este ejemplo\n      const googleUser = memoizedUsers.find(u => u.email === 'trainer@example.com'); // Asumiendo un usuario admin para Google\n      if (googleUser) {\n        setCurrentUser(googleUser);\n        setCurrentPage('adminClientDashboard');\n      } else {\n        alert('Error al iniciar sesión con Google.');\n      }\n    }\n  }, [memoizedUsers, memoizedClients]);\n  const handleRegister = useCallback(userData => {\n    if (memoizedUsers.some(u => u.email === userData.email)) {\n      alert('Este email ya está registrado.');\n      return;\n    }\n    const newUser = {\n      id: generateUniqueId(),\n      email: userData.email,\n      password: userData.password,\n      role: 'client'\n    };\n    setUsers(prevUsers => [...prevUsers, newUser]);\n    const newClient = {\n      id: newUser.id,\n      name: userData.fullName,\n      email: userData.email,\n      lastRoutine: 'Sin rutinas',\n      progress: 0,\n      age: userData.age,\n      weight: userData.weight,\n      height: userData.height,\n      goals: userData.goals.split(',').map(goal => goal.trim()),\n      phone: userData.phone\n    };\n    setClients(prevClients => [...prevClients, newClient]);\n    alert('Registro exitoso. Por favor, inicia sesión.');\n    setCurrentPage('auth');\n  }, [memoizedUsers]);\n  const handleLogout = useCallback(() => {\n    setCurrentUser(null);\n    setSelectedClient(null);\n    setSelectedRoutine(null);\n    setCurrentPage('auth');\n  }, []);\n  const handleSelectClient = useCallback(client => {\n    setSelectedClient(client);\n    setCurrentPage('routines');\n  }, []);\n  const handleSelectRoutine = useCallback(routine => {\n    setSelectedRoutine(routine);\n    setCurrentPage('routineDetail');\n  }, []);\n  const handleBack = useCallback(() => {\n    if (currentPage === 'routineDetail') {\n      if (currentUser && currentUser.role === 'client') {\n        setCurrentPage('clientDashboard');\n      } else {\n        setCurrentPage('routines');\n      }\n      setSelectedRoutine(null);\n    } else if (currentPage === 'routines') {\n      if (currentUser && currentUser.role === 'client') {\n        setCurrentPage('clientDashboard');\n      } else {\n        setCurrentPage('adminClientDashboard');\n        setSelectedClient(null);\n      }\n    } else if (currentPage === 'clientDashboard') {\n      handleLogout();\n    } else if (currentPage === 'addExercise') {\n      setCurrentPage('routineDetail');\n    } else if (currentPage === 'userManagement') {\n      setCurrentPage('adminClientDashboard');\n    } else if (currentPage === 'adminClientDashboard') {\n      handleLogout();\n    }\n  }, [currentPage, currentUser, handleLogout]);\n  const handleAddRoutine = useCallback(newRoutine => {\n    setRoutines(prevRoutines => [...prevRoutines, newRoutine]);\n    if (selectedClient && selectedClient.lastRoutine === 'Sin rutinas') {\n      setClients(prevClients => prevClients.map(c => c.id === selectedClient.id ? {\n        ...c,\n        lastRoutine: newRoutine.name\n      } : c));\n    }\n  }, [selectedClient]);\n  const handleUpdateRoutine = useCallback(updatedRoutine => {\n    setRoutines(prevRoutines => prevRoutines.map(r => r.id === updatedRoutine.id ? updatedRoutine : r));\n    // Actualizar selectedRoutine si es la rutina que se está viendo\n    if (selectedRoutine && selectedRoutine.id === updatedRoutine.id) {\n      setSelectedRoutine(updatedRoutine);\n    }\n    if (selectedClient && selectedRoutine && selectedRoutine.id === updatedRoutine.id) {\n      setClients(prevClients => prevClients.map(c => c.id === selectedClient.id ? {\n        ...c,\n        lastRoutine: updatedRoutine.name\n      } : c));\n    }\n  }, [selectedClient, selectedRoutine]);\n  const handleAddExerciseToRoutine = useCallback(newExerciseData => {\n    if (selectedRoutine) {\n      const updatedRoutine = {\n        ...selectedRoutine,\n        exercises: [...selectedRoutine.exercises, newExerciseData]\n      };\n      handleUpdateRoutine(updatedRoutine);\n      // setSelectedRoutine(updatedRoutine); // Esto ya lo hace handleUpdateRoutine si es la rutina seleccionada\n    }\n  }, [selectedRoutine, handleUpdateRoutine]);\n  const handleDeleteClient = useCallback(clientId => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar a este cliente y todas sus rutinas?')) {\n      setClients(prevClients => prevClients.filter(client => client.id !== clientId));\n      setUsers(prevUsers => prevUsers.filter(user => user.id !== clientId));\n      setRoutines(prevRoutines => prevRoutines.filter(routine => routine.clientId !== clientId));\n      setSelectedClient(null);\n      setSelectedRoutine(null);\n      setCurrentPage('adminClientDashboard');\n      alert('Cliente eliminado exitosamente.');\n    }\n  }, []);\n  const handleDeleteRoutine = useCallback(routineId => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar esta rutina?')) {\n      setRoutines(prevRoutines => prevRoutines.filter(routine => routine.id !== routineId));\n      if (selectedClient) {\n        const clientRoutines = routines.filter(r => r.clientId === selectedClient.id && r.id !== routineId);\n        const newLastRoutineName = clientRoutines.length > 0 ? clientRoutines[clientRoutines.length - 1].name : 'Sin rutinas';\n        setClients(prevClients => prevClients.map(c => c.id === selectedClient.id ? {\n          ...c,\n          lastRoutine: newLastRoutineName\n        } : c));\n      }\n      setSelectedRoutine(null);\n      setCurrentPage('routines');\n      alert('Rutina eliminada exitosamente.');\n    }\n  }, [selectedClient, routines]);\n  const handleDeleteUser = useCallback(userId => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar a este usuario? Esto también eliminará sus datos de cliente y rutinas asociadas.')) {\n      setUsers(prevUsers => prevUsers.filter(user => user.id !== userId));\n      setClients(prevClients => prevClients.filter(client => client.id !== userId));\n      setRoutines(prevRoutines => prevRoutines.filter(routine => routine.clientId !== userId));\n      alert('Usuario eliminado exitosamente.');\n    }\n  }, []);\n  const handleResetUserPassword = useCallback((userId, newPassword) => {\n    setUsers(prevUsers => prevUsers.map(user => user.id === userId ? {\n      ...user,\n      password: newPassword\n    } : user));\n    alert('Contraseña restablecida exitosamente.');\n  }, []);\n  const handleAddClient = useCallback(() => {\n    const newClientName = prompt('Ingresa el nombre del nuevo cliente:');\n    if (newClientName) {\n      const newClientEmail = prompt('Ingresa el email del nuevo cliente:');\n      if (newClientEmail) {\n        const newClient = {\n          id: generateUniqueId(),\n          name: newClientName,\n          email: newClientEmail,\n          lastRoutine: 'Sin rutinas',\n          progress: 0,\n          age: null,\n          weight: null,\n          height: null,\n          goals: [],\n          phone: ''\n        };\n        setClients(prevClients => [...prevClients, newClient]);\n        setUsers(prevUsers => [...prevUsers, {\n          id: newClient.id,\n          email: newClient.email,\n          password: 'password123',\n          role: 'client'\n        }]);\n      }\n    }\n  }, []);\n  const handleAssignRoutine = useCallback(clientId => {\n    if (selectedRoutine) {\n      var _memoizedClients$find;\n      const updatedRoutine = {\n        ...selectedRoutine,\n        clientId: clientId\n      };\n      handleUpdateRoutine(updatedRoutine);\n      alert(`Rutina \"${selectedRoutine.name}\" asignada a ${((_memoizedClients$find = memoizedClients.find(c => c.id === clientId)) === null || _memoizedClients$find === void 0 ? void 0 : _memoizedClients$find.name) || 'un cliente'}.`);\n      setShowAssignRoutineModal(false);\n    }\n  }, [selectedRoutine, handleUpdateRoutine, memoizedClients]);\n\n  // Nueva función para actualizar una rutina desde ClientRoutineList\n  const handleUpdateRoutineFromList = useCallback(updatedRoutine => {\n    setRoutines(prevRoutines => prevRoutines.map(r => r.id === updatedRoutine.id ? updatedRoutine : r));\n  }, []);\n  const getHeaderTitle = useCallback(() => {\n    if (!currentUser) {\n      if (currentPage === 'auth') return 'Iniciar Sesión';\n      if (currentPage === 'register') return 'Registrarse';\n    }\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'adminClientDashboard') return 'Administración de Clientes';\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'routines' && selectedClient) return `Rutinas de ${selectedClient.name}`;\n    if (currentPage === 'routineDetail' && selectedRoutine) return selectedRoutine.name;\n    if (currentUser && currentUser.role === 'client' && currentPage === 'clientDashboard') return `Mis Rutinas`;\n    if (currentPage === 'addExercise') return 'Agregar Ejercicio';\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'userManagement') return 'Gestión de Usuarios';\n    return 'DS Entrenamiento';\n  }, [currentPage, currentUser, selectedClient, selectedRoutine]);\n  const isRoutineEditable = currentUser && currentUser.role === 'admin';\n  if (!currentUser) {\n    if (currentPage === 'register') {\n      return /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Cargando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(RegisterScreen, {\n          onRegister: handleRegister,\n          onGoToLogin: () => setCurrentPage('auth')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(AuthScreen, {\n        onLogin: handleLogin,\n        onGoToRegister: () => setCurrentPage('register')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 font-sans antialiased\",\n    children: [/*#__PURE__*/_jsxDEV(LayoutHeader, {\n      title: getHeaderTitle(),\n      onBackClick: handleBack,\n      showBackButton: currentPage !== 'adminClientDashboard' && currentPage !== 'clientDashboard' && currentPage !== 'auth' && currentPage !== 'register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"p-6 max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Cargando contenido...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this),\n        children: [currentUser.role === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [currentPage === 'adminClientDashboard' && /*#__PURE__*/_jsxDEV(ClientDashboardAdmin, {\n            clients: memoizedClients,\n            onSelectClient: handleSelectClient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), currentPage === 'routines' && selectedClient && /*#__PURE__*/_jsxDEV(ClientRoutineList, {\n            client: selectedClient,\n            routines: memoizedRoutines.filter(r => r.clientId === selectedClient.id),\n            onSelectRoutine: handleSelectRoutine,\n            onAddRoutine: handleAddRoutine,\n            isEditable: true,\n            onDeleteRoutine: handleDeleteRoutine,\n            onUpdateRoutine: handleUpdateRoutineFromList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), currentPage === 'routineDetail' && selectedRoutine && /*#__PURE__*/_jsxDEV(RoutineDetail, {\n            routine: selectedRoutine,\n            onUpdateRoutine: handleUpdateRoutine,\n            isEditable: true,\n            onAddExerciseClick: () => setCurrentPage('addExercise')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this), currentPage === 'addExercise' && /*#__PURE__*/_jsxDEV(AddExerciseScreen, {\n            onAddExercise: handleAddExerciseToRoutine,\n            onBack: () => setCurrentPage('routineDetail')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this), currentPage === 'userManagement' && /*#__PURE__*/_jsxDEV(UserManagementScreen, {\n            users: memoizedUsers,\n            onDeleteUser: handleDeleteUser,\n            onResetPassword: handleResetUserPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), currentPage === 'adminClientDashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddClient,\n              className: \"w-full bg-black text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md mb-4\",\n              children: \"Agregar Nuevo Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentPage('userManagement'),\n              className: \"w-full bg-gray-700 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\",\n              children: \"Administrar Usuarios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), currentPage === 'routineDetail' && selectedRoutine && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAssignRoutineModal(true),\n            className: \"w-full mt-4 bg-blue-600 text-white py-3 rounded-xl hover:bg-blue-700 transition-colors font-semibold shadow-md\",\n            children: \"Asignar Rutina a Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentUser.role === 'client' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [currentPage === 'clientDashboard' && selectedClient && /*#__PURE__*/_jsxDEV(ClientRoutineList, {\n            client: selectedClient,\n            routines: memoizedRoutines.filter(r => r.clientId === selectedClient.id),\n            onSelectRoutine: handleSelectRoutine,\n            onAddRoutine: () => {},\n            isEditable: false,\n            onUpdateRoutine: handleUpdateRoutineFromList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this), currentPage === 'routineDetail' && selectedRoutine && /*#__PURE__*/_jsxDEV(RoutineDetail, {\n            routine: selectedRoutine,\n            onUpdateRoutine: handleUpdateRoutine,\n            isEditable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"w-full mt-8 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\",\n        style: {\n          backgroundColor: '#183E0C'\n        },\n        children: \"Cerrar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), showAssignRoutineModal && /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Cargando modal...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(AssignRoutineModal, {\n        clients: memoizedClients,\n        onAssign: handleAssignRoutine,\n        onClose: () => setShowAssignRoutineModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ECjkNns3U8vh85nBReqsxahONfc=\");\n_c15 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"ClientRoutineList$lazy\");\n$RefreshReg$(_c2, \"ClientRoutineList\");\n$RefreshReg$(_c3, \"RoutineDetail$lazy\");\n$RefreshReg$(_c4, \"RoutineDetail\");\n$RefreshReg$(_c5, \"AuthScreen$lazy\");\n$RefreshReg$(_c6, \"AuthScreen\");\n$RefreshReg$(_c7, \"RegisterScreen$lazy\");\n$RefreshReg$(_c8, \"RegisterScreen\");\n$RefreshReg$(_c9, \"AddExerciseScreen$lazy\");\n$RefreshReg$(_c0, \"AddExerciseScreen\");\n$RefreshReg$(_c1, \"AssignRoutineModal$lazy\");\n$RefreshReg$(_c10, \"AssignRoutineModal\");\n$RefreshReg$(_c11, \"UserManagementScreen$lazy\");\n$RefreshReg$(_c12, \"UserManagementScreen\");\n$RefreshReg$(_c13, \"ClientDashboardAdmin$lazy\");\n$RefreshReg$(_c14, \"ClientDashboardAdmin\");\n$RefreshReg$(_c15, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Suspense","lazy","LayoutHeader","defaultClients","defaultRoutines","defaultUsers","generateUniqueId","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientRoutineList","_c","_c2","RoutineDetail","_c3","_c4","AuthScreen","_c5","_c6","RegisterScreen","_c7","_c8","AddExerciseScreen","_c9","_c0","AssignRoutineModal","_c1","_c10","UserManagementScreen","_c11","_c12","ClientDashboardAdmin","_c13","_c14","App","_s","currentPage","setCurrentPage","selectedClient","setSelectedClient","selectedRoutine","setSelectedRoutine","clients","setClients","routines","setRoutines","currentUser","setCurrentUser","users","setUsers","showAssignRoutineModal","setShowAssignRoutineModal","memoizedClients","memoizedUsers","memoizedRoutines","handleLogin","email","password","method","roleAttempt","user","find","u","role","clientData","c","alert","googleUser","handleRegister","userData","some","newUser","id","prevUsers","newClient","name","fullName","lastRoutine","progress","age","weight","height","goals","split","map","goal","trim","phone","prevClients","handleLogout","handleSelectClient","client","handleSelectRoutine","routine","handleBack","handleAddRoutine","newRoutine","prevRoutines","handleUpdateRoutine","updatedRoutine","r","handleAddExerciseToRoutine","newExerciseData","exercises","handleDeleteClient","clientId","window","confirm","filter","handleDeleteRoutine","routineId","clientRoutines","newLastRoutineName","length","handleDeleteUser","userId","handleResetUserPassword","newPassword","handleAddClient","newClientName","prompt","newClientEmail","handleAssignRoutine","_memoizedClients$find","handleUpdateRoutineFromList","getHeaderTitle","isRoutineEditable","fallback","children","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","onGoToLogin","onLogin","onGoToRegister","className","title","onBackClick","showBackButton","onSelectClient","onSelectRoutine","onAddRoutine","isEditable","onDeleteRoutine","onUpdateRoutine","onAddExerciseClick","onAddExercise","onBack","onDeleteUser","onResetPassword","onClick","style","backgroundColor","onAssign","onClose","_c15","$RefreshReg$"],"sources":["C:/Users/feder/OneDrive/Escritorio/DS_entrenamiento/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, Suspense, lazy } from 'react';\nimport LayoutHeader from './components/LayoutHeader';\nimport { defaultClients, defaultRoutines } from './mock/clients';\nimport { defaultUsers } from './mock/users';\nimport { generateUniqueId } from './utils/helpers';\n\n// Implementación de Lazy Loading para componentes grandes o que no se cargan al inicio\nconst ClientRoutineList = lazy(() => import('./components/ClientRoutineList'));\nconst RoutineDetail = lazy(() => import('./components/RoutineDetail'));\nconst AuthScreen = lazy(() => import('./components/AuthScreen'));\nconst RegisterScreen = lazy(() => import('./components/RegisterScreen'));\nconst AddExerciseScreen = lazy(() => import('./components/AddExerciseScreen'));\nconst AssignRoutineModal = lazy(() => import('./components/AssignRoutineModal'));\nconst UserManagementScreen = lazy(() => import('./components/UserManagementScreen'));\nconst ClientDashboardAdmin = lazy(() => import('./components/ClientDashboardAdmin'));\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('auth');\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [selectedRoutine, setSelectedRoutine] = useState(null);\n  const [clients, setClients] = useState(defaultClients);\n  const [routines, setRoutines] = useState(defaultRoutines);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState(defaultUsers);\n  const [showAssignRoutineModal, setShowAssignRoutineModal] = useState(false);\n\n  // Memoizar los datos de clientes y usuarios si no cambian con frecuencia\n  const memoizedClients = useMemo(() => clients, [clients]);\n  const memoizedUsers = useMemo(() => users, [users]);\n  const memoizedRoutines = useMemo(() => routines, [routines]);\n\n  // Usar useCallback para funciones que se pasan como props para evitar re-renders innecesarios\n  const handleLogin = useCallback((email, password, method, roleAttempt) => {\n    if (method === 'email') {\n      const user = memoizedUsers.find(u => u.email === email && u.password === password);\n      if (user) {\n        // Aquí se modifica la lógica para que el rol del usuario determine la página de inicio\n        setCurrentUser(user);\n        if (user.role === 'client') {\n          const clientData = memoizedClients.find(c => c.email === user.email);\n          if (clientData) {\n            setSelectedClient(clientData);\n            setCurrentPage('clientDashboard');\n          } else {\n            alert('No se encontraron datos de cliente para este usuario. Por favor, contacta a tu entrenador.');\n            setCurrentUser(null); // Si no hay datos de cliente, no se loguea\n          }\n        } else if (user.role === 'admin') {\n          setCurrentPage('adminClientDashboard');\n        }\n      } else {\n        alert('Credenciales incorrectas.');\n      }\n    } else if (method === 'google') {\n      // Lógica para Google, asumiendo que siempre es admin para este ejemplo\n      const googleUser = memoizedUsers.find(u => u.email === 'trainer@example.com'); // Asumiendo un usuario admin para Google\n      if (googleUser) {\n        setCurrentUser(googleUser);\n        setCurrentPage('adminClientDashboard');\n      } else {\n        alert('Error al iniciar sesión con Google.');\n      }\n    }\n  }, [memoizedUsers, memoizedClients]);\n\n  const handleRegister = useCallback((userData) => {\n    if (memoizedUsers.some(u => u.email === userData.email)) {\n      alert('Este email ya está registrado.');\n      return;\n    }\n\n    const newUser = {\n      id: generateUniqueId(),\n      email: userData.email,\n      password: userData.password,\n      role: 'client',\n    };\n    setUsers((prevUsers) => [...prevUsers, newUser]);\n\n    const newClient = {\n      id: newUser.id,\n      name: userData.fullName,\n      email: userData.email,\n      lastRoutine: 'Sin rutinas',\n      progress: 0,\n      age: userData.age,\n      weight: userData.weight,\n      height: userData.height,\n      goals: userData.goals.split(',').map(goal => goal.trim()),\n      phone: userData.phone,\n    };\n    setClients((prevClients) => [...prevClients, newClient]);\n\n    alert('Registro exitoso. Por favor, inicia sesión.');\n    setCurrentPage('auth');\n  }, [memoizedUsers]);\n\n  const handleLogout = useCallback(() => {\n    setCurrentUser(null);\n    setSelectedClient(null);\n    setSelectedRoutine(null);\n    setCurrentPage('auth');\n  }, []);\n\n  const handleSelectClient = useCallback((client) => {\n    setSelectedClient(client);\n    setCurrentPage('routines');\n  }, []);\n\n  const handleSelectRoutine = useCallback((routine) => {\n    setSelectedRoutine(routine);\n    setCurrentPage('routineDetail');\n  }, []);\n\n  const handleBack = useCallback(() => {\n    if (currentPage === 'routineDetail') {\n      if (currentUser && currentUser.role === 'client') {\n        setCurrentPage('clientDashboard');\n      } else {\n        setCurrentPage('routines');\n      }\n      setSelectedRoutine(null);\n    } else if (currentPage === 'routines') {\n      if (currentUser && currentUser.role === 'client') {\n        setCurrentPage('clientDashboard');\n      } else {\n        setCurrentPage('adminClientDashboard');\n        setSelectedClient(null);\n      }\n    } else if (currentPage === 'clientDashboard') {\n      handleLogout();\n    } else if (currentPage === 'addExercise') {\n      setCurrentPage('routineDetail');\n    } else if (currentPage === 'userManagement') {\n      setCurrentPage('adminClientDashboard');\n    } else if (currentPage === 'adminClientDashboard') {\n      handleLogout();\n    }\n  }, [currentPage, currentUser, handleLogout]);\n\n  const handleAddRoutine = useCallback((newRoutine) => {\n    setRoutines((prevRoutines) => [...prevRoutines, newRoutine]);\n    if (selectedClient && selectedClient.lastRoutine === 'Sin rutinas') {\n      setClients((prevClients) =>\n        prevClients.map((c) =>\n          c.id === selectedClient.id ? { ...c, lastRoutine: newRoutine.name } : c\n        )\n      );\n    }\n  }, [selectedClient]);\n\n  const handleUpdateRoutine = useCallback((updatedRoutine) => {\n    setRoutines((prevRoutines) =>\n      prevRoutines.map((r) => (r.id === updatedRoutine.id ? updatedRoutine : r))\n    );\n    // Actualizar selectedRoutine si es la rutina que se está viendo\n    if (selectedRoutine && selectedRoutine.id === updatedRoutine.id) {\n      setSelectedRoutine(updatedRoutine);\n    }\n    if (selectedClient && selectedRoutine && selectedRoutine.id === updatedRoutine.id) {\n      setClients((prevClients) =>\n        prevClients.map((c) =>\n          c.id === selectedClient.id ? { ...c, lastRoutine: updatedRoutine.name } : c\n        )\n      );\n    }\n  }, [selectedClient, selectedRoutine]);\n\n  const handleAddExerciseToRoutine = useCallback((newExerciseData) => {\n    if (selectedRoutine) {\n      const updatedRoutine = {\n        ...selectedRoutine,\n        exercises: [...selectedRoutine.exercises, newExerciseData],\n      };\n      handleUpdateRoutine(updatedRoutine);\n      // setSelectedRoutine(updatedRoutine); // Esto ya lo hace handleUpdateRoutine si es la rutina seleccionada\n    }\n  }, [selectedRoutine, handleUpdateRoutine]);\n\n  const handleDeleteClient = useCallback((clientId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar a este cliente y todas sus rutinas?')) {\n      setClients((prevClients) => prevClients.filter(client => client.id !== clientId));\n      setUsers((prevUsers) => prevUsers.filter(user => user.id !== clientId));\n      setRoutines((prevRoutines) => prevRoutines.filter(routine => routine.clientId !== clientId));\n      setSelectedClient(null);\n      setSelectedRoutine(null);\n      setCurrentPage('adminClientDashboard');\n      alert('Cliente eliminado exitosamente.');\n    }\n  }, []);\n\n  const handleDeleteRoutine = useCallback((routineId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar esta rutina?')) {\n      setRoutines((prevRoutines) => prevRoutines.filter(routine => routine.id !== routineId));\n      if (selectedClient) {\n        const clientRoutines = routines.filter(r => r.clientId === selectedClient.id && r.id !== routineId);\n        const newLastRoutineName = clientRoutines.length > 0 ? clientRoutines[clientRoutines.length - 1].name : 'Sin rutinas';\n        setClients((prevClients) =>\n          prevClients.map((c) =>\n            c.id === selectedClient.id ? { ...c, lastRoutine: newLastRoutineName } : c\n          )\n        );\n      }\n      setSelectedRoutine(null);\n      setCurrentPage('routines');\n      alert('Rutina eliminada exitosamente.');\n    }\n  }, [selectedClient, routines]);\n\n  const handleDeleteUser = useCallback((userId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar a este usuario? Esto también eliminará sus datos de cliente y rutinas asociadas.')) {\n      setUsers((prevUsers) => prevUsers.filter(user => user.id !== userId));\n      setClients((prevClients) => prevClients.filter(client => client.id !== userId));\n      setRoutines((prevRoutines) => prevRoutines.filter(routine => routine.clientId !== userId));\n      alert('Usuario eliminado exitosamente.');\n    }\n  }, []);\n\n  const handleResetUserPassword = useCallback((userId, newPassword) => {\n    setUsers((prevUsers) =>\n      prevUsers.map((user) =>\n        user.id === userId ? { ...user, password: newPassword } : user\n      )\n    );\n    alert('Contraseña restablecida exitosamente.');\n  }, []);\n\n  const handleAddClient = useCallback(() => {\n    const newClientName = prompt('Ingresa el nombre del nuevo cliente:');\n    if (newClientName) {\n      const newClientEmail = prompt('Ingresa el email del nuevo cliente:');\n      if (newClientEmail) {\n        const newClient = {\n          id: generateUniqueId(),\n          name: newClientName,\n          email: newClientEmail,\n          lastRoutine: 'Sin rutinas',\n          progress: 0,\n          age: null,\n          weight: null,\n          height: null,\n          goals: [],\n          phone: '',\n        };\n        setClients((prevClients) => [...prevClients, newClient]);\n        setUsers((prevUsers) => [...prevUsers, { id: newClient.id, email: newClient.email, password: 'password123', role: 'client' }]);\n      }\n    }\n  }, []);\n\n  const handleAssignRoutine = useCallback((clientId) => {\n    if (selectedRoutine) {\n      const updatedRoutine = { ...selectedRoutine, clientId: clientId };\n      handleUpdateRoutine(updatedRoutine);\n      alert(`Rutina \"${selectedRoutine.name}\" asignada a ${memoizedClients.find(c => c.id === clientId)?.name || 'un cliente'}.`);\n      setShowAssignRoutineModal(false);\n    }\n  }, [selectedRoutine, handleUpdateRoutine, memoizedClients]);\n\n  // Nueva función para actualizar una rutina desde ClientRoutineList\n  const handleUpdateRoutineFromList = useCallback((updatedRoutine) => {\n    setRoutines((prevRoutines) =>\n      prevRoutines.map((r) => (r.id === updatedRoutine.id ? updatedRoutine : r))\n    );\n  }, []);\n\n  const getHeaderTitle = useCallback(() => {\n    if (!currentUser) {\n      if (currentPage === 'auth') return 'Iniciar Sesión';\n      if (currentPage === 'register') return 'Registrarse';\n    }\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'adminClientDashboard') return 'Administración de Clientes';\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'routines' && selectedClient) return `Rutinas de ${selectedClient.name}`;\n    if (currentPage === 'routineDetail' && selectedRoutine) return selectedRoutine.name;\n    if (currentUser && currentUser.role === 'client' && currentPage === 'clientDashboard') return `Mis Rutinas`;\n    if (currentPage === 'addExercise') return 'Agregar Ejercicio';\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'userManagement') return 'Gestión de Usuarios';\n    return 'DS Entrenamiento';\n  }, [currentPage, currentUser, selectedClient, selectedRoutine]);\n\n  const isRoutineEditable = currentUser && currentUser.role === 'admin';\n\n  if (!currentUser) {\n    if (currentPage === 'register') {\n      return (\n        <Suspense fallback={<div>Cargando...</div>}>\n          <RegisterScreen onRegister={handleRegister} onGoToLogin={() => setCurrentPage('auth')} />\n        </Suspense>\n      );\n    }\n    return (\n      <Suspense fallback={<div>Cargando...</div>}>\n        <AuthScreen onLogin={handleLogin} onGoToRegister={() => setCurrentPage('register')} />\n      </Suspense>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 font-sans antialiased\">\n      <LayoutHeader\n        title={getHeaderTitle()}\n        onBackClick={handleBack}\n        showBackButton={currentPage !== 'adminClientDashboard' && currentPage !== 'clientDashboard' && currentPage !== 'auth' && currentPage !== 'register'}\n      />\n\n      <main className=\"p-6 max-w-4xl mx-auto\">\n        <Suspense fallback={<div>Cargando contenido...</div>}>\n          {/* Sección para el Coach (Administrador) */}\n          {currentUser.role === 'admin' && (\n            <>\n              {currentPage === 'adminClientDashboard' && (\n                <ClientDashboardAdmin\n                  clients={memoizedClients}\n                  onSelectClient={handleSelectClient}\n                />\n              )}\n\n              {currentPage === 'routines' && selectedClient && (\n                <ClientRoutineList\n                  client={selectedClient}\n                  routines={memoizedRoutines.filter(r => r.clientId === selectedClient.id)}\n                  onSelectRoutine={handleSelectRoutine}\n                  onAddRoutine={handleAddRoutine}\n                  isEditable={true}\n                  onDeleteRoutine={handleDeleteRoutine}\n                  onUpdateRoutine={handleUpdateRoutineFromList}\n                />\n              )}\n\n              {currentPage === 'routineDetail' && selectedRoutine && (\n                <RoutineDetail\n                  routine={selectedRoutine}\n                  onUpdateRoutine={handleUpdateRoutine}\n                  isEditable={true}\n                  onAddExerciseClick={() => setCurrentPage('addExercise')}\n                />\n              )}\n\n              {currentPage === 'addExercise' && (\n                <AddExerciseScreen\n                  onAddExercise={handleAddExerciseToRoutine}\n                  onBack={() => setCurrentPage('routineDetail')}\n                />\n              )}\n\n              {currentPage === 'userManagement' && (\n                <UserManagementScreen\n                  users={memoizedUsers}\n                  onDeleteUser={handleDeleteUser}\n                  onResetPassword={handleResetUserPassword}\n                />\n              )}\n\n              {/* Botones de acción para el admin, visibles solo en el dashboard principal del admin */}\n              {currentPage === 'adminClientDashboard' && (\n                <>\n                  <button\n                    onClick={handleAddClient}\n                    className=\"w-full bg-black text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md mb-4\"\n                  >\n                    Agregar Nuevo Cliente\n                  </button>\n                  <button\n                    onClick={() => setCurrentPage('userManagement')}\n                    className=\"w-full bg-gray-700 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\"\n                  >\n                    Administrar Usuarios\n                  </button>\n                </>\n              )}\n              {currentPage === 'routineDetail' && selectedRoutine && (\n                <button\n                  onClick={() => setShowAssignRoutineModal(true)}\n                  className=\"w-full mt-4 bg-blue-600 text-white py-3 rounded-xl hover:bg-blue-700 transition-colors font-semibold shadow-md\"\n                >\n                  Asignar Rutina a Cliente\n                </button>\n              )}\n            </>\n          )}\n\n          {/* Sección para el Cliente */}\n          {currentUser.role === 'client' && (\n            <>\n              {currentPage === 'clientDashboard' && selectedClient && (\n                <ClientRoutineList\n                  client={selectedClient}\n                  routines={memoizedRoutines.filter(r => r.clientId === selectedClient.id)}\n                  onSelectRoutine={handleSelectRoutine}\n                  onAddRoutine={() => {}}\n                  isEditable={false}\n                  onUpdateRoutine={handleUpdateRoutineFromList}\n                />\n              )}\n\n              {currentPage === 'routineDetail' && selectedRoutine && (\n                <RoutineDetail routine={selectedRoutine} onUpdateRoutine={handleUpdateRoutine} isEditable={false} />\n              )}\n            </>\n          )}\n        </Suspense>\n\n        <button\n          onClick={handleLogout}\n          className=\"w-full mt-8 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\"\n          style={{ backgroundColor: '#183E0C' }}\n        >\n          Cerrar Sesión\n        </button>\n      </main>\n\n      {showAssignRoutineModal && (\n        <Suspense fallback={<div>Cargando modal...</div>}>\n          <AssignRoutineModal\n            clients={memoizedClients}\n            onAssign={handleAssignRoutine}\n            onClose={() => setShowAssignRoutineModal(false)}\n          />\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}