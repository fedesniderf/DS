{"ast":null,"code":"import React,{useState,useEffect,useMemo,useCallback,Suspense,lazy}from'react';import LayoutHeader from'./components/LayoutHeader';import{defaultClients,defaultRoutines}from'./mock/clients';import{defaultUsers}from'./mock/users';import{generateUniqueId}from'./utils/helpers';// Implementación de Lazy Loading para componentes grandes o que no se cargan al inicio\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ClientRoutineList=/*#__PURE__*/lazy(()=>import('./components/ClientRoutineList'));const RoutineDetail=/*#__PURE__*/lazy(()=>import('./components/RoutineDetail'));const AuthScreen=/*#__PURE__*/lazy(()=>import('./components/AuthScreen'));const RegisterScreen=/*#__PURE__*/lazy(()=>import('./components/RegisterScreen'));const AddExerciseScreen=/*#__PURE__*/lazy(()=>import('./components/AddExerciseScreen'));const AssignRoutineModal=/*#__PURE__*/lazy(()=>import('./components/AssignRoutineModal'));const UserManagementScreen=/*#__PURE__*/lazy(()=>import('./components/UserManagementScreen'));const ClientDashboardAdmin=/*#__PURE__*/lazy(()=>import('./components/ClientDashboardAdmin'));const App=()=>{const[currentPage,setCurrentPage]=useState('auth');const[selectedClient,setSelectedClient]=useState(null);const[selectedRoutine,setSelectedRoutine]=useState(null);const[clients,setClients]=useState(defaultClients);const[routines,setRoutines]=useState(defaultRoutines);const[currentUser,setCurrentUser]=useState(null);const[users,setUsers]=useState(defaultUsers);const[showAssignRoutineModal,setShowAssignRoutineModal]=useState(false);// Memoizar los datos de clientes y usuarios si no cambian con frecuencia\nconst memoizedClients=useMemo(()=>clients,[clients]);const memoizedUsers=useMemo(()=>users,[users]);const memoizedRoutines=useMemo(()=>routines,[routines]);// Usar useCallback para funciones que se pasan como props para evitar re-renders innecesarios\nconst handleLogin=useCallback((email,password,method,roleAttempt)=>{if(method==='email'){const user=memoizedUsers.find(u=>u.email===email&&u.password===password);if(user){// Aquí se modifica la lógica para que el rol del usuario determine la página de inicio\nsetCurrentUser(user);if(user.role==='client'){const clientData=memoizedClients.find(c=>c.email===user.email);if(clientData){setSelectedClient(clientData);setCurrentPage('clientDashboard');}else{alert('No se encontraron datos de cliente para este usuario. Por favor, contacta a tu entrenador.');setCurrentUser(null);// Si no hay datos de cliente, no se loguea\n}}else if(user.role==='admin'){setCurrentPage('adminClientDashboard');}}else{alert('Credenciales incorrectas.');}}else if(method==='google'){// Lógica para Google, asumiendo que siempre es admin para este ejemplo\nconst googleUser=memoizedUsers.find(u=>u.email==='trainer@example.com');// Asumiendo un usuario admin para Google\nif(googleUser){setCurrentUser(googleUser);setCurrentPage('adminClientDashboard');}else{alert('Error al iniciar sesión con Google.');}}},[memoizedUsers,memoizedClients]);const handleRegister=useCallback(userData=>{if(memoizedUsers.some(u=>u.email===userData.email)){alert('Este email ya está registrado.');return;}const newUser={id:generateUniqueId(),email:userData.email,password:userData.password,role:'client'};setUsers(prevUsers=>[...prevUsers,newUser]);const newClient={id:newUser.id,name:userData.fullName,email:userData.email,lastRoutine:'Sin rutinas',progress:0,age:userData.age,weight:userData.weight,height:userData.height,goals:userData.goals.split(',').map(goal=>goal.trim()),phone:userData.phone};setClients(prevClients=>[...prevClients,newClient]);alert('Registro exitoso. Por favor, inicia sesión.');setCurrentPage('auth');},[memoizedUsers]);const handleLogout=useCallback(()=>{setCurrentUser(null);setSelectedClient(null);setSelectedRoutine(null);setCurrentPage('auth');},[]);const handleSelectClient=useCallback(client=>{setSelectedClient(client);setCurrentPage('routines');},[]);const handleSelectRoutine=useCallback(routine=>{setSelectedRoutine(routine);setCurrentPage('routineDetail');},[]);const handleBack=useCallback(()=>{if(currentPage==='routineDetail'){if(currentUser&&currentUser.role==='client'){setCurrentPage('clientDashboard');}else{setCurrentPage('routines');}setSelectedRoutine(null);}else if(currentPage==='routines'){if(currentUser&&currentUser.role==='client'){setCurrentPage('clientDashboard');}else{setCurrentPage('adminClientDashboard');setSelectedClient(null);}}else if(currentPage==='clientDashboard'){handleLogout();}else if(currentPage==='addExercise'){setCurrentPage('routineDetail');}else if(currentPage==='userManagement'){setCurrentPage('adminClientDashboard');}else if(currentPage==='adminClientDashboard'){handleLogout();}},[currentPage,currentUser,handleLogout]);const handleAddRoutine=useCallback(newRoutine=>{setRoutines(prevRoutines=>[...prevRoutines,newRoutine]);if(selectedClient&&selectedClient.lastRoutine==='Sin rutinas'){setClients(prevClients=>prevClients.map(c=>c.id===selectedClient.id?{...c,lastRoutine:newRoutine.name}:c));}},[selectedClient]);const handleUpdateRoutine=useCallback(updatedRoutine=>{setRoutines(prevRoutines=>prevRoutines.map(r=>r.id===updatedRoutine.id?updatedRoutine:r));// Actualizar selectedRoutine si es la rutina que se está viendo\nif(selectedRoutine&&selectedRoutine.id===updatedRoutine.id){setSelectedRoutine(updatedRoutine);}if(selectedClient&&selectedRoutine&&selectedRoutine.id===updatedRoutine.id){setClients(prevClients=>prevClients.map(c=>c.id===selectedClient.id?{...c,lastRoutine:updatedRoutine.name}:c));}},[selectedClient,selectedRoutine]);const handleAddExerciseToRoutine=useCallback(newExerciseData=>{if(selectedRoutine){const updatedRoutine={...selectedRoutine,exercises:[...selectedRoutine.exercises,newExerciseData]};handleUpdateRoutine(updatedRoutine);// setSelectedRoutine(updatedRoutine); // Esto ya lo hace handleUpdateRoutine si es la rutina seleccionada\n}},[selectedRoutine,handleUpdateRoutine]);const handleDeleteClient=useCallback(clientId=>{if(window.confirm('¿Estás seguro de que quieres eliminar a este cliente y todas sus rutinas?')){setClients(prevClients=>prevClients.filter(client=>client.id!==clientId));setUsers(prevUsers=>prevUsers.filter(user=>user.id!==clientId));setRoutines(prevRoutines=>prevRoutines.filter(routine=>routine.clientId!==clientId));setSelectedClient(null);setSelectedRoutine(null);setCurrentPage('adminClientDashboard');alert('Cliente eliminado exitosamente.');}},[]);const handleDeleteRoutine=useCallback(routineId=>{if(window.confirm('¿Estás seguro de que quieres eliminar esta rutina?')){setRoutines(prevRoutines=>prevRoutines.filter(routine=>routine.id!==routineId));if(selectedClient){const clientRoutines=routines.filter(r=>r.clientId===selectedClient.id&&r.id!==routineId);const newLastRoutineName=clientRoutines.length>0?clientRoutines[clientRoutines.length-1].name:'Sin rutinas';setClients(prevClients=>prevClients.map(c=>c.id===selectedClient.id?{...c,lastRoutine:newLastRoutineName}:c));}setSelectedRoutine(null);setCurrentPage('routines');alert('Rutina eliminada exitosamente.');}},[selectedClient,routines]);const handleDeleteUser=useCallback(userId=>{if(window.confirm('¿Estás seguro de que quieres eliminar a este usuario? Esto también eliminará sus datos de cliente y rutinas asociadas.')){setUsers(prevUsers=>prevUsers.filter(user=>user.id!==userId));setClients(prevClients=>prevClients.filter(client=>client.id!==userId));setRoutines(prevRoutines=>prevRoutines.filter(routine=>routine.clientId!==userId));alert('Usuario eliminado exitosamente.');}},[]);const handleResetUserPassword=useCallback((userId,newPassword)=>{setUsers(prevUsers=>prevUsers.map(user=>user.id===userId?{...user,password:newPassword}:user));alert('Contraseña restablecida exitosamente.');},[]);const handleAddClient=useCallback(()=>{const newClientName=prompt('Ingresa el nombre del nuevo cliente:');if(newClientName){const newClientEmail=prompt('Ingresa el email del nuevo cliente:');if(newClientEmail){const newClient={id:generateUniqueId(),name:newClientName,email:newClientEmail,lastRoutine:'Sin rutinas',progress:0,age:null,weight:null,height:null,goals:[],phone:''};setClients(prevClients=>[...prevClients,newClient]);setUsers(prevUsers=>[...prevUsers,{id:newClient.id,email:newClient.email,password:'password123',role:'client'}]);}}},[]);const handleAssignRoutine=useCallback(clientId=>{if(selectedRoutine){var _memoizedClients$find;const updatedRoutine={...selectedRoutine,clientId:clientId};handleUpdateRoutine(updatedRoutine);alert(`Rutina \"${selectedRoutine.name}\" asignada a ${((_memoizedClients$find=memoizedClients.find(c=>c.id===clientId))===null||_memoizedClients$find===void 0?void 0:_memoizedClients$find.name)||'un cliente'}.`);setShowAssignRoutineModal(false);}},[selectedRoutine,handleUpdateRoutine,memoizedClients]);// Nueva función para actualizar una rutina desde ClientRoutineList\nconst handleUpdateRoutineFromList=useCallback(updatedRoutine=>{setRoutines(prevRoutines=>prevRoutines.map(r=>r.id===updatedRoutine.id?updatedRoutine:r));},[]);const getHeaderTitle=useCallback(()=>{if(!currentUser){if(currentPage==='auth')return'Iniciar Sesión';if(currentPage==='register')return'Registrarse';}if(currentUser&&currentUser.role==='admin'&&currentPage==='adminClientDashboard')return'Administración de Clientes';if(currentUser&&currentUser.role==='admin'&&currentPage==='routines'&&selectedClient)return`Rutinas de ${selectedClient.name}`;if(currentPage==='routineDetail'&&selectedRoutine)return selectedRoutine.name;if(currentUser&&currentUser.role==='client'&&currentPage==='clientDashboard')return`Mis Rutinas`;if(currentPage==='addExercise')return'Agregar Ejercicio';if(currentUser&&currentUser.role==='admin'&&currentPage==='userManagement')return'Gestión de Usuarios';return'DS Entrenamiento';},[currentPage,currentUser,selectedClient,selectedRoutine]);const isRoutineEditable=currentUser&&currentUser.role==='admin';if(!currentUser){if(currentPage==='register'){return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Cargando...\"}),children:/*#__PURE__*/_jsx(RegisterScreen,{onRegister:handleRegister,onGoToLogin:()=>setCurrentPage('auth')})});}return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Cargando...\"}),children:/*#__PURE__*/_jsx(AuthScreen,{onLogin:handleLogin,onGoToRegister:()=>setCurrentPage('register')})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-100 font-sans antialiased\",children:[/*#__PURE__*/_jsx(LayoutHeader,{title:getHeaderTitle(),onBackClick:handleBack,showBackButton:currentPage!=='adminClientDashboard'&&currentPage!=='clientDashboard'&&currentPage!=='auth'&&currentPage!=='register'}),/*#__PURE__*/_jsxs(\"main\",{className:\"p-6 max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsxs(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Cargando contenido...\"}),children:[currentUser.role==='admin'&&/*#__PURE__*/_jsxs(_Fragment,{children:[currentPage==='adminClientDashboard'&&/*#__PURE__*/_jsx(ClientDashboardAdmin,{clients:memoizedClients,onSelectClient:handleSelectClient}),currentPage==='routines'&&selectedClient&&/*#__PURE__*/_jsx(ClientRoutineList,{client:selectedClient,routines:memoizedRoutines.filter(r=>r.clientId===selectedClient.id),onSelectRoutine:handleSelectRoutine,onAddRoutine:handleAddRoutine,isEditable:true,onDeleteRoutine:handleDeleteRoutine,onUpdateRoutine:handleUpdateRoutineFromList}),currentPage==='routineDetail'&&selectedRoutine&&/*#__PURE__*/_jsx(RoutineDetail,{routine:selectedRoutine,onUpdateRoutine:handleUpdateRoutine,isEditable:true,onAddExerciseClick:()=>setCurrentPage('addExercise')}),currentPage==='addExercise'&&/*#__PURE__*/_jsx(AddExerciseScreen,{onAddExercise:handleAddExerciseToRoutine,onBack:()=>setCurrentPage('routineDetail')}),currentPage==='userManagement'&&/*#__PURE__*/_jsx(UserManagementScreen,{users:memoizedUsers,onDeleteUser:handleDeleteUser,onResetPassword:handleResetUserPassword}),currentPage==='adminClientDashboard'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddClient,className:\"w-full bg-black text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md mb-4\",children:\"Agregar Nuevo Cliente\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('userManagement'),className:\"w-full bg-gray-700 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\",children:\"Administrar Usuarios\"})]}),currentPage==='routineDetail'&&selectedRoutine&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAssignRoutineModal(true),className:\"w-full mt-4 bg-blue-600 text-white py-3 rounded-xl hover:bg-blue-700 transition-colors font-semibold shadow-md\",children:\"Asignar Rutina a Cliente\"})]}),currentUser.role==='client'&&/*#__PURE__*/_jsxs(_Fragment,{children:[currentPage==='clientDashboard'&&selectedClient&&/*#__PURE__*/_jsx(ClientRoutineList,{client:selectedClient,routines:memoizedRoutines.filter(r=>r.clientId===selectedClient.id),onSelectRoutine:handleSelectRoutine,onAddRoutine:()=>{},isEditable:false,onUpdateRoutine:handleUpdateRoutineFromList}),currentPage==='routineDetail'&&selectedRoutine&&/*#__PURE__*/_jsx(RoutineDetail,{routine:selectedRoutine,onUpdateRoutine:handleUpdateRoutine,isEditable:false})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"w-full mt-8 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\",style:{backgroundColor:'#183E0C'},children:\"Cerrar Sesi\\xF3n\"})]}),showAssignRoutineModal&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Cargando modal...\"}),children:/*#__PURE__*/_jsx(AssignRoutineModal,{clients:memoizedClients,onAssign:handleAssignRoutine,onClose:()=>setShowAssignRoutineModal(false)})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Suspense","lazy","LayoutHeader","defaultClients","defaultRoutines","defaultUsers","generateUniqueId","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ClientRoutineList","RoutineDetail","AuthScreen","RegisterScreen","AddExerciseScreen","AssignRoutineModal","UserManagementScreen","ClientDashboardAdmin","App","currentPage","setCurrentPage","selectedClient","setSelectedClient","selectedRoutine","setSelectedRoutine","clients","setClients","routines","setRoutines","currentUser","setCurrentUser","users","setUsers","showAssignRoutineModal","setShowAssignRoutineModal","memoizedClients","memoizedUsers","memoizedRoutines","handleLogin","email","password","method","roleAttempt","user","find","u","role","clientData","c","alert","googleUser","handleRegister","userData","some","newUser","id","prevUsers","newClient","name","fullName","lastRoutine","progress","age","weight","height","goals","split","map","goal","trim","phone","prevClients","handleLogout","handleSelectClient","client","handleSelectRoutine","routine","handleBack","handleAddRoutine","newRoutine","prevRoutines","handleUpdateRoutine","updatedRoutine","r","handleAddExerciseToRoutine","newExerciseData","exercises","handleDeleteClient","clientId","window","confirm","filter","handleDeleteRoutine","routineId","clientRoutines","newLastRoutineName","length","handleDeleteUser","userId","handleResetUserPassword","newPassword","handleAddClient","newClientName","prompt","newClientEmail","handleAssignRoutine","_memoizedClients$find","handleUpdateRoutineFromList","getHeaderTitle","isRoutineEditable","fallback","children","onRegister","onGoToLogin","onLogin","onGoToRegister","className","title","onBackClick","showBackButton","onSelectClient","onSelectRoutine","onAddRoutine","isEditable","onDeleteRoutine","onUpdateRoutine","onAddExerciseClick","onAddExercise","onBack","onDeleteUser","onResetPassword","onClick","style","backgroundColor","onAssign","onClose"],"sources":["C:/Users/feder/OneDrive/Escritorio/DS_entrenamiento/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, Suspense, lazy } from 'react';\nimport LayoutHeader from './components/LayoutHeader';\nimport { defaultClients, defaultRoutines } from './mock/clients';\nimport { defaultUsers } from './mock/users';\nimport { generateUniqueId } from './utils/helpers';\n\n// Implementación de Lazy Loading para componentes grandes o que no se cargan al inicio\nconst ClientRoutineList = lazy(() => import('./components/ClientRoutineList'));\nconst RoutineDetail = lazy(() => import('./components/RoutineDetail'));\nconst AuthScreen = lazy(() => import('./components/AuthScreen'));\nconst RegisterScreen = lazy(() => import('./components/RegisterScreen'));\nconst AddExerciseScreen = lazy(() => import('./components/AddExerciseScreen'));\nconst AssignRoutineModal = lazy(() => import('./components/AssignRoutineModal'));\nconst UserManagementScreen = lazy(() => import('./components/UserManagementScreen'));\nconst ClientDashboardAdmin = lazy(() => import('./components/ClientDashboardAdmin'));\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('auth');\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [selectedRoutine, setSelectedRoutine] = useState(null);\n  const [clients, setClients] = useState(defaultClients);\n  const [routines, setRoutines] = useState(defaultRoutines);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState(defaultUsers);\n  const [showAssignRoutineModal, setShowAssignRoutineModal] = useState(false);\n\n  // Memoizar los datos de clientes y usuarios si no cambian con frecuencia\n  const memoizedClients = useMemo(() => clients, [clients]);\n  const memoizedUsers = useMemo(() => users, [users]);\n  const memoizedRoutines = useMemo(() => routines, [routines]);\n\n  // Usar useCallback para funciones que se pasan como props para evitar re-renders innecesarios\n  const handleLogin = useCallback((email, password, method, roleAttempt) => {\n    if (method === 'email') {\n      const user = memoizedUsers.find(u => u.email === email && u.password === password);\n      if (user) {\n        // Aquí se modifica la lógica para que el rol del usuario determine la página de inicio\n        setCurrentUser(user);\n        if (user.role === 'client') {\n          const clientData = memoizedClients.find(c => c.email === user.email);\n          if (clientData) {\n            setSelectedClient(clientData);\n            setCurrentPage('clientDashboard');\n          } else {\n            alert('No se encontraron datos de cliente para este usuario. Por favor, contacta a tu entrenador.');\n            setCurrentUser(null); // Si no hay datos de cliente, no se loguea\n          }\n        } else if (user.role === 'admin') {\n          setCurrentPage('adminClientDashboard');\n        }\n      } else {\n        alert('Credenciales incorrectas.');\n      }\n    } else if (method === 'google') {\n      // Lógica para Google, asumiendo que siempre es admin para este ejemplo\n      const googleUser = memoizedUsers.find(u => u.email === 'trainer@example.com'); // Asumiendo un usuario admin para Google\n      if (googleUser) {\n        setCurrentUser(googleUser);\n        setCurrentPage('adminClientDashboard');\n      } else {\n        alert('Error al iniciar sesión con Google.');\n      }\n    }\n  }, [memoizedUsers, memoizedClients]);\n\n  const handleRegister = useCallback((userData) => {\n    if (memoizedUsers.some(u => u.email === userData.email)) {\n      alert('Este email ya está registrado.');\n      return;\n    }\n\n    const newUser = {\n      id: generateUniqueId(),\n      email: userData.email,\n      password: userData.password,\n      role: 'client',\n    };\n    setUsers((prevUsers) => [...prevUsers, newUser]);\n\n    const newClient = {\n      id: newUser.id,\n      name: userData.fullName,\n      email: userData.email,\n      lastRoutine: 'Sin rutinas',\n      progress: 0,\n      age: userData.age,\n      weight: userData.weight,\n      height: userData.height,\n      goals: userData.goals.split(',').map(goal => goal.trim()),\n      phone: userData.phone,\n    };\n    setClients((prevClients) => [...prevClients, newClient]);\n\n    alert('Registro exitoso. Por favor, inicia sesión.');\n    setCurrentPage('auth');\n  }, [memoizedUsers]);\n\n  const handleLogout = useCallback(() => {\n    setCurrentUser(null);\n    setSelectedClient(null);\n    setSelectedRoutine(null);\n    setCurrentPage('auth');\n  }, []);\n\n  const handleSelectClient = useCallback((client) => {\n    setSelectedClient(client);\n    setCurrentPage('routines');\n  }, []);\n\n  const handleSelectRoutine = useCallback((routine) => {\n    setSelectedRoutine(routine);\n    setCurrentPage('routineDetail');\n  }, []);\n\n  const handleBack = useCallback(() => {\n    if (currentPage === 'routineDetail') {\n      if (currentUser && currentUser.role === 'client') {\n        setCurrentPage('clientDashboard');\n      } else {\n        setCurrentPage('routines');\n      }\n      setSelectedRoutine(null);\n    } else if (currentPage === 'routines') {\n      if (currentUser && currentUser.role === 'client') {\n        setCurrentPage('clientDashboard');\n      } else {\n        setCurrentPage('adminClientDashboard');\n        setSelectedClient(null);\n      }\n    } else if (currentPage === 'clientDashboard') {\n      handleLogout();\n    } else if (currentPage === 'addExercise') {\n      setCurrentPage('routineDetail');\n    } else if (currentPage === 'userManagement') {\n      setCurrentPage('adminClientDashboard');\n    } else if (currentPage === 'adminClientDashboard') {\n      handleLogout();\n    }\n  }, [currentPage, currentUser, handleLogout]);\n\n  const handleAddRoutine = useCallback((newRoutine) => {\n    setRoutines((prevRoutines) => [...prevRoutines, newRoutine]);\n    if (selectedClient && selectedClient.lastRoutine === 'Sin rutinas') {\n      setClients((prevClients) =>\n        prevClients.map((c) =>\n          c.id === selectedClient.id ? { ...c, lastRoutine: newRoutine.name } : c\n        )\n      );\n    }\n  }, [selectedClient]);\n\n  const handleUpdateRoutine = useCallback((updatedRoutine) => {\n    setRoutines((prevRoutines) =>\n      prevRoutines.map((r) => (r.id === updatedRoutine.id ? updatedRoutine : r))\n    );\n    // Actualizar selectedRoutine si es la rutina que se está viendo\n    if (selectedRoutine && selectedRoutine.id === updatedRoutine.id) {\n      setSelectedRoutine(updatedRoutine);\n    }\n    if (selectedClient && selectedRoutine && selectedRoutine.id === updatedRoutine.id) {\n      setClients((prevClients) =>\n        prevClients.map((c) =>\n          c.id === selectedClient.id ? { ...c, lastRoutine: updatedRoutine.name } : c\n        )\n      );\n    }\n  }, [selectedClient, selectedRoutine]);\n\n  const handleAddExerciseToRoutine = useCallback((newExerciseData) => {\n    if (selectedRoutine) {\n      const updatedRoutine = {\n        ...selectedRoutine,\n        exercises: [...selectedRoutine.exercises, newExerciseData],\n      };\n      handleUpdateRoutine(updatedRoutine);\n      // setSelectedRoutine(updatedRoutine); // Esto ya lo hace handleUpdateRoutine si es la rutina seleccionada\n    }\n  }, [selectedRoutine, handleUpdateRoutine]);\n\n  const handleDeleteClient = useCallback((clientId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar a este cliente y todas sus rutinas?')) {\n      setClients((prevClients) => prevClients.filter(client => client.id !== clientId));\n      setUsers((prevUsers) => prevUsers.filter(user => user.id !== clientId));\n      setRoutines((prevRoutines) => prevRoutines.filter(routine => routine.clientId !== clientId));\n      setSelectedClient(null);\n      setSelectedRoutine(null);\n      setCurrentPage('adminClientDashboard');\n      alert('Cliente eliminado exitosamente.');\n    }\n  }, []);\n\n  const handleDeleteRoutine = useCallback((routineId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar esta rutina?')) {\n      setRoutines((prevRoutines) => prevRoutines.filter(routine => routine.id !== routineId));\n      if (selectedClient) {\n        const clientRoutines = routines.filter(r => r.clientId === selectedClient.id && r.id !== routineId);\n        const newLastRoutineName = clientRoutines.length > 0 ? clientRoutines[clientRoutines.length - 1].name : 'Sin rutinas';\n        setClients((prevClients) =>\n          prevClients.map((c) =>\n            c.id === selectedClient.id ? { ...c, lastRoutine: newLastRoutineName } : c\n          )\n        );\n      }\n      setSelectedRoutine(null);\n      setCurrentPage('routines');\n      alert('Rutina eliminada exitosamente.');\n    }\n  }, [selectedClient, routines]);\n\n  const handleDeleteUser = useCallback((userId) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar a este usuario? Esto también eliminará sus datos de cliente y rutinas asociadas.')) {\n      setUsers((prevUsers) => prevUsers.filter(user => user.id !== userId));\n      setClients((prevClients) => prevClients.filter(client => client.id !== userId));\n      setRoutines((prevRoutines) => prevRoutines.filter(routine => routine.clientId !== userId));\n      alert('Usuario eliminado exitosamente.');\n    }\n  }, []);\n\n  const handleResetUserPassword = useCallback((userId, newPassword) => {\n    setUsers((prevUsers) =>\n      prevUsers.map((user) =>\n        user.id === userId ? { ...user, password: newPassword } : user\n      )\n    );\n    alert('Contraseña restablecida exitosamente.');\n  }, []);\n\n  const handleAddClient = useCallback(() => {\n    const newClientName = prompt('Ingresa el nombre del nuevo cliente:');\n    if (newClientName) {\n      const newClientEmail = prompt('Ingresa el email del nuevo cliente:');\n      if (newClientEmail) {\n        const newClient = {\n          id: generateUniqueId(),\n          name: newClientName,\n          email: newClientEmail,\n          lastRoutine: 'Sin rutinas',\n          progress: 0,\n          age: null,\n          weight: null,\n          height: null,\n          goals: [],\n          phone: '',\n        };\n        setClients((prevClients) => [...prevClients, newClient]);\n        setUsers((prevUsers) => [...prevUsers, { id: newClient.id, email: newClient.email, password: 'password123', role: 'client' }]);\n      }\n    }\n  }, []);\n\n  const handleAssignRoutine = useCallback((clientId) => {\n    if (selectedRoutine) {\n      const updatedRoutine = { ...selectedRoutine, clientId: clientId };\n      handleUpdateRoutine(updatedRoutine);\n      alert(`Rutina \"${selectedRoutine.name}\" asignada a ${memoizedClients.find(c => c.id === clientId)?.name || 'un cliente'}.`);\n      setShowAssignRoutineModal(false);\n    }\n  }, [selectedRoutine, handleUpdateRoutine, memoizedClients]);\n\n  // Nueva función para actualizar una rutina desde ClientRoutineList\n  const handleUpdateRoutineFromList = useCallback((updatedRoutine) => {\n    setRoutines((prevRoutines) =>\n      prevRoutines.map((r) => (r.id === updatedRoutine.id ? updatedRoutine : r))\n    );\n  }, []);\n\n  const getHeaderTitle = useCallback(() => {\n    if (!currentUser) {\n      if (currentPage === 'auth') return 'Iniciar Sesión';\n      if (currentPage === 'register') return 'Registrarse';\n    }\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'adminClientDashboard') return 'Administración de Clientes';\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'routines' && selectedClient) return `Rutinas de ${selectedClient.name}`;\n    if (currentPage === 'routineDetail' && selectedRoutine) return selectedRoutine.name;\n    if (currentUser && currentUser.role === 'client' && currentPage === 'clientDashboard') return `Mis Rutinas`;\n    if (currentPage === 'addExercise') return 'Agregar Ejercicio';\n    if (currentUser && currentUser.role === 'admin' && currentPage === 'userManagement') return 'Gestión de Usuarios';\n    return 'DS Entrenamiento';\n  }, [currentPage, currentUser, selectedClient, selectedRoutine]);\n\n  const isRoutineEditable = currentUser && currentUser.role === 'admin';\n\n  if (!currentUser) {\n    if (currentPage === 'register') {\n      return (\n        <Suspense fallback={<div>Cargando...</div>}>\n          <RegisterScreen onRegister={handleRegister} onGoToLogin={() => setCurrentPage('auth')} />\n        </Suspense>\n      );\n    }\n    return (\n      <Suspense fallback={<div>Cargando...</div>}>\n        <AuthScreen onLogin={handleLogin} onGoToRegister={() => setCurrentPage('register')} />\n      </Suspense>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 font-sans antialiased\">\n      <LayoutHeader\n        title={getHeaderTitle()}\n        onBackClick={handleBack}\n        showBackButton={currentPage !== 'adminClientDashboard' && currentPage !== 'clientDashboard' && currentPage !== 'auth' && currentPage !== 'register'}\n      />\n\n      <main className=\"p-6 max-w-4xl mx-auto\">\n        <Suspense fallback={<div>Cargando contenido...</div>}>\n          {/* Sección para el Coach (Administrador) */}\n          {currentUser.role === 'admin' && (\n            <>\n              {currentPage === 'adminClientDashboard' && (\n                <ClientDashboardAdmin\n                  clients={memoizedClients}\n                  onSelectClient={handleSelectClient}\n                />\n              )}\n\n              {currentPage === 'routines' && selectedClient && (\n                <ClientRoutineList\n                  client={selectedClient}\n                  routines={memoizedRoutines.filter(r => r.clientId === selectedClient.id)}\n                  onSelectRoutine={handleSelectRoutine}\n                  onAddRoutine={handleAddRoutine}\n                  isEditable={true}\n                  onDeleteRoutine={handleDeleteRoutine}\n                  onUpdateRoutine={handleUpdateRoutineFromList}\n                />\n              )}\n\n              {currentPage === 'routineDetail' && selectedRoutine && (\n                <RoutineDetail\n                  routine={selectedRoutine}\n                  onUpdateRoutine={handleUpdateRoutine}\n                  isEditable={true}\n                  onAddExerciseClick={() => setCurrentPage('addExercise')}\n                />\n              )}\n\n              {currentPage === 'addExercise' && (\n                <AddExerciseScreen\n                  onAddExercise={handleAddExerciseToRoutine}\n                  onBack={() => setCurrentPage('routineDetail')}\n                />\n              )}\n\n              {currentPage === 'userManagement' && (\n                <UserManagementScreen\n                  users={memoizedUsers}\n                  onDeleteUser={handleDeleteUser}\n                  onResetPassword={handleResetUserPassword}\n                />\n              )}\n\n              {/* Botones de acción para el admin, visibles solo en el dashboard principal del admin */}\n              {currentPage === 'adminClientDashboard' && (\n                <>\n                  <button\n                    onClick={handleAddClient}\n                    className=\"w-full bg-black text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md mb-4\"\n                  >\n                    Agregar Nuevo Cliente\n                  </button>\n                  <button\n                    onClick={() => setCurrentPage('userManagement')}\n                    className=\"w-full bg-gray-700 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\"\n                  >\n                    Administrar Usuarios\n                  </button>\n                </>\n              )}\n              {currentPage === 'routineDetail' && selectedRoutine && (\n                <button\n                  onClick={() => setShowAssignRoutineModal(true)}\n                  className=\"w-full mt-4 bg-blue-600 text-white py-3 rounded-xl hover:bg-blue-700 transition-colors font-semibold shadow-md\"\n                >\n                  Asignar Rutina a Cliente\n                </button>\n              )}\n            </>\n          )}\n\n          {/* Sección para el Cliente */}\n          {currentUser.role === 'client' && (\n            <>\n              {currentPage === 'clientDashboard' && selectedClient && (\n                <ClientRoutineList\n                  client={selectedClient}\n                  routines={memoizedRoutines.filter(r => r.clientId === selectedClient.id)}\n                  onSelectRoutine={handleSelectRoutine}\n                  onAddRoutine={() => {}}\n                  isEditable={false}\n                  onUpdateRoutine={handleUpdateRoutineFromList}\n                />\n              )}\n\n              {currentPage === 'routineDetail' && selectedRoutine && (\n                <RoutineDetail routine={selectedRoutine} onUpdateRoutine={handleUpdateRoutine} isEditable={false} />\n              )}\n            </>\n          )}\n        </Suspense>\n\n        <button\n          onClick={handleLogout}\n          className=\"w-full mt-8 text-white py-3 rounded-xl hover:bg-gray-800 transition-colors font-semibold shadow-md\"\n          style={{ backgroundColor: '#183E0C' }}\n        >\n          Cerrar Sesión\n        </button>\n      </main>\n\n      {showAssignRoutineModal && (\n        <Suspense fallback={<div>Cargando modal...</div>}>\n          <AssignRoutineModal\n            clients={memoizedClients}\n            onAssign={handleAssignRoutine}\n            onClose={() => setShowAssignRoutineModal(false)}\n          />\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}